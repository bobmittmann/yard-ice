-- VHDL netlist generated by SCUBA Diamond (64-bit) 3.10.0.111.2
-- Module  Version: 1.2
--C:\lscc\diamond\3.10_x64\ispfpga\bin\nt64\scuba.exe -w -n efb -lang vhdl -synth lse -bus_exp 7 -bb -type efb -arch xo2c00 -freq 50 -i2c1config -i2c1_freq 100 -i2c1_sa 1000001 -i2c1_addr 7 -spi -spi_mode Both -spi_freq 1 -spi_cs 1 -tc -tc_mode WATCHDOG -tc_o TOGGLE -tc_div 1 -tc_top 65535 -tc_ocr 32767 -tc_oflow -tc_ctr -pll1 -pll2 -ufm -ufm_ebr 765 -mem_size 2 -ufm_0 -wb -dev 4000 

-- Wed Apr 11 14:59:58 2018

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library MACHXO2;
use MACHXO2.components.all;
-- synopsys translate_on

entity efb is
    port (
        wb_clk_i: in  std_logic; 
        wb_rst_i: in  std_logic; 
        wb_cyc_i: in  std_logic; 
        wb_stb_i: in  std_logic; 
        wb_we_i: in  std_logic; 
        wb_adr_i: in  std_logic_vector(7 downto 0); 
        wb_dat_i: in  std_logic_vector(7 downto 0); 
        wb_dat_o: out  std_logic_vector(7 downto 0); 
        wb_ack_o: out  std_logic; 
        i2c1_scl: inout  std_logic; 
        i2c1_sda: inout  std_logic; 
        i2c1_irqo: out  std_logic; 
        spi_clk: inout  std_logic; 
        spi_miso: inout  std_logic; 
        spi_mosi: inout  std_logic; 
        spi_scsn: in  std_logic; 
        spi_csn: out  std_logic_vector(0 downto 0); 
        tc_clki: in  std_logic; 
        tc_rstn: in  std_logic; 
        tc_ic: in  std_logic; 
        tc_int: out  std_logic; 
        tc_oc: out  std_logic; 
        pll0_bus_i: in  std_logic_vector(8 downto 0); 
        pll0_bus_o: out  std_logic_vector(16 downto 0); 
        pll1_bus_i: in  std_logic_vector(8 downto 0); 
        pll1_bus_o: out  std_logic_vector(16 downto 0); 
        ufm_sn: in  std_logic; 
        wbc_ufm_irq: out  std_logic);
end efb;

architecture Structure of efb is

    -- internal signal declarations
    signal pll_bus_o16: std_logic;
    signal pll_bus_o15: std_logic;
    signal pll_bus_o13: std_logic;
    signal pll_bus_o12: std_logic;
    signal pll_bus_o11: std_logic;
    signal pll_bus_o10: std_logic;
    signal pll_bus_o9: std_logic;
    signal pll_bus_o8: std_logic;
    signal pll_bus_o7: std_logic;
    signal pll_bus_o6: std_logic;
    signal pll_bus_o5: std_logic;
    signal pll_bus_o4: std_logic;
    signal pll_bus_o3: std_logic;
    signal pll_bus_o2: std_logic;
    signal pll_bus_o1: std_logic;
    signal pll_bus_o0: std_logic;
    signal spi_mosi_oe: std_logic;
    signal spi_mosi_o: std_logic;
    signal spi_miso_oe: std_logic;
    signal spi_miso_o: std_logic;
    signal spi_clk_oe: std_logic;
    signal spi_clk_o: std_logic;
    signal spi_mosi_i: std_logic;
    signal spi_miso_i: std_logic;
    signal spi_clk_i: std_logic;
    signal scuba_vlo: std_logic;
    signal i2c1_sdaoen: std_logic;
    signal i2c1_sdao: std_logic;
    signal i2c1_scloen: std_logic;
    signal i2c1_sclo: std_logic;
    signal i2c1_sdai: std_logic;
    signal i2c1_scli: std_logic;

    -- local component declarations
    component VLO
        port (Z: out  std_logic);
    end component;
    component BB
        port (I: in  std_logic; T: in  std_logic; O: out  std_logic; 
            B: inout  std_logic);
    end component;
    component EFB
        generic (EFB_I2C1 : in String; EFB_I2C2 : in String; 
                EFB_SPI : in String; EFB_TC : in String; 
                EFB_TC_PORTMODE : in String; EFB_UFM : in String; 
                EFB_WB_CLK_FREQ : in String; DEV_DENSITY : in String; 
                UFM_INIT_PAGES : in Integer; 
                UFM_INIT_START_PAGE : in Integer; 
                UFM_INIT_ALL_ZEROS : in String; 
                UFM_INIT_FILE_NAME : in String; 
                UFM_INIT_FILE_FORMAT : in String; 
                I2C1_ADDRESSING : in String; I2C2_ADDRESSING : in String; 
                I2C1_SLAVE_ADDR : in String; I2C2_SLAVE_ADDR : in String; 
                I2C1_BUS_PERF : in String; I2C2_BUS_PERF : in String; 
                I2C1_CLK_DIVIDER : in Integer; 
                I2C2_CLK_DIVIDER : in Integer; I2C1_GEN_CALL : in String; 
                I2C2_GEN_CALL : in String; I2C1_WAKEUP : in String; 
                I2C2_WAKEUP : in String; SPI_MODE : in String; 
                SPI_CLK_DIVIDER : in Integer; SPI_LSB_FIRST : in String; 
                SPI_CLK_INV : in String; SPI_PHASE_ADJ : in String; 
                SPI_SLAVE_HANDSHAKE : in String; 
                SPI_INTR_TXRDY : in String; SPI_INTR_RXRDY : in String; 
                SPI_INTR_TXOVR : in String; SPI_INTR_RXOVR : in String; 
                SPI_WAKEUP : in String; TC_MODE : in String; 
                TC_SCLK_SEL : in String; TC_CCLK_SEL : in Integer; 
                GSR : in String; TC_TOP_SET : in Integer; 
                TC_OCR_SET : in Integer; TC_OC_MODE : in String; 
                TC_RESETN : in String; TC_TOP_SEL : in String; 
                TC_OV_INT : in String; TC_OCR_INT : in String; 
                TC_ICR_INT : in String; TC_OVERFLOW : in String; 
                TC_ICAPTURE : in String);
        port (WBCLKI: in  std_logic; WBRSTI: in  std_logic; 
            WBCYCI: in  std_logic; WBSTBI: in  std_logic; 
            WBWEI: in  std_logic; WBADRI7: in  std_logic; 
            WBADRI6: in  std_logic; WBADRI5: in  std_logic; 
            WBADRI4: in  std_logic; WBADRI3: in  std_logic; 
            WBADRI2: in  std_logic; WBADRI1: in  std_logic; 
            WBADRI0: in  std_logic; WBDATI7: in  std_logic; 
            WBDATI6: in  std_logic; WBDATI5: in  std_logic; 
            WBDATI4: in  std_logic; WBDATI3: in  std_logic; 
            WBDATI2: in  std_logic; WBDATI1: in  std_logic; 
            WBDATI0: in  std_logic; PLL0DATI7: in  std_logic; 
            PLL0DATI6: in  std_logic; PLL0DATI5: in  std_logic; 
            PLL0DATI4: in  std_logic; PLL0DATI3: in  std_logic; 
            PLL0DATI2: in  std_logic; PLL0DATI1: in  std_logic; 
            PLL0DATI0: in  std_logic; PLL0ACKI: in  std_logic; 
            PLL1DATI7: in  std_logic; PLL1DATI6: in  std_logic; 
            PLL1DATI5: in  std_logic; PLL1DATI4: in  std_logic; 
            PLL1DATI3: in  std_logic; PLL1DATI2: in  std_logic; 
            PLL1DATI1: in  std_logic; PLL1DATI0: in  std_logic; 
            PLL1ACKI: in  std_logic; I2C1SCLI: in  std_logic; 
            I2C1SDAI: in  std_logic; I2C2SCLI: in  std_logic; 
            I2C2SDAI: in  std_logic; SPISCKI: in  std_logic; 
            SPIMISOI: in  std_logic; SPIMOSII: in  std_logic; 
            SPISCSN: in  std_logic; TCCLKI: in  std_logic; 
            TCRSTN: in  std_logic; TCIC: in  std_logic; 
            UFMSN: in  std_logic; WBDATO7: out  std_logic; 
            WBDATO6: out  std_logic; WBDATO5: out  std_logic; 
            WBDATO4: out  std_logic; WBDATO3: out  std_logic; 
            WBDATO2: out  std_logic; WBDATO1: out  std_logic; 
            WBDATO0: out  std_logic; WBACKO: out  std_logic; 
            PLLCLKO: out  std_logic; PLLRSTO: out  std_logic; 
            PLL0STBO: out  std_logic; PLL1STBO: out  std_logic; 
            PLLWEO: out  std_logic; PLLADRO4: out  std_logic; 
            PLLADRO3: out  std_logic; PLLADRO2: out  std_logic; 
            PLLADRO1: out  std_logic; PLLADRO0: out  std_logic; 
            PLLDATO7: out  std_logic; PLLDATO6: out  std_logic; 
            PLLDATO5: out  std_logic; PLLDATO4: out  std_logic; 
            PLLDATO3: out  std_logic; PLLDATO2: out  std_logic; 
            PLLDATO1: out  std_logic; PLLDATO0: out  std_logic; 
            I2C1SCLO: out  std_logic; I2C1SCLOEN: out  std_logic; 
            I2C1SDAO: out  std_logic; I2C1SDAOEN: out  std_logic; 
            I2C2SCLO: out  std_logic; I2C2SCLOEN: out  std_logic; 
            I2C2SDAO: out  std_logic; I2C2SDAOEN: out  std_logic; 
            I2C1IRQO: out  std_logic; I2C2IRQO: out  std_logic; 
            SPISCKO: out  std_logic; SPISCKEN: out  std_logic; 
            SPIMISOO: out  std_logic; SPIMISOEN: out  std_logic; 
            SPIMOSIO: out  std_logic; SPIMOSIEN: out  std_logic; 
            SPIMCSN7: out  std_logic; SPIMCSN6: out  std_logic; 
            SPIMCSN5: out  std_logic; SPIMCSN4: out  std_logic; 
            SPIMCSN3: out  std_logic; SPIMCSN2: out  std_logic; 
            SPIMCSN1: out  std_logic; SPIMCSN0: out  std_logic; 
            SPICSNEN: out  std_logic; SPIIRQO: out  std_logic; 
            TCINT: out  std_logic; TCOC: out  std_logic; 
            WBCUFMIRQ: out  std_logic; CFGWAKE: out  std_logic; 
            CFGSTDBY: out  std_logic);
    end component;
    attribute syn_keep : boolean;
    attribute NGD_DRC_MASK : integer;
    attribute NGD_DRC_MASK of Structure : architecture is 1;

begin
    -- component instantiation statements
    BBspi_mosi: BB
        port map (I=>spi_mosi_o, T=>spi_mosi_oe, O=>spi_mosi_i, 
            B=>spi_mosi);

    BBspi_miso: BB
        port map (I=>spi_miso_o, T=>spi_miso_oe, O=>spi_miso_i, 
            B=>spi_miso);

    BBspi_clk: BB
        port map (I=>spi_clk_o, T=>spi_clk_oe, O=>spi_clk_i, B=>spi_clk);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    BB1_sda: BB
        port map (I=>i2c1_sdao, T=>i2c1_sdaoen, O=>i2c1_sdai, 
            B=>i2c1_sda);

    BB1_scl: BB
        port map (I=>i2c1_sclo, T=>i2c1_scloen, O=>i2c1_scli, 
            B=>i2c1_scl);

    EFBInst_0: EFB
        generic map (UFM_INIT_FILE_FORMAT=> "HEX", UFM_INIT_FILE_NAME=> "NONE", 
        UFM_INIT_ALL_ZEROS=> "ENABLED", UFM_INIT_START_PAGE=>  765, 
        UFM_INIT_PAGES=>  2, DEV_DENSITY=> "4000L", EFB_UFM=> "ENABLED", 
        TC_ICAPTURE=> "ENABLED", TC_OVERFLOW=> "DISABLED", TC_ICR_INT=> "OFF", 
        TC_OCR_INT=> "OFF", TC_OV_INT=> "ON", TC_TOP_SEL=> "ON", 
        TC_RESETN=> "ENABLED", TC_OC_MODE=> "TOGGLE", TC_OCR_SET=>  32767, 
        TC_TOP_SET=>  65535, GSR=> "ENABLED", TC_CCLK_SEL=>  1, TC_MODE=> "WATCHDOG", 
        TC_SCLK_SEL=> "PCLOCK", EFB_TC_PORTMODE=> "WB", EFB_TC=> "ENABLED", 
        SPI_WAKEUP=> "DISABLED", SPI_INTR_RXOVR=> "DISABLED", 
        SPI_INTR_TXOVR=> "DISABLED", SPI_INTR_RXRDY=> "DISABLED", 
        SPI_INTR_TXRDY=> "DISABLED", SPI_SLAVE_HANDSHAKE=> "DISABLED", 
        SPI_PHASE_ADJ=> "DISABLED", SPI_CLK_INV=> "DISABLED", 
        SPI_LSB_FIRST=> "DISABLED", SPI_CLK_DIVIDER=>  50, SPI_MODE=> "BOTH", 
        EFB_SPI=> "ENABLED", I2C2_WAKEUP=> "DISABLED", I2C2_GEN_CALL=> "DISABLED", 
        I2C2_CLK_DIVIDER=>  1, I2C2_BUS_PERF=> "100kHz", I2C2_SLAVE_ADDR=> "0b1000001", 
        I2C2_ADDRESSING=> "7BIT", EFB_I2C2=> "DISABLED", I2C1_WAKEUP=> "DISABLED", 
        I2C1_GEN_CALL=> "DISABLED", I2C1_CLK_DIVIDER=>  125, 
        I2C1_BUS_PERF=> "100kHz", I2C1_SLAVE_ADDR=> "0b1000001", 
        I2C1_ADDRESSING=> "7BIT", EFB_I2C1=> "ENABLED", EFB_WB_CLK_FREQ=> "50.0")
        port map (WBCLKI=>wb_clk_i, WBRSTI=>wb_rst_i, WBCYCI=>wb_cyc_i, 
            WBSTBI=>wb_stb_i, WBWEI=>wb_we_i, WBADRI7=>wb_adr_i(7), 
            WBADRI6=>wb_adr_i(6), WBADRI5=>wb_adr_i(5), 
            WBADRI4=>wb_adr_i(4), WBADRI3=>wb_adr_i(3), 
            WBADRI2=>wb_adr_i(2), WBADRI1=>wb_adr_i(1), 
            WBADRI0=>wb_adr_i(0), WBDATI7=>wb_dat_i(7), 
            WBDATI6=>wb_dat_i(6), WBDATI5=>wb_dat_i(5), 
            WBDATI4=>wb_dat_i(4), WBDATI3=>wb_dat_i(3), 
            WBDATI2=>wb_dat_i(2), WBDATI1=>wb_dat_i(1), 
            WBDATI0=>wb_dat_i(0), PLL0DATI7=>pll0_bus_i(8), 
            PLL0DATI6=>pll0_bus_i(7), PLL0DATI5=>pll0_bus_i(6), 
            PLL0DATI4=>pll0_bus_i(5), PLL0DATI3=>pll0_bus_i(4), 
            PLL0DATI2=>pll0_bus_i(3), PLL0DATI1=>pll0_bus_i(2), 
            PLL0DATI0=>pll0_bus_i(1), PLL0ACKI=>pll0_bus_i(0), 
            PLL1DATI7=>pll1_bus_i(8), PLL1DATI6=>pll1_bus_i(7), 
            PLL1DATI5=>pll1_bus_i(6), PLL1DATI4=>pll1_bus_i(5), 
            PLL1DATI3=>pll1_bus_i(4), PLL1DATI2=>pll1_bus_i(3), 
            PLL1DATI1=>pll1_bus_i(2), PLL1DATI0=>pll1_bus_i(1), 
            PLL1ACKI=>pll1_bus_i(0), I2C1SCLI=>i2c1_scli, 
            I2C1SDAI=>i2c1_sdai, I2C2SCLI=>scuba_vlo, 
            I2C2SDAI=>scuba_vlo, SPISCKI=>spi_clk_i, 
            SPIMISOI=>spi_miso_i, SPIMOSII=>spi_mosi_i, 
            SPISCSN=>spi_scsn, TCCLKI=>tc_clki, TCRSTN=>tc_rstn, 
            TCIC=>tc_ic, UFMSN=>ufm_sn, WBDATO7=>wb_dat_o(7), 
            WBDATO6=>wb_dat_o(6), WBDATO5=>wb_dat_o(5), 
            WBDATO4=>wb_dat_o(4), WBDATO3=>wb_dat_o(3), 
            WBDATO2=>wb_dat_o(2), WBDATO1=>wb_dat_o(1), 
            WBDATO0=>wb_dat_o(0), WBACKO=>wb_ack_o, PLLCLKO=>pll_bus_o16, 
            PLLRSTO=>pll_bus_o15, PLL0STBO=>pll0_bus_o(14), 
            PLL1STBO=>pll1_bus_o(14), PLLWEO=>pll_bus_o13, 
            PLLADRO4=>pll_bus_o12, PLLADRO3=>pll_bus_o11, 
            PLLADRO2=>pll_bus_o10, PLLADRO1=>pll_bus_o9, 
            PLLADRO0=>pll_bus_o8, PLLDATO7=>pll_bus_o7, 
            PLLDATO6=>pll_bus_o6, PLLDATO5=>pll_bus_o5, 
            PLLDATO4=>pll_bus_o4, PLLDATO3=>pll_bus_o3, 
            PLLDATO2=>pll_bus_o2, PLLDATO1=>pll_bus_o1, 
            PLLDATO0=>pll_bus_o0, I2C1SCLO=>i2c1_sclo, 
            I2C1SCLOEN=>i2c1_scloen, I2C1SDAO=>i2c1_sdao, 
            I2C1SDAOEN=>i2c1_sdaoen, I2C2SCLO=>open, I2C2SCLOEN=>open, 
            I2C2SDAO=>open, I2C2SDAOEN=>open, I2C1IRQO=>i2c1_irqo, 
            I2C2IRQO=>open, SPISCKO=>spi_clk_o, SPISCKEN=>spi_clk_oe, 
            SPIMISOO=>spi_miso_o, SPIMISOEN=>spi_miso_oe, 
            SPIMOSIO=>spi_mosi_o, SPIMOSIEN=>spi_mosi_oe, SPIMCSN7=>open, 
            SPIMCSN6=>open, SPIMCSN5=>open, SPIMCSN4=>open, 
            SPIMCSN3=>open, SPIMCSN2=>open, SPIMCSN1=>open, 
            SPIMCSN0=>spi_csn(0), SPICSNEN=>open, SPIIRQO=>open, 
            TCINT=>tc_int, TCOC=>tc_oc, WBCUFMIRQ=>wbc_ufm_irq, 
            CFGWAKE=>open, CFGSTDBY=>open);

    pll0_bus_o(16) <= pll_bus_o16;
    pll0_bus_o(15) <= pll_bus_o15;
    pll0_bus_o(13) <= pll_bus_o13;
    pll1_bus_o(16) <= pll_bus_o16;
    pll1_bus_o(15) <= pll_bus_o15;
    pll1_bus_o(13) <= pll_bus_o13;
    pll0_bus_o(12) <= pll_bus_o12;
    pll1_bus_o(12) <= pll_bus_o12;
    pll0_bus_o(11) <= pll_bus_o11;
    pll1_bus_o(11) <= pll_bus_o11;
    pll0_bus_o(10) <= pll_bus_o10;
    pll1_bus_o(10) <= pll_bus_o10;
    pll0_bus_o(9) <= pll_bus_o9;
    pll1_bus_o(9) <= pll_bus_o9;
    pll0_bus_o(8) <= pll_bus_o8;
    pll1_bus_o(8) <= pll_bus_o8;
    pll0_bus_o(7) <= pll_bus_o7;
    pll1_bus_o(7) <= pll_bus_o7;
    pll0_bus_o(6) <= pll_bus_o6;
    pll1_bus_o(6) <= pll_bus_o6;
    pll0_bus_o(5) <= pll_bus_o5;
    pll1_bus_o(5) <= pll_bus_o5;
    pll0_bus_o(4) <= pll_bus_o4;
    pll1_bus_o(4) <= pll_bus_o4;
    pll0_bus_o(3) <= pll_bus_o3;
    pll1_bus_o(3) <= pll_bus_o3;
    pll0_bus_o(2) <= pll_bus_o2;
    pll1_bus_o(2) <= pll_bus_o2;
    pll0_bus_o(1) <= pll_bus_o1;
    pll1_bus_o(1) <= pll_bus_o1;
    pll0_bus_o(0) <= pll_bus_o0;
    pll1_bus_o(0) <= pll_bus_o0;
end Structure;
