
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.10.0.111.2

// ldbanno -n Verilog -o yardice2_rev2_mapvo.vo -w -neg -gui yardice2_rev2_map.ncd 
// Netlist created on Wed Apr 11 14:47:36 2018
// Netlist written on Wed Apr 11 14:47:42 2018
// Design is for device LCMXO2-4000HE
// Design is for package TQFP144
// Design is for performance grade 5

`timescale 1 ns / 1 ps

module yard_ice ( mclk, fsmc_d, fsmc_clk, fsmc_noe, fsmc_nwe, fsmc_nce, irq, 
                  uart_rx, uart_tx, tp_dbgrq, tp_dbgack, tp_tdo, tp_tck, 
                  tp_tdi, tp_tms, tp_rtck, tp_trst, tp_rst, led_1, led_2, 
                  clk_aux );
  input  mclk, fsmc_clk, fsmc_noe, fsmc_nwe, fsmc_nce, uart_tx, tp_dbgack, 
         tp_tdo, tp_rtck, clk_aux;
  output irq, uart_rx, tp_dbgrq, tp_tck, tp_tdi, tp_tms, tp_trst, tp_rst, 
         led_1, led_2;
  inout  [15:0] fsmc_d;
  wire   \cklgen_1khz/s_count_6 , \cklgen_1khz/s_count_5 , \cklgen_1khz/n39 , 
         \cklgen_1khz/n40 , s_1mhz_stb, \cklgen_1khz/n4050 , mclk_c, 
         \cklgen_1khz/n6451 , \cklgen_1khz/n6452 , \cklgen_1khz/s_count_9 , 
         \cklgen_1khz/n36 , \cklgen_1khz/n6453 , \cklgen_1khz/s_count_8 , 
         \cklgen_1khz/s_count_7 , \cklgen_1khz/n37 , \cklgen_1khz/n38 , 
         \cklgen_1khz/s_count_2 , \cklgen_1khz/s_count_1 , \cklgen_1khz/n43 , 
         \cklgen_1khz/n44 , \cklgen_1khz/n6449 , \cklgen_1khz/n6450 , 
         \cklgen_1khz/s_count_0 , \cklgen_1khz/n45 , \cklgen_1khz/s_count_4 , 
         \cklgen_1khz/s_count_3 , \cklgen_1khz/n41 , \cklgen_1khz/n42 , 
         \cklgen_1mhz/s_count_0 , \cklgen_1mhz/n29 , \cklgen_1mhz/n4033 , 
         \cklgen_1mhz/n6446 , \cklgen_1mhz/s_count_5 , \cklgen_1mhz/n24 , 
         \cklgen_1mhz/n6448 , \cklgen_1mhz/s_count_4 , \cklgen_1mhz/s_count_3 , 
         \cklgen_1mhz/n25 , \cklgen_1mhz/n26 , \cklgen_1mhz/n6447 , 
         \cklgen_1mhz/s_count_2 , \cklgen_1mhz/s_count_1 , \cklgen_1mhz/n27 , 
         \cklgen_1mhz/n28 , s_desc_data_19, \shifter/tx/s_sum_9 , 
         \shifter/n8858 , s_desc_data_18, \shifter/tx/s_sum_8 , s_addr_0_9, 
         s_addr_0_8, \shifter/tx/n6498 , \shifter/tx/s_addr_r_8 , 
         \shifter/tx/s_addr_r_9 , s_desc_data_17, \shifter/tx/s_sum_7 , 
         s_desc_data_16, \shifter/tx/s_sum_6 , s_addr_0_7, s_addr_0_6, 
         \shifter/tx/n6497 , \shifter/tx/s_addr_r_6 , \shifter/tx/s_addr_r_7 , 
         s_desc_data_15, \shifter/tx/s_sum_5 , \shifter/tx/n2222 , 
         s_desc_data_14, \shifter/tx/s_sum_4 , \shifter/tx/n2223 , s_addr_0_5, 
         s_addr_0_4, \shifter/tx/n6496 , \shifter/tx/s_addr_r_4 , 
         \shifter/tx/s_addr_r_5 , s_desc_data_13, \shifter/tx/s_sum_3 , 
         \shifter/tx/n2224 , s_desc_data_12, \shifter/tx/s_sum_2 , 
         \shifter/tx/n2225 , s_addr_0_3, s_addr_0_2, \shifter/tx/n6495 , 
         \shifter/tx/s_addr_r_2 , \shifter/tx/s_addr_r_3 , s_desc_data_11, 
         \shifter/tx/s_sum_1 , \shifter/tx/n2226 , s_desc_data_10, 
         \shifter/tx/s_sum_0 , \shifter/tx/n2227 , s_addr_0_1, s_addr_0_0, 
         \shifter/tx/n6494 , \shifter/tx/s_addr_r_0 , \shifter/tx/s_addr_r_1 , 
         \shifter/n8217 , \shifter/s_en_r1 , \shifter/rx/s_op0.addr_1 , 
         \shifter/rx/s_op0.addr_0 , \shifter/mclk_c_enable_219 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_0 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_1 , s_ptr_data_7, 
         \shifter/rx/s_op0.addr_3 , \shifter/rx/s_op0.addr_2 , 
         \shifter/mclk_c_enable_243 , \shifter/shift_ctrl/n6503 , 
         \shifter/shift_ctrl/s_stop_N_1313_7 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_2 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_3 , s_ptr_data_6, s_ptr_data_5, 
         \shifter/shift_ctrl/n6502 , \shifter/shift_ctrl/s_stop_N_1313_5 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_0 , 
         \shifter/shift_ctrl/s_stop_N_1313_6 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_1 , s_ptr_data_4, s_ptr_data_3, 
         \shifter/rx/s_addr_r1_9 , \shifter/rx/s_addr_r1_8 , 
         \shifter/mclk_c_enable_204 , \shifter/shift_ctrl/n6501 , 
         \shifter/shift_ctrl/s_stop_N_1313_3 , s_rx_mem_addr_8, 
         \shifter/shift_ctrl/s_stop_N_1313_4 , s_rx_mem_addr_9, s_ptr_data_2, 
         s_ptr_data_1, \shifter/rx/s_addr_r1_7 , \shifter/rx/s_addr_r1_6 , 
         \shifter/shift_ctrl/n6500 , \shifter/shift_ctrl/s_stop_N_1313_1 , 
         s_rx_mem_addr_6, \shifter/shift_ctrl/s_stop_N_1313_2 , 
         s_rx_mem_addr_7, s_ptr_data_0, \shifter/rx/s_addr_r1_5 , 
         \shifter/rx/s_addr_r1_4 , s_rx_mem_addr_4, 
         \shifter/shift_ctrl/s_stop_N_1313_0 , s_rx_mem_addr_5, 
         \shifter/s_offs_r_0 , \shifter/s_offs_r_1 , s_desc_data_9, 
         s_desc_data_8, \shifter/mclk_c_enable_231 , 
         \shifter/shift_ctrl/n6406 , \shifter/rx/s_op_fifo.buf_1_.len_8 , 
         \shifter/shift_ctrl/s_stop_N_1312 , 
         \shifter/rx/s_op_fifo.buf_1_.len_9 , \shifter/shift_ctrl/s_offs_r_2 , 
         \shifter/shift_ctrl/s_offs_r_3 , \shifter/shift_ctrl/s_offs_r_4 , 
         \shifter/shift_ctrl/s_offs_r_5 , s_desc_data_7, s_desc_data_6, 
         \shifter/shift_ctrl/n6405 , \shifter/rx/s_op_fifo.buf_1_.len_6 , 
         \shifter/rx/s_op_fifo.buf_1_.len_7 , \shifter/shift_ctrl/s_offs_r_6 , 
         \shifter/shift_ctrl/s_offs_r_7 , s_desc_data_5, s_desc_data_4, 
         \shifter/rx/s_op_fifo.buf_1_.len_4 , 
         \shifter/rx/s_op_fifo.buf_1_.len_5 , s_ptr_data_15, s_ptr_data_14, 
         s_pos_0_3_N_670_3, s_pos_0_3_N_670_2, \shifter/shift_ctrl/n6507 , 
         s_desc_addr_7, \shifter/rx/s_op_fifo.buf_0_.len_2 , s_desc_addr_8, 
         \shifter/rx/s_op_fifo.buf_0_.len_3 , s_ptr_data_13, s_ptr_data_12, 
         s_pos_0_3_N_670_1, s_pos_0_3_N_670_0, \shifter/shift_ctrl/n6506 , 
         s_desc_addr_5, \shifter/rx/s_op_fifo.buf_0_.len_0 , s_desc_addr_6, 
         \shifter/rx/s_op_fifo.buf_0_.len_1 , s_ptr_data_11, s_ptr_data_10, 
         \shifter/rx/s_op0.addr_9 , \shifter/rx/s_op0.addr_8 , 
         \shifter/shift_ctrl/n6505 , s_desc_addr_3, 
         \shifter/rx/s_op_fifo.buf_0_.addr_8 , s_desc_addr_4, 
         \shifter/rx/s_op_fifo.buf_0_.addr_9 , s_ptr_data_9, s_ptr_data_8, 
         \shifter/rx/s_op0.addr_7 , \shifter/rx/s_op0.addr_6 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_6 , s_desc_addr_2, 
         \shifter/rx/s_op_fifo.buf_0_.addr_7 , s_desc_data_29, 
         \shifter/mclk_c_enable_207 , \shifter/rx/n6490 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_9 , s_desc_data_28, s_desc_data_27, 
         \shifter/rx/n6489 , \shifter/rx/s_op_fifo.buf_3_.addr_7 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_8 , s_desc_data_26, s_desc_data_25, 
         s_desc_data_31, \shifter/rx/s_op0.addr_5 , \shifter/rx/n6488 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_5 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_6 , s_desc_data_24, s_desc_data_23, 
         \shifter/rx/s_op0.addr_4 , \shifter/rx/n6487 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_3 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_4 , s_desc_data_22, s_desc_data_21, 
         \shifter/rx/n6486 , \shifter/rx/s_op_fifo.buf_3_.addr_1 , 
         \shifter/rx/s_op_fifo.buf_3_.addr_2 , s_desc_data_20, 
         \shifter/rx/s_op_fifo.buf_3_.addr_0 , \shifter/exec_ctrl/s_cnt_reg_0 , 
         \shifter/exec_ctrl/s_cnt_top_0 , \shifter/exec_ctrl/s_cnt_reg_1 , 
         \shifter/exec_ctrl/s_cnt_top_1 , \shifter/ckgen/s_tck_r0 , 
         \shifter/ckgen/s_rtcken_r1 , \shifter/ckgen/s_enabled , 
         \shifter/exec_ctrl/n6408 , \shifter/ckgen/s_rtcken_reg , 
         \shifter/exec_ctrl/s_cnt_ovf , tp_tck_c, 
         \shifter/exec_ctrl/s_cnt_reg_2 , \shifter/exec_ctrl/s_cnt_top_2 , 
         \shifter/exec_ctrl/s_cnt_reg_3 , \shifter/exec_ctrl/s_cnt_top_3 , 
         \shifter/exec_ctrl/s_cnt_reg_4 , \shifter/exec_ctrl/s_cnt_top_4 , 
         \shifter/exec_ctrl/s_cnt_reg_5 , \shifter/exec_ctrl/s_cnt_top_5 , 
         \shifter/ckgen/mclk_c_enable_41 , \shifter/exec_ctrl/n6407 , s_irq_1, 
         \shifter/exec_ctrl/s_cnt_reg_6 , \shifter/exec_ctrl/s_cnt_top_6 , 
         \shifter/exec_ctrl/s_cnt_reg_7 , \shifter/exec_ctrl/s_cnt_top_7 , 
         \shifter/ckgen/s_rtck_r0 , \shifter/ckgen/n8307 , 
         \shifter/ckgen/s_rtck_r1 , \shifter/exec_ctrl/n334 , 
         \shifter/exec_ctrl/mclk_c_enable_114 , 
         \shifter/exec_ctrl/busy_N_1509 , \shifter/exec_ctrl/n6512 , 
         \shifter/exec_ctrl/n335 , \shifter/exec_ctrl/n336 , 
         \shifter/exec_ctrl/n6511 , \shifter/exec_ctrl/n337 , 
         \shifter/exec_ctrl/n338 , \shifter/exec_ctrl/n6510 , 
         \shifter/exec_ctrl/n339 , \shifter/exec_ctrl/n340 , 
         \shifter/exec_ctrl/n6509 , \shifter/exec_ctrl/n341 , 
         mclk_c_enable_118, \shifter/ckgen/n6404 , 
         \shifter/ckgen/rtcktmo_N_629 , s_desc_hi_10, s_desc_hi_11, 
         \shifter/ckgen/s_cnt_lo_r_4 , \shifter/ckgen/s_cmp_lo_4 , 
         \shifter/ckgen/s_cnt_lo_r_5 , \shifter/ckgen/s_cmp_lo_5 , 
         \shifter/ckgen/s_cnt_lo_r_6 , \shifter/ckgen/s_cmp_lo_6 , 
         \shifter/ckgen/s_cnt_lo_r_7 , \shifter/ckgen/s_cmp_lo_7 , 
         \shifter/ckgen/n6398 , s_desc_hi_4, s_desc_hi_5, 
         \shifter/ckgen/n6399 , \shifter/ckgen/s_cnt_hi_r_6 , 
         \shifter/ckgen/s_cnt_hi_r_5 , \shifter/ckgen/n74_adj_1576 , 
         \shifter/ckgen/n75_adj_1574 , \shifter/ckgen/mclk_c_enable_135 , 
         \shifter/ckgen/n4077 , \shifter/ckgen/n6464 , \shifter/ckgen/n6465 , 
         \shifter/ckgen/s_cnt_hi_r_0 , \shifter/ckgen/s_cmp_hi_0 , 
         \shifter/ckgen/s_cnt_hi_r_1 , \shifter/ckgen/s_cmp_hi_1 , 
         \shifter/ckgen/s_cnt_hi_r_2 , \shifter/ckgen/s_cmp_hi_2 , 
         \shifter/ckgen/s_cnt_hi_r_3 , \shifter/ckgen/s_cmp_hi_3 , 
         \shifter/ckgen/n6403 , s_desc_hi_12, s_desc_hi_13, 
         \shifter/ckgen/s_cnt_hi_r_4 , \shifter/ckgen/n76 , 
         \shifter/ckgen/n77 , \shifter/ckgen/n6463 , 
         \shifter/ckgen/s_cnt_lo_r_3 , \shifter/ckgen/n76_adj_1575 , 
         \shifter/ckgen/n77_adj_1577 , \shifter/ckgen/mclk_c_enable_261 , 
         \shifter/ckgen/n4036 , \shifter/ckgen/n6455 , \shifter/ckgen/n6456 , 
         \shifter/ckgen/s_cnt_lo_r_2 , \shifter/ckgen/s_cnt_lo_r_1 , 
         \shifter/ckgen/n78_adj_1579 , \shifter/ckgen/n79_adj_1578 , 
         \shifter/ckgen/n6454 , \shifter/ckgen/s_cmp_hi_4 , 
         \shifter/ckgen/s_cmp_hi_5 , \shifter/ckgen/s_cmp_hi_6 , 
         \shifter/ckgen/s_cnt_hi_r_7 , \shifter/ckgen/s_cmp_hi_7 , 
         \shifter/ckgen/n6402 , s_desc_hi_0, s_desc_hi_1, 
         \shifter/ckgen/s_cnt_lo_r_0 , \shifter/ckgen/n80 , 
         \shifter/ckgen/s_cnt_lo_r_8 , \shifter/ckgen/s_cmp_lo_8 , 
         \shifter/ckgen/s_cnt_lo_r_9 , \shifter/ckgen/s_cmp_lo_9 , 
         \shifter/ckgen/s_cnt_lo_r_10 , \shifter/ckgen/s_cmp_lo_10 , 
         \shifter/ckgen/s_cnt_lo_r_11 , \shifter/ckgen/s_cmp_lo_11 , 
         \shifter/ckgen/n6397 , s_desc_hi_2, s_desc_hi_3, \shifter/ckgen/n78 , 
         \shifter/ckgen/n79 , \shifter/ckgen/n6462 , 
         \shifter/ckgen/n80_adj_1587 , \shifter/ckgen/s_cnt_lo_r_14 , 
         \shifter/ckgen/s_cnt_lo_r_13 , \shifter/ckgen/n66_adj_1588 , 
         \shifter/ckgen/n67_adj_1586 , \shifter/ckgen/n6460 , 
         \shifter/ckgen/s_cnt_lo_r_12 , \shifter/ckgen/n68_adj_1585 , 
         \shifter/ckgen/n69_adj_1583 , \shifter/ckgen/n6459 , 
         \shifter/ckgen/n70_adj_1584 , \shifter/ckgen/n71 , 
         \shifter/ckgen/n6458 , \shifter/ckgen/n72 , \shifter/ckgen/n73 , 
         \shifter/ckgen/n6457 , \shifter/ckgen/n74 , \shifter/ckgen/n75 , 
         \shifter/ckgen/s_rtdiv_hi_14 , s_ckgen_rtdiv_14, 
         \shifter/ckgen/s_rtdiv_hi_13 , s_ckgen_rtdiv_13, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_14 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_13 , \shifter/ckgen/n6484 , 
         \shifter/ckgen/s_rtdiv_lo_r0_13 , \shifter/ckgen/s_rtdiv_lo_r0_14 , 
         \shifter/ckgen/s_rtdiv_hi_12 , s_ckgen_rtdiv_12, 
         \shifter/ckgen/s_rtdiv_hi_11 , s_ckgen_rtdiv_11, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_12 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_11 , \shifter/ckgen/n6483 , 
         \shifter/ckgen/s_rtdiv_lo_r0_11 , \shifter/ckgen/s_rtdiv_lo_r0_12 , 
         \shifter/ckgen/s_rtdiv_hi_10 , s_ckgen_rtdiv_10, 
         \shifter/ckgen/s_rtdiv_hi_9 , s_ckgen_rtdiv_9, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_10 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_9 , \shifter/ckgen/n6482 , 
         \shifter/ckgen/s_rtdiv_lo_r0_9 , \shifter/ckgen/s_rtdiv_lo_r0_10 , 
         \shifter/ckgen/s_rtdiv_hi_8 , s_ckgen_rtdiv_8, 
         \shifter/ckgen/s_rtdiv_hi_7 , s_ckgen_rtdiv_7, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_8 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_7 , \shifter/ckgen/n6481 , 
         \shifter/ckgen/s_rtdiv_lo_r0_7 , \shifter/ckgen/s_rtdiv_lo_r0_8 , 
         \shifter/ckgen/s_rtdiv_hi_6 , s_ckgen_rtdiv_6, 
         \shifter/ckgen/s_rtdiv_hi_5 , s_ckgen_rtdiv_5, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_6 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_5 , \shifter/ckgen/n6480 , 
         \shifter/ckgen/s_rtdiv_lo_r0_5 , \shifter/ckgen/s_rtdiv_lo_r0_6 , 
         \shifter/ckgen/s_cnt_hi_r_8 , \shifter/ckgen/s_cmp_hi_8 , 
         \shifter/ckgen/s_cnt_hi_r_9 , \shifter/ckgen/s_cmp_hi_9 , 
         \shifter/ckgen/s_cnt_hi_r_10 , \shifter/ckgen/s_cmp_hi_10 , 
         \shifter/ckgen/s_cnt_hi_r_11 , \shifter/ckgen/s_cmp_hi_11 , n1544, 
         n1545, out_get_N_312, \shifter/ckgen/n6401 , n1543, 
         \shifter/ckgen/s_rtdiv_hi_4 , s_ckgen_rtdiv_4, 
         \shifter/ckgen/s_rtdiv_hi_3 , s_ckgen_rtdiv_3, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_4 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_3 , \shifter/ckgen/n6479 , 
         \shifter/ckgen/s_rtdiv_lo_r0_3 , \shifter/ckgen/s_rtdiv_lo_r0_4 , 
         \shifter/ckgen/s_rtdiv_hi_2 , s_ckgen_rtdiv_2, 
         \shifter/ckgen/s_rtdiv_hi_1 , s_ckgen_rtdiv_1, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_2 , 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_1 , \shifter/ckgen/n6478 , 
         \shifter/ckgen/s_rtdiv_lo_r0_1 , \shifter/ckgen/s_rtdiv_lo_r0_2 , 
         \shifter/ckgen/s_rtdiv_hi_0 , s_ckgen_rtdiv_0, 
         \shifter/ckgen/s_rtdiv_lo_r0_14_N_490_0 , 
         \shifter/ckgen/s_div_hi_r0_0 , \shifter/ckgen/s_div_hi_0 , 
         \shifter/ckgen/s_rtdiv_lo_r0_0 , \shifter/ckgen/s_div_hi_14 , 
         s_ckgen_div_14, \shifter/ckgen/s_div_hi_13 , s_ckgen_div_13, 
         \shifter/ckgen/s_div_lo_r0_14_N_475_14 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_13 , \shifter/ckgen/n6476 , 
         \shifter/ckgen/s_div_lo_r0_13 , \shifter/ckgen/s_div_lo_r0_14 , 
         \shifter/ckgen/s_cnt_hi_r_12 , \shifter/ckgen/s_cmp_hi_12 , 
         \shifter/ckgen/s_cnt_hi_r_13 , \shifter/ckgen/s_cmp_hi_13 , 
         \shifter/ckgen/s_cnt_hi_r_14 , \shifter/ckgen/s_cmp_hi_14 , 
         \cram_bus/reg_wr_fifo/n1546 , \shifter/ckgen/s_div_hi_12 , 
         s_ckgen_div_12, \shifter/ckgen/s_div_hi_11 , s_ckgen_div_11, 
         \shifter/ckgen/s_div_lo_r0_14_N_475_12 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_11 , \shifter/ckgen/n6475 , 
         \shifter/ckgen/s_div_lo_r0_11 , \shifter/ckgen/s_div_lo_r0_12 , 
         \shifter/ckgen/s_div_hi_10 , s_ckgen_div_10, 
         \shifter/ckgen/s_div_hi_9 , s_ckgen_div_9, 
         \shifter/ckgen/s_div_lo_r0_14_N_475_10 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_9 , \shifter/ckgen/n6474 , 
         \shifter/ckgen/s_div_lo_r0_9 , \shifter/ckgen/s_div_lo_r0_10 , 
         \shifter/ckgen/s_div_hi_8 , s_ckgen_div_8, \shifter/ckgen/s_div_hi_7 , 
         s_ckgen_div_7, \shifter/ckgen/s_div_lo_r0_14_N_475_8 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_7 , \shifter/ckgen/n6473 , 
         \shifter/ckgen/s_div_lo_r0_7 , \shifter/ckgen/s_div_lo_r0_8 , 
         \shifter/ckgen/s_div_hi_6 , s_ckgen_div_6, \shifter/ckgen/s_div_hi_5 , 
         s_ckgen_div_5, \shifter/ckgen/s_div_lo_r0_14_N_475_6 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_5 , \shifter/ckgen/n6472 , 
         \shifter/ckgen/s_div_lo_r0_5 , \shifter/ckgen/s_div_lo_r0_6 , 
         \shifter/ckgen/s_div_hi_4 , s_ckgen_div_4, \shifter/ckgen/s_div_hi_3 , 
         s_ckgen_div_3, \shifter/ckgen/s_div_lo_r0_14_N_475_4 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_3 , \shifter/ckgen/n6471 , 
         \shifter/ckgen/s_div_lo_r0_3 , \shifter/ckgen/s_div_lo_r0_4 , 
         \shifter/ckgen/s_div_hi_2 , s_ckgen_div_2, \shifter/ckgen/s_div_hi_1 , 
         s_ckgen_div_1, \shifter/ckgen/s_div_lo_r0_14_N_475_2 , 
         \shifter/ckgen/s_div_lo_r0_14_N_475_1 , \shifter/ckgen/n6470 , 
         \shifter/ckgen/s_div_lo_r0_1 , \shifter/ckgen/s_div_lo_r0_2 , 
         \shifter/ckgen/n6400 , \shifter/ckgen/s_tck_r0_N_638 , s_desc_hi_6, 
         s_desc_hi_7, s_ckgen_div_0, \shifter/ckgen/s_div_lo_r0_14_N_475_0 , 
         \cram_bus/reg_wr_fifo/s_syn_sel0_1 , 
         \cram_bus/reg_wr_fifo/s_syn_sel1_1 , \shifter/ckgen/s_div_lo_r0_0 , 
         \shifter/ckgen/s_cmp_lo_12 , \shifter/ckgen/s_cmp_lo_13 , 
         \shifter/ckgen/s_cmp_lo_14 , s_desc_data_30, s_desc_hi_14, 
         s_desc_hi_15, \shifter/ckgen/n66 , \shifter/ckgen/n67 , 
         \shifter/ckgen/n6468 , \shifter/ckgen/n68 , \shifter/ckgen/n69 , 
         \shifter/ckgen/n6467 , \shifter/ckgen/n70 , 
         \shifter/ckgen/n71_adj_1580 , \shifter/ckgen/n6466 , 
         \shifter/ckgen/n72_adj_1581 , \shifter/ckgen/n73_adj_1582 , 
         \shifter/ckgen/s_cmp_lo_0 , \shifter/ckgen/s_cmp_lo_1 , 
         \shifter/ckgen/s_cmp_lo_2 , \shifter/ckgen/s_cmp_lo_3 , s_desc_hi_8, 
         s_desc_hi_9, \cram_bus/addr_r/n8213 , \cram_bus/s_cram_adv , 
         fsmc_d_out_11, \cram_bus/addr_r/q_15__N_60 , \cram_bus/addr_r/n8208 , 
         fsmc_d_out_12, \cram_bus/addr_r/q_15__N_58 , 
         \cram_bus/addr_r/q_11__N_97 , \cram_bus/addr_r/q_12__N_93 , 
         fsmc_clk_c, s_cram_next_st_1__N_24_c_0, \cram_bus/n1508 , fsmc_nce_c, 
         \cram_bus/n1503 , \cram_bus/n1505 , \cram_bus/reg_wr_fifo/s_sel_in_0 , 
         \cram_bus/reg_wr_fifo/s_sel_in_1 , \cram_bus/reg_wr_fifo/n14 , 
         \cram_bus/reg_wr_fifo/n15 , \cram_bus/s_fifo_wr_stb , 
         \cram_bus/s_cram_wr_addr_15 , \cram_bus/s_cram_adi , \cram_bus/n6532 , 
         q_15__N_56, q_15__N_52, \cram_bus/addr_r/q_15__N_51 , fsmc_d_out_15, 
         \cram_bus/addr_r/q_15__N_49 , \cram_bus/addr_r/q_0__N_141 , 
         q_15__N_82, \cram_bus/n8287 , \cram_bus/s_op_mem_rd_N_35 , 
         \cram_bus/n2425 , \cram_bus/s_op_mem_rd , 
         \cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 , fsmc_noe_c, 
         \cram_bus/s_op_mem_wr_N_42 , \cram_bus/s_op_mem_wr , n2844, n7501, 
         n7480, q_15__N_76, q_15__N_78, n2977, n9, n7462, 
         \cram_bus/s_reg_dout_1 , s_reg_dout_0, \cram_bus/s_reg_rd_data_0 , 
         \cram_bus/s_reg_rd_data_1 , n7487, n7455, n7494, n7471, 
         \cram_bus/s_reg_dout_3 , \cram_bus/s_reg_dout_2 , 
         \cram_bus/s_reg_rd_data_2 , \cram_bus/s_reg_rd_data_3 , n7836, n7835, 
         q_15__N_80, n3064, n7406, s_r3_4, s_reg_dout_4, 
         \cram_bus/s_reg_rd_data_4 , n7787, n7786, n7313, s_r3_5, s_reg_dout_5, 
         \cram_bus/s_reg_rd_data_5 , \cram_bus/addr_r/n8339 , n7376, 
         s_reg_dout_6, n7225, \cram_bus/s_reg_rd_data_6 , n7830, n7829, n7403, 
         s_r3_7, s_reg_dout_7, \cram_bus/s_reg_rd_data_7 , n7802, n7801, n7367, 
         s_r3_8, s_reg_dout_8, \cram_bus/s_reg_rd_data_8 , n7805, n7804, n7385, 
         s_r3_9, s_reg_dout_9, \cram_bus/s_reg_rd_data_9 , n7824, n7823, n7397, 
         s_r3_10, s_reg_dout_10, \cram_bus/s_reg_rd_data_10 , n7821, n7820, 
         n7382, s_r3_11, s_reg_dout_11, \cram_bus/s_reg_rd_data_11 , 
         s_desc_lo_12, n7370, s_r3_12, s_reg_dout_12, 
         \cram_bus/s_reg_rd_data_12 , s_desc_lo_13, n7507, s_r3_13, 
         s_reg_dout_13, \cram_bus/s_reg_rd_data_13 , s_desc_lo_14, n7510, 
         s_r3_14, s_reg_dout_14, \cram_bus/s_reg_rd_data_14 , s_desc_lo_15, 
         n7310, s_r3_15, s_reg_dout_15, \cram_bus/s_reg_rd_data_15 , 
         s_1khz_stb, s_tap_busy, s_irq_en_2, s_irq_en_0, s_tmr_cnt_en, 
         irq_N_8_1, n6, s_irq_en_3, irq_N_5, irq_c, n2615, \led_run_drv/n6 , 
         \led_run_drv/s_count_0 , \led_run_drv/s_count_2 , 
         \led_run_drv/s_count_3 , \led_run_drv/n3628 , led_1_c, 
         \led_run_drv/s_trip_r1 , \led_run_drv/s_trip_r0 , \led_run_drv/n4024 , 
         \led_con_drv/n6 , \led_con_drv/s_count_0 , \led_con_drv/s_count_2 , 
         \led_con_drv/s_count_3 , \led_con_drv/n3627 , led_2_c, 
         \led_con_drv/s_trip_r1 , \led_con_drv/s_trip_r0 , \led_con_drv/n4026 , 
         \cram_bus/reg_wr_fifo/s_syn_sel0_0 , \led_con_drv/n3124 , 
         \led_con_drv/s_cnt_ld , \led_con_drv/s_count_1 , \led_con_drv/n3687 , 
         \led_con_drv/n3685 , \led_con_drv/mclk_c_enable_29 , 
         \led_con_drv/s_count_4 , \led_con_drv/n8320 , \led_con_drv/n3681 , 
         \led_con_drv/n3683 , n8288, s_we_hi, \led_run_drv/n3132 , 
         \led_run_drv/s_cnt_ld , \led_run_drv/s_count_1 , \led_run_drv/n3689 , 
         \led_run_drv/n3695 , \led_run_drv/mclk_c_enable_59 , 
         \led_run_drv/s_count_4 , \led_run_drv/n8316 , \led_run_drv/n3693 , 
         \led_run_drv/n3691 , \cram_bus/reg_wr_fifo/n2 , 
         \cram_bus/reg_wr_fifo/s_syn_sel1_0 , s_desc_lo_10, fsmc_d_out_0, 
         n8852, n8853, \cram_bus/addr_r/n8313 , fsmc_d_out_1, 
         \cram_bus/addr_r/q_1__N_137 , n8854, n8855, \cram_bus/addr_r/n8204 , 
         fsmc_d_out_13, \cram_bus/addr_r/n8200 , fsmc_d_out_14, 
         \cram_bus/addr_r/q_13__N_89 , \cram_bus/addr_r/q_14__N_85 , 
         \cram_bus/addr_r/n8223 , fsmc_d_out_9, q_15__N_64, 
         \cram_bus/addr_r/n8218 , fsmc_d_out_10, q_15__N_62, 
         \cram_bus/addr_r/q_9__N_105 , \cram_bus/addr_r/q_10__N_101 , 
         \cram_bus/addr_r/n8236 , fsmc_d_out_7, q_15__N_68, 
         \cram_bus/addr_r/n8231 , fsmc_d_out_8, q_15__N_66, 
         \cram_bus/addr_r/q_7__N_113 , \cram_bus/addr_r/q_8__N_109 , 
         \cram_bus/addr_r/n8251 , fsmc_d_out_5, q_15__N_72, 
         \cram_bus/addr_r/n8244 , fsmc_d_out_6, q_15__N_70, 
         \cram_bus/addr_r/q_5__N_121 , \cram_bus/addr_r/q_6__N_117 , 
         \cram_bus/addr_r/n8270 , fsmc_d_out_3, \cram_bus/addr_r/n8259 , 
         fsmc_d_out_4, q_15__N_74, \cram_bus/addr_r/q_3__N_129 , 
         \cram_bus/addr_r/q_4__N_125 , \cram_bus/addr_r/n8285 , fsmc_d_out_2, 
         \cram_bus/addr_r/q_2__N_133 , \cklgen_1khz/n20 , \cklgen_1khz/n15 , 
         \cklgen_1khz/p_stb_N_1558 , \shifter/ckgen/s_div_lo_13 , 
         \cklgen_1mhz/n6527 , \cklgen_1mhz/s_hi , \shifter/ckgen/s_div_lo_14 , 
         \cram_bus/reg_wr_fifo/s_data3_0 , \cram_bus/reg_wr_fifo/s_data2_0 , 
         \cram_bus/reg_wr_fifo/s_data1_0 , \cram_bus/reg_wr_fifo/s_data0_0 , 
         s_reg_din_0, \cram_bus/reg_wr_fifo/n7307 , s_cfg_wr_stb, s_cfg_0, 
         \cram_bus/reg_wr_fifo/s_data3_1 , \cram_bus/reg_wr_fifo/s_data2_1 , 
         \cram_bus/reg_wr_fifo/s_data1_1 , \cram_bus/reg_wr_fifo/s_data0_1 , 
         s_reg_din_1, s_cfg_1, \cram_bus/reg_wr_fifo/s_data3_2 , 
         \cram_bus/reg_wr_fifo/s_data2_2 , \cram_bus/reg_wr_fifo/s_data1_2 , 
         \cram_bus/reg_wr_fifo/s_data0_2 , s_reg_din_2, s_cfg_2, 
         \cram_bus/reg_wr_fifo/s_data3_3 , \cram_bus/reg_wr_fifo/s_data2_3 , 
         \cram_bus/reg_wr_fifo/s_data1_3 , \cram_bus/reg_wr_fifo/s_data0_3 , 
         s_reg_din_3, s_cfg_3, \cram_bus/reg_wr_fifo/s_data3_4 , 
         \cram_bus/reg_wr_fifo/s_data2_4 , \cram_bus/reg_wr_fifo/s_data1_4 , 
         \cram_bus/reg_wr_fifo/s_data0_4 , s_reg_din_4, s_cfg_4, 
         \cram_bus/reg_wr_fifo/s_data3_5 , \cram_bus/reg_wr_fifo/s_data2_5 , 
         \cram_bus/reg_wr_fifo/s_data1_5 , \cram_bus/reg_wr_fifo/s_data0_5 , 
         s_reg_din_5, s_cfg_5, \cram_bus/reg_wr_fifo/s_data3_6 , 
         \cram_bus/reg_wr_fifo/s_data2_6 , \cram_bus/reg_wr_fifo/s_data1_6 , 
         \cram_bus/reg_wr_fifo/s_data0_6 , s_reg_din_6, n4048, s_cfg_6, 
         \cram_bus/reg_wr_fifo/s_data3_7 , \cram_bus/reg_wr_fifo/s_data2_7 , 
         \cram_bus/reg_wr_fifo/s_data1_7 , \cram_bus/reg_wr_fifo/s_data0_7 , 
         s_reg_din_7, s_cfg_7, \cram_bus/reg_wr_fifo/s_data3_8 , 
         \cram_bus/reg_wr_fifo/s_data2_8 , \cram_bus/reg_wr_fifo/s_data1_8 , 
         \cram_bus/reg_wr_fifo/s_data0_8 , s_reg_din_8, s_cfg_8, 
         \cram_bus/reg_wr_fifo/s_data3_9 , \cram_bus/reg_wr_fifo/s_data2_9 , 
         \cram_bus/reg_wr_fifo/s_data1_9 , \cram_bus/reg_wr_fifo/s_data0_9 , 
         s_reg_din_9, s_cfg_9, \cram_bus/reg_wr_fifo/s_data3_10 , 
         \cram_bus/reg_wr_fifo/s_data2_10 , \cram_bus/reg_wr_fifo/s_data1_10 , 
         \cram_bus/reg_wr_fifo/s_data0_10 , s_reg_din_10, s_cfg_10, 
         \cram_bus/reg_wr_fifo/s_data3_11 , \cram_bus/reg_wr_fifo/s_data2_11 , 
         \cram_bus/reg_wr_fifo/s_data1_11 , \cram_bus/reg_wr_fifo/s_data0_11 , 
         s_reg_din_11, s_cfg_11, \cram_bus/reg_wr_fifo/s_data3_12 , 
         \cram_bus/reg_wr_fifo/s_data2_12 , \cram_bus/reg_wr_fifo/s_data1_12 , 
         \cram_bus/reg_wr_fifo/s_data0_12 , s_reg_din_12, s_cfg_12, 
         \cram_bus/reg_wr_fifo/s_data3_13 , \cram_bus/reg_wr_fifo/s_data2_13 , 
         \cram_bus/reg_wr_fifo/s_data1_13 , \cram_bus/reg_wr_fifo/s_data0_13 , 
         s_reg_din_13, s_cfg_13, \cram_bus/reg_wr_fifo/s_data3_14 , 
         \cram_bus/reg_wr_fifo/s_data2_14 , \cram_bus/reg_wr_fifo/s_data1_14 , 
         \cram_bus/reg_wr_fifo/s_data0_14 , s_reg_din_14, s_cfg_14, 
         \cram_bus/reg_wr_fifo/s_data3_15 , \cram_bus/reg_wr_fifo/s_data2_15 , 
         \cram_bus/reg_wr_fifo/s_data1_15 , \cram_bus/reg_wr_fifo/s_data0_15 , 
         s_reg_din_15, s_cfg_15, \shifter/exec_ctrl/n8849 , 
         \shifter/exec_ctrl/n8331 , \shifter/exec_ctrl/n8330 , n8317, 
         s_irq_st_0, \shifter/exec_ctrl/n3068 , s_irq_st_1, s_tmr_cnt_en_N_1, 
         s_irq_st_3, s_irq_st_2, \shifter/n8282 , \shifter/s_mtdo , 
         \shifter/rx/bit_pos_3 , \shifter/rx/bit_pos_2 , 
         \shifter/rx/mem_dout_15__N_799 , \shifter/rx/mclk_c_enable_92 , 
         s_rx_mem_din_0, \shifter/rx/n8302 , s_rx_mem_wr_stb, 
         \shifter/rx/n8306 , \shifter/rx/mem_dout_15__N_795 , 
         \shifter/rx/mclk_c_enable_244 , s_rx_mem_din_1, \shifter/rx/n8301 , 
         \shifter/rx/mem_dout_15__N_791 , \shifter/rx/mclk_c_enable_245 , 
         s_rx_mem_din_2, \shifter/rx/n8300 , \shifter/rx/mem_dout_15__N_787 , 
         \shifter/rx/mclk_c_enable_246 , s_rx_mem_din_3, 
         \shifter/rx/mem_dout_15__N_783 , \shifter/rx/mclk_c_enable_247 , 
         s_rx_mem_din_4, \shifter/rx/n8299 , \shifter/rx/mem_dout_15__N_779 , 
         \shifter/rx/mclk_c_enable_248 , s_rx_mem_din_5, 
         \shifter/rx/mem_dout_15__N_775 , \shifter/rx/mclk_c_enable_249 , 
         s_rx_mem_din_6, \shifter/rx/mem_dout_15__N_771 , 
         \shifter/rx/mclk_c_enable_250 , s_rx_mem_din_7, 
         \shifter/rx/mem_dout_15__N_767 , \shifter/rx/mclk_c_enable_251 , 
         s_rx_mem_din_8, \shifter/rx/n8297 , \shifter/rx/mem_dout_15__N_763 , 
         \shifter/rx/mclk_c_enable_252 , s_rx_mem_din_9, 
         \shifter/rx/mem_dout_15__N_759 , \shifter/rx/mclk_c_enable_253 , 
         s_rx_mem_din_10, \shifter/rx/mem_dout_15__N_755 , 
         \shifter/rx/mclk_c_enable_254 , s_rx_mem_din_11, \shifter/bit_pos_1 , 
         \shifter/bit_pos_0 , \shifter/tckn_stb , 
         \shifter/shift_ctrl/s_rx_en_r1 , \shifter/rx/mem_dout_15__N_751 , 
         \shifter/rx/mclk_c_enable_255 , s_rx_mem_din_12, \shifter/rx/n8296 , 
         \shifter/rx/mem_dout_15__N_747 , \shifter/rx/mclk_c_enable_256 , 
         s_rx_mem_din_13, \shifter/rx/mem_dout_15__N_743 , 
         \shifter/rx/mclk_c_enable_257 , s_rx_mem_din_14, 
         \shifter/rx/mem_dout_15__N_739 , \shifter/rx/mclk_c_enable_258 , 
         s_rx_mem_din_15, \shifter/rx/s_count_r_6 , \shifter/rx/s_count_r_7 , 
         \shifter/rx/s_count_r_5 , \shifter/rx/n8245 , 
         \shifter/rx/s_count_r_9 , \shifter/rx/n8257 , 
         \shifter/rx/s_count_r_8 , \shifter/rx/n8225 , 
         \shifter/rx/mem_wr_N_1153 , \shifter/rx/busy , 
         \shifter/exec_ctrl/s_runtest_state_0 , s_goto_state_0, 
         \shifter/exec_ctrl/s_pos_goto_en , 
         \shifter/exec_ctrl/insn_goto_N_1512 , n8279, 
         \shifter/exec_ctrl/s_reset_state_0 , \shifter/exec_ctrl/n508 , n8264, 
         \shifter/exec_ctrl/s_tap_state_next_0 , \shifter/exec_ctrl/n7241 , 
         \shifter/exec_ctrl/n7245 , 
         \shifter/exec_ctrl/s_tap_state_next_3_N_1438_0 , 
         \shifter/exec_ctrl/n518 , s_status_0, 
         \shifter/exec_ctrl/s_tap_state_next_3_N_1461_1 , s_goto_state_1, 
         \shifter/exec_ctrl/s_drscan_state_1 , \shifter/exec_ctrl/n517 , 
         \shifter/exec_ctrl/n8268 , \shifter/exec_ctrl/s_tap_state_next_1 , 
         \shifter/exec_ctrl/n7256 , s_status_1, 
         \shifter/exec_ctrl/s_insn_r0_15 , \shifter/exec_ctrl/s_insn_r0_13 , 
         \shifter/exec_ctrl/s_insn_r0_14 , \shifter/exec_ctrl/n182 , 
         \shifter/exec_ctrl/n7739 , s_goto_state_2, 
         \shifter/exec_ctrl/s_tap_state_next_2 , s_status_2, s_end_state_3, 
         \shifter/exec_ctrl/n4016 , \shifter/exec_ctrl/n2979 , 
         \shifter/exec_ctrl/n126 , s_status_3, \shifter/exec_ctrl/n8038 , 
         \shifter/exec_ctrl/n5106 , \shifter/exec_ctrl/s_drscan_state_3 , 
         \shifter/exec_ctrl/s_tap_state_next_3 , \shifter/exec_ctrl/n8263 , 
         \shifter/exec_ctrl/n2159 , \shifter/exec_ctrl/n7105 , 
         \shifter/exec_ctrl/n8224 , \shifter/exec_ctrl/n4029 , 
         \shifter/ckgen/s_div_hi_r0_1 , \shifter/tx/s_pos_3 , 
         \shifter/tx/n7436 , \shifter/tx/n7435 , \shifter/s_so , 
         mclk_c_enable_115, \shifter/n7090 , s_tap_tdi, n8295, 
         s_tmr_cnt_en_N_2, s_tmr_1, n8327, s_tmr_0, \tmr_r/q_1__N_137 , 
         \tmr_r/q_0__N_141 , \tmr_r/n8267 , s_tmr_3, n8276, s_tmr_2, 
         \tmr_r/q_3__N_129 , \tmr_r/q_2__N_133 , \tmr_r/n8247 , s_tmr_5, 
         \tmr_r/n8256 , s_tmr_4, \tmr_r/q_5__N_121 , \tmr_r/q_4__N_125 , 
         \tmr_r/n8233 , s_tmr_7, \tmr_r/n8238 , s_tmr_6, \tmr_r/q_7__N_113 , 
         \tmr_r/q_6__N_117 , \tmr_r/n8220 , s_tmr_9, \tmr_r/n8227 , s_tmr_8, 
         \tmr_r/q_9__N_105 , \tmr_r/q_8__N_109 , \tmr_r/n8210 , s_tmr_11, 
         \tmr_r/n8216 , s_tmr_10, \tmr_r/q_11__N_97 , \tmr_r/q_10__N_101 , 
         \tmr_r/n8201 , s_tmr_13, \tmr_r/n8206 , s_tmr_12, \tmr_r/q_13__N_89 , 
         \tmr_r/q_12__N_93 , q_15__N_51, s_tmr_15, \tmr_r/n8197 , s_tmr_14, 
         \tmr_r/q_15__N_49 , \tmr_r/q_14__N_85 , n4020, 
         \shifter/rx/op_pos_3_N_837_0 , \shifter/rx/bit_pos_0__N_815 , 
         \shifter/rx/fifo_get , \shifter/rx/op_pos_3_N_837_1 , 
         \shifter/op_msbf , \shifter/rx/bit_pos_1__N_813 , 
         \shifter/ckgen/n208 , \shifter/ckgen/n209 , \shifter/ckgen/n206 , 
         \shifter/ckgen/n207 , \shifter/ckgen/n204 , \shifter/ckgen/n205 , 
         \shifter/ckgen/n202 , \shifter/ckgen/n203 , \shifter/ckgen/n200 , 
         \shifter/ckgen/n201 , \shifter/ckgen/n198 , \shifter/ckgen/n199 , 
         \shifter/ckgen/n196 , \shifter/ckgen/n197 , s_irq_en_1, 
         \shifter/ckgen/n195 , \shifter/ckgen/n1830 , 
         \shifter/ckgen/s_div_lo_1 , \shifter/ckgen/s_rtdiv_lo_1 , 
         \shifter/ckgen/s_div_lo_0 , \shifter/ckgen/s_rtdiv_lo_0 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_1 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_0 , 
         \shifter/ckgen/mclk_c_enable_159 , \shifter/ckgen/s_div_lo_3 , 
         \shifter/ckgen/s_rtdiv_lo_3 , \shifter/ckgen/s_div_lo_2 , 
         \shifter/ckgen/s_rtdiv_lo_2 , \shifter/ckgen/s_cmp_lo_14_N_550_3 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_2 , \shifter/ckgen/s_div_lo_5 , 
         \shifter/ckgen/s_rtdiv_lo_5 , \shifter/ckgen/s_div_lo_4 , 
         \shifter/ckgen/s_rtdiv_lo_4 , \shifter/ckgen/s_cmp_lo_14_N_550_5 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_4 , \shifter/ckgen/s_div_lo_7 , 
         \shifter/ckgen/s_rtdiv_lo_7 , \shifter/ckgen/s_div_lo_6 , 
         \shifter/ckgen/s_rtdiv_lo_6 , \shifter/ckgen/s_cmp_lo_14_N_550_7 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_6 , \shifter/ckgen/s_div_lo_9 , 
         \shifter/ckgen/s_rtdiv_lo_9 , \shifter/ckgen/s_div_lo_8 , 
         \shifter/ckgen/s_rtdiv_lo_8 , \shifter/ckgen/s_cmp_lo_14_N_550_9 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_8 , \shifter/ckgen/s_div_lo_11 , 
         \shifter/ckgen/s_rtdiv_lo_11 , \shifter/ckgen/s_div_lo_10 , 
         \shifter/ckgen/s_rtdiv_lo_10 , \shifter/ckgen/s_cmp_lo_14_N_550_11 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_10 , \shifter/ckgen/s_rtdiv_lo_13 , 
         \shifter/ckgen/s_div_lo_12 , \shifter/ckgen/s_rtdiv_lo_12 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_13 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_12 , \shifter/ckgen/s_rtdiv_lo_14 , 
         \shifter/ckgen/s_cmp_lo_14_N_550_14 , \shifter/ckgen/n6337 , 
         \shifter/ckgen/s_rtck_r2 , tp_rtck_c, \shifter/ckgen/s_rtcken_r0 , 
         \shifter/ckgen/s_rtdiv_hi_r0_0 , \shifter/ckgen/s_rtdiv_hi_r0_1 , 
         \shifter/ckgen/s_rtdiv_hi_r0_10 , \shifter/ckgen/s_rtdiv_hi_r0_11 , 
         \shifter/ckgen/s_rtdiv_hi_r0_12 , \shifter/ckgen/s_rtdiv_hi_r0_8 , 
         \shifter/ckgen/mclk_c_enable_106 , \shifter/ckgen/s_tcken_r1 , 
         \shifter/ckgen/s_tcki_r0_N_639 , \shifter/ckgen/s_tcki_r0 , 
         \shifter/exec_ctrl/n8332 , \shifter/exec_ctrl/n2109 , 
         \shifter/exec_ctrl/s_pos_goto_en_N_1480 , 
         \shifter/exec_ctrl/tdi_en_N_1474 , \shifter/exec_ctrl/n4856 , 
         \shifter/s_en_r0 , \shifter/exec_ctrl/s_shift_en , 
         \shifter/exec_ctrl/s_shift_en_r0 , \shifter/exec_ctrl/n8239 , 
         \shifter/exec_ctrl/n8240 , \shifter/exec_ctrl/n4 , 
         \shifter/ckgen/s_div_hi_r0_10 , \shifter/n8221 , n8851, 
         \shifter/io/s_tckn_r0_N_669 , \shifter/rx/op_len_9_N_827_2 , 
         \shifter/rx/s_rx_op.msbf_N_1187 , \shifter/rx/s_rx_op.msbf , 
         \shifter/rx/op_len_2 , \shifter/rx/op_pos_3_N_837_2 , 
         \shifter/rx/op_pos_2 , \shifter/rx/n8275 , 
         \shifter/rx/bit_pos_2__N_811 , \shifter/rx/op_pos_3_N_837_3 , 
         \shifter/rx/bit_pos_3__N_803 , \shifter/rx/n8232 , 
         \shifter/rx/s_op_fifo.empty , \shifter/rx/n8214 , \shifter/rx/n6 , 
         \shifter/ckgen/s_div_hi_r0_8 , \shifter/rx/op_addr_9_N_817_0 , 
         \shifter/rx/s_addr_r1_0 , \shifter/rx/n8266 , 
         \shifter/rx/s_addr_r1_0__N_877 , \shifter/rx/op_addr_9_N_817_1 , 
         \shifter/rx/s_addr_r1_1 , \shifter/rx/s_addr_r1_1__N_875 , 
         \shifter/rx/op_addr_9_N_817_2 , \shifter/rx/s_addr_r1_2 , 
         \shifter/rx/n8241 , \shifter/rx/s_addr_r1_2__N_873 , 
         \shifter/rx/op_addr_9_N_817_3 , \shifter/rx/s_addr_r1_3 , 
         \shifter/rx/n8234 , \shifter/rx/s_addr_r1_3__N_871 , 
         \shifter/rx/op_addr_9_N_817_4 , \shifter/rx/n8230 , 
         \shifter/rx/s_addr_r1_4__N_869 , \shifter/rx/op_addr_9_N_817_5 , 
         \shifter/rx/n8226 , \shifter/rx/s_addr_r1_5__N_867 , 
         \shifter/rx/op_addr_9_N_817_6 , \shifter/rx/n8219 , 
         \shifter/rx/s_addr_r1_6__N_865 , \shifter/rx/op_addr_9_N_817_7 , 
         \shifter/rx/n8215 , \shifter/rx/s_addr_r1_7__N_863 , 
         \shifter/rx/op_addr_9_N_817_8 , \shifter/rx/n8209 , 
         \shifter/rx/s_addr_r1_8__N_861 , \shifter/rx/op_addr_9_N_817_9 , 
         \shifter/rx/n8205 , \shifter/rx/s_addr_r1_9__N_841 , 
         \shifter/s_count_r_0 , \shifter/s_count_r_1 , \shifter/n8272 , 
         \shifter/rx/s_count_r_2 , \shifter/rx/s_count_r_2__N_900 , 
         \shifter/rx/op_len_9_N_827_3 , \shifter/rx/s_count_r_3 , 
         \shifter/n8289 , \shifter/rx/s_count_r_3__N_904 , 
         \shifter/rx/op_len_9_N_827_4 , \shifter/rx/s_count_r_4 , 
         \shifter/rx/s_count_r_4__N_908 , \shifter/rx/op_len_9_N_827_5 , 
         \shifter/rx/n8261 , \shifter/rx/s_count_r_5__N_912 , 
         \shifter/rx/op_len_9_N_827_6 , \shifter/rx/n8253 , 
         \shifter/rx/s_count_r_6__N_916 , \shifter/rx/op_len_9_N_827_7 , 
         \shifter/rx/s_count_r_7__N_920 , \shifter/rx/op_len_9_N_827_8 , 
         \shifter/rx/n8237 , \shifter/rx/s_count_r_8__N_924 , 
         \shifter/rx/op_len_9_N_827_9 , \shifter/rx/s_count_r_9__N_879 , 
         \shifter/rx/n8328 , \shifter/rx/n8324 , 
         \shifter/rx/s_op_fifo.buf_0_.pos_0 , 
         \shifter/rx/s_op_fifo.buf_0_.pos_1 , \shifter/rx/n8304 , 
         \shifter/rx/n8329 , \shifter/rx/s_op_fifo.buf_0_.pos_2 , 
         \shifter/rx/s_op_fifo.buf_0_.pos_3 , \shifter/rx/start , 
         \shifter/rx/s_op_fifo.tail_0 , \shifter/rx/n4 , 
         \shifter/rx/s_op_fifo.tail_1 , \shifter/rx/s_op_fifo.tail_1_N_1054_1 , 
         \shifter/shift_ctrl/bit_cnt_7 , \shifter/shift_ctrl/bit_cnt_8 , 
         \shifter/shift_ctrl/bit_cnt_6 , \shifter/shift_ctrl/n8250 , 
         \shifter/shift_ctrl/bit_cnt_9 , \shifter/shift_ctrl/n8229 , 
         \shifter/rx/op_len_9_N_827_0 , \shifter/rx/s_count_r_0__N_892 , 
         \shifter/rx/op_len_9_N_827_1 , \shifter/rx/s_count_r_1__N_896 , 
         \shifter/n8228 , \shifter/shift_ctrl/mclk_c_enable_89 , 
         \shifter/shift_ctrl/n4071 , \shifter/mclk_c_enable_137 , 
         \shifter/exec_ctrl/s_exec_en , \shifter/tx/n8249 , \shifter/s_msbf , 
         \shifter/s_msbf_r , \shifter/tx/n8202 , tp_tdo_c, s_tap_tdo, tp_tdi_c, 
         \shifter/n8212 , \shifter/s_offs_inc , \shifter/n2503 , 
         \shifter/n2478 , \n8851\000/BUF1 , 
         \shifter/exec_ctrl/mclk_c_enable_25 , \shifter/exec_ctrl/n2463 , 
         \shifter/s_tcken , \shifter/exec_ctrl/tdi_en_N_1472 , 
         \shifter/exec_ctrl/mclk_c_enable_45 , \shifter/s_tdien , 
         \shifter/shift_ctrl/s_cnt_stb , \shifter/shift_ctrl/bit_cnt_0 , 
         \shifter/shift_ctrl/bit_cnt_0__N_1203 , \shifter/shift_ctrl/n8305 , 
         \shifter/shift_ctrl/bit_cnt_2 , \shifter/shift_ctrl/bit_cnt_1 , 
         \shifter/shift_ctrl/bit_cnt_2__N_1214 , 
         \shifter/shift_ctrl/bit_cnt_1__N_1208 , \shifter/shift_ctrl/n8269 , 
         \shifter/shift_ctrl/bit_cnt_4 , \shifter/shift_ctrl/n8281 , 
         \shifter/shift_ctrl/bit_cnt_3 , 
         \shifter/shift_ctrl/bit_cnt_4__N_1226 , 
         \shifter/shift_ctrl/bit_cnt_3__N_1220 , \shifter/shift_ctrl/n8258 , 
         \shifter/shift_ctrl/bit_cnt_5 , 
         \shifter/shift_ctrl/bit_cnt_6__N_1238 , 
         \shifter/shift_ctrl/bit_cnt_5__N_1232 , \shifter/shift_ctrl/n8235 , 
         \shifter/shift_ctrl/n8243 , \shifter/shift_ctrl/bit_cnt_8__N_1250 , 
         \shifter/shift_ctrl/bit_cnt_7__N_1244 , 
         \shifter/shift_ctrl/bit_cnt_9__N_1189 , \shifter/shift_ctrl/n8207 , 
         \shifter/shift_ctrl/n2494 , \shifter/shift_ctrl/n2501 , 
         \shifter/shift_ctrl/n8199 , \shifter/shift_ctrl/n8203 , 
         \shifter/shift_ctrl/n2486 , \shifter/shift_ctrl/n2490 , 
         \shifter/shift_ctrl/n8194 , \shifter/shift_ctrl/n8196 , 
         \shifter/shift_ctrl/n2480 , \shifter/shift_ctrl/n2482 , 
         \shifter/tx/s_pos_0_1 , \shifter/tx/n8290 , \shifter/tx/s_pos_1 , 
         \shifter/tx/s_pos_0_0 , \shifter/s_tx_shift_stb , 
         \shifter/tx/s_pos_0 , \shifter/tx/s_pos_1__N_696 , 
         \shifter/tx/s_pos_0__N_698 , \shifter/tx/s_pos_0_2 , 
         \shifter/tx/n8271 , \shifter/tx/s_pos_2 , \shifter/tx/s_pos_2__N_694 , 
         \shifter/tx/s_pos_3__N_686 , \shifter/exec_ctrl/n8735 , 
         \shifter/exec_ctrl/n8052 , \shifter/exec_ctrl/n7167 , 
         \shifter/s_mtms , tp_tms_c, s_desc_lo_2, s_mem_rd_addr_2, 
         s_mem_wr_addr_2, s_r3_2, n7492, n7493, s_r3_1, n7499, n7500, n8274, 
         \shifter/exec_ctrl/s_drpause_cnt_en , 
         \shifter/exec_ctrl/mtms_N_1486_7 , \shifter/exec_ctrl/n8262 , 
         \shifter/exec_ctrl/n8246 , \shifter/exec_ctrl/n3000 , n7227, 
         n2_adj_1633, s_ckgen_rtdiv_15, s_ckgen_div_15, s_addr3_1, s_addr3_2, 
         s_addr3_0, s_addr3_3, n8283, n22, n8284, n19, n8177, s_addr2_2, n8311, 
         n7800, s_addr2_1, s_addr2_0, s_addr2_3, n7185, n8312, n7215, s_r3_6, 
         n8178, n7794, s_aux_mem_dout_0, s_mem_rd_sel_0, n2546, n2562, n2578, 
         s_mem_rd_sel_1, s_mem_dout_0, s_aux_mem_dout_1, n2547, n2563, 
         s_mem_dout_1, s_aux_mem_dout_2, n2548, n2564, s_mem_dout_2, 
         s_aux_mem_dout_3, n2549, n2565, s_mem_dout_3, s_desc_lo_1, 
         s_mem_rd_addr_1, s_mem_wr_addr_1, s_aux_mem_dout_4, n2550, n2566, 
         s_mem_dout_4, s_aux_mem_dout_5, n2551, n2567, s_mem_dout_5, 
         s_aux_mem_dout_6, n2552, n2568, s_mem_dout_6, s_aux_mem_dout_7, n2553, 
         n2569, s_mem_dout_7, s_aux_mem_dout_8, n2554, n2570, s_mem_dout_8, 
         s_aux_mem_dout_9, n2555, n2571, s_mem_dout_9, s_aux_mem_dout_10, 
         n2556, n2572, s_mem_dout_10, s_aux_mem_dout_11, n2557, n2573, 
         s_mem_dout_11, s_aux_mem_dout_12, n2558, n2574, s_mem_dout_12, 
         s_aux_mem_dout_13, n2559, n2575, s_mem_dout_13, s_aux_mem_dout_14, 
         n2560, n2576, s_mem_dout_14, s_aux_mem_dout_15, n2561, n2577, 
         s_mem_dout_15, n8180, n7785, s_addr1_0, s_addr1_1, s_addr0_0, 
         s_addr0_1, n20, n24, s_r3_3, n7485, n7486, n7863, n7860, s_desc_lo_6, 
         s_mem_rd_addr_6, s_mem_wr_addr_6, n2600, n2584, n2599, n2583, 
         \shifter/tx/n7423 , n2602, n2586, n2601, n2585, \shifter/tx/n7424 , 
         \shifter/tx/n7431 , n2604, n2588, n2603, n2587, \shifter/tx/n7432 , 
         \shifter/tx/n7425 , n2606, n2590, n2605, n2589, \shifter/tx/n7426 , 
         n2608, n2592, n2607, n2591, \shifter/tx/n7427 , n2610, n2594, n2609, 
         n2593, \shifter/tx/n7428 , \shifter/tx/n7433 , n2612, n2596, n2611, 
         n2595, \shifter/tx/n7434 , \shifter/tx/n7429 , n2614, n2598, n2613, 
         n2597, \shifter/tx/n7430 , \shifter/rx/s_op_fifo.buf_2_.addr_7 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_7 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_6 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_6 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_5 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_5 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_5 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_4 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_4 , 
         \shifter/rx/s_op_fifo.buf_0_.addr_4 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_3 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_3 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_2 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_2 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_1 , 
         \shifter/rx/s_op_fifo.buf_3_.len_9 , 
         \shifter/rx/s_op_fifo.buf_2_.len_9 , 
         \shifter/rx/s_op_fifo.buf_0_.len_9 , 
         \shifter/rx/s_op_fifo.buf_3_.len_8 , 
         \shifter/rx/s_op_fifo.buf_2_.len_8 , 
         \shifter/rx/s_op_fifo.buf_0_.len_8 , 
         \shifter/rx/s_op_fifo.buf_3_.len_7 , 
         \shifter/rx/s_op_fifo.buf_2_.len_7 , 
         \shifter/rx/s_op_fifo.buf_0_.len_7 , 
         \shifter/rx/s_op_fifo.buf_3_.len_6 , 
         \shifter/rx/s_op_fifo.buf_2_.len_6 , 
         \shifter/rx/s_op_fifo.buf_0_.len_6 , 
         \shifter/rx/s_op_fifo.buf_3_.len_5 , 
         \shifter/rx/s_op_fifo.buf_2_.len_5 , 
         \shifter/rx/s_op_fifo.buf_0_.len_5 , 
         \shifter/rx/s_op_fifo.buf_3_.len_4 , 
         \shifter/rx/s_op_fifo.buf_2_.len_4 , 
         \shifter/rx/s_op_fifo.buf_0_.len_4 , 
         \shifter/rx/s_op_fifo.buf_3_.len_3 , 
         \shifter/rx/s_op_fifo.buf_2_.len_3 , 
         \shifter/rx/s_op_fifo.buf_1_.len_3 , 
         \shifter/rx/s_op_fifo.buf_3_.len_2 , 
         \shifter/rx/s_op_fifo.buf_2_.len_2 , 
         \shifter/rx/s_op_fifo.buf_1_.len_2 , 
         \shifter/rx/s_op_fifo.buf_3_.len_0 , 
         \shifter/rx/s_op_fifo.buf_2_.len_0 , 
         \shifter/rx/s_op_fifo.buf_1_.len_0 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_0 , 
         \shifter/rx/s_op_fifo.buf_3_.pos_0 , 
         \shifter/rx/s_op_fifo.buf_2_.pos_0 , 
         \shifter/rx/s_op_fifo.buf_1_.pos_0 , 
         \shifter/rx/s_op_fifo.buf_3_.msbf , 
         \shifter/rx/s_op_fifo.buf_2_.msbf , 
         \shifter/rx/s_op_fifo.buf_1_.msbf , 
         \shifter/rx/s_op_fifo.buf_0_.msbf , 
         \shifter/rx/s_op_fifo.buf_3_.pos_3 , 
         \shifter/rx/s_op_fifo.buf_2_.pos_3 , 
         \shifter/rx/s_op_fifo.buf_1_.pos_3 , 
         \shifter/rx/s_op_fifo.buf_3_.len_1 , 
         \shifter/rx/s_op_fifo.buf_2_.len_1 , 
         \shifter/rx/s_op_fifo.buf_1_.len_1 , 
         \shifter/rx/s_op_fifo.buf_3_.pos_2 , 
         \shifter/rx/s_op_fifo.buf_2_.pos_2 , 
         \shifter/rx/s_op_fifo.buf_1_.pos_2 , 
         \shifter/rx/s_op_fifo.buf_3_.pos_1 , 
         \shifter/rx/s_op_fifo.buf_2_.pos_1 , 
         \shifter/rx/s_op_fifo.buf_1_.pos_1 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_9 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_9 , 
         \shifter/rx/s_op_fifo.buf_2_.addr_8 , 
         \shifter/rx/s_op_fifo.buf_1_.addr_8 , \shifter/exec_ctrl/n5022 , 
         \shifter/exec_ctrl/s_irscan_state_1 , \shifter/exec_ctrl/n8291 , 
         \shifter/exec_ctrl/n7258 , \shifter/exec_ctrl/s_irscan_state_0 , 
         \shifter/exec_ctrl/s_irpause_state_0 , \shifter/exec_ctrl/n8265 , 
         \shifter/exec_ctrl/n8040 , \shifter/exec_ctrl/n8042 , 
         \shifter/exec_ctrl/n8845 , \shifter/exec_ctrl/n8045 , 
         \shifter/exec_ctrl/n8734 , \shifter/exec_ctrl/s_drscan_state_2 , 
         \shifter/exec_ctrl/n7737 , \shifter/exec_ctrl/n8844 , 
         \shifter/exec_ctrl/n4012 , \shifter/exec_ctrl/n3540 , 
         \shifter/exec_ctrl/n2099 , \shifter/exec_ctrl/s_irpause_state_2 , 
         \shifter/exec_ctrl/n8254 , \shifter/exec_ctrl/n4_adj_1590 , 
         s_desc_lo_3, s_mem_rd_addr_3, s_mem_wr_addr_3, s_r3_0, n7460, n7461, 
         s_end_state_2, mux_177_Mux_0_0_0_0_f5a, s_end_state_1, 
         mux_177_Mux_0_0_0_1_f5b, mux_177_Mux_0_0_0_f5a, s_end_state_0, 
         mux_177_Mux_0_0_1_f5b, mux_177_Mux_0_0_1_0_f5a, mux_177_Mux_0_0_f5a, 
         mux_177_Mux_0_0_1_1_f5b, \shifter/exec_ctrl/n5152 , 
         \shifter/exec_ctrl/s_insn_r0_9 , \shifter/exec_ctrl/s_insn_r0_1 , 
         mux_177_Mux_0_1_f5b, mux_177_Mux_0_1_0_0_f5a, mux_177_Mux_0_1_0_1_f5b, 
         GND_net, mux_177_Mux_0_1_0_f5a, mux_177_Mux_0_1_1_f5b, 
         mux_177_Mux_0_1_1_0_f5a, VCC_net, mux_177_Mux_0_1_1_1_f5b, 
         mux_177_Mux_1_0_0_0_f5a, mux_177_Mux_1_0_0_1_f5b, 
         mux_177_Mux_1_0_0_f5a, mux_177_Mux_1_0_1_f5b, mux_177_Mux_1_0_1_0_f5a, 
         mux_177_Mux_1_0_f5a, mux_177_Mux_1_0_1_1_f5b, mux_177_Mux_1_1_f5b, 
         mux_177_Mux_1_1_0_0_f5a, \shifter/exec_ctrl/s_insn_r0_3 , 
         \shifter/exec_ctrl/s_insn_r0_11 , mux_177_Mux_1_1_0_1_f5b, 
         mux_177_Mux_1_1_0_f5a, mux_177_Mux_1_1_1_f5b, mux_177_Mux_1_1_1_0_f5a, 
         mux_177_Mux_1_1_1_1_f5b, mux_177_Mux_2_0_0_0_f5a, 
         mux_177_Mux_2_0_0_1_f5b, mux_177_Mux_2_0_0_f5a, s_desc_lo_0, 
         mux_177_Mux_2_0_1_f5b, mux_177_Mux_2_0_1_0_f5a, mux_177_Mux_2_0_f5a, 
         mux_177_Mux_2_0_1_1_f5b, n11_adj_1656, mux_177_Mux_2_1_f5b, 
         mux_177_Mux_2_1_0_0_f5a, mux_177_Mux_2_1_0_1_f5b, 
         mux_177_Mux_2_1_0_f5a, mux_177_Mux_2_1_1_f5b, 
         \cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 , tp_trst_c, 
         mux_177_Mux_2_1_1_1_f5b, \shifter/tx/n8198 , 
         \shifter/s_op_fifo.buf_3_.msbf_N_1174_2 , 
         \shifter/s_op_fifo.buf_3_.msbf_N_1174_1 , 
         \shifter/s_op_fifo.buf_3_.msbf_N_1174_3 , \shifter/tx/n8192 , 
         \shifter/tx/n8190 , \shifter/tx/n8260 , \shifter/tx/n8195 , 
         \shifter/s_op_fifo.buf_3_.msbf_N_1174_0 , \shifter/tx/n8189 , 
         \shifter/tx/n8191 , \shifter/tx/n8193 , \shifter/rx/n6644 , 
         \shifter/n8294 , \shifter/ckgen/s_div_hi_r0_2 , 
         \shifter/ckgen/s_div_hi_r0_3 , \shifter/ckgen/s_div_hi_r0_4 , 
         \shifter/ckgen/s_div_hi_r0_5 , \shifter/ckgen/s_div_hi_r0_6 , 
         \shifter/ckgen/s_div_hi_r0_7 , \shifter/ckgen/s_div_hi_r0_14 , 
         \shifter/exec_ctrl/n8341 , s_r3_wr_stb, \shifter/exec_ctrl/n8343 , 
         \cram_bus/s_cram_mem_rd_addr_15 , \cram_bus/s_start_stb , 
         s_dbg_mem_rd, s_mem_rd_addr_5, \led_run_drv/n8319 , 
         \shifter/shift_ctrl/s_en_r2 , n7781, n4959, n8273, 
         \cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 , n7796, n7790, 
         n20_adj_1655, \cram_bus/n8325 , s_ckgen_rtdiv_wr_stb, 
         s_ptr_mem_wr_stb, \cram_bus/reg_wr_fifo/s_addr1_2 , 
         \cram_bus/reg_wr_fifo/s_addr0_2 , s_ckgen_div_wr_stb, n7217, n8286, 
         \cklgen_1khz/n18 , \cklgen_1khz/n7199 , \cklgen_1khz/n7169 , 
         \cklgen_1khz/n8 , n7128, \cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 , 
         s_irq_en_wr_stb, n7149, \led_con_drv/n8321 , 
         \shifter/shift_ctrl/n8222 , \shifter/shift_ctrl/n14 , 
         \shifter/shift_ctrl/n13 , \shifter/ckgen/s_div_hi_r0_12 , 
         \shifter/ckgen/s_div_hi_r0_11 , \shifter/ckgen/s_div_hi_r0_13 , 
         \shifter/ckgen/s_div_hi_r0_9 , s_rx_mem_addr_2, s_rx_mem_addr_3, 
         \shifter/rx/n4_adj_1591 , \shifter/rx/s_op_fifo.head_0 , s_desc_lo_11, 
         \shifter/exec_ctrl/mtms_N_1486_8 , \shifter/exec_ctrl/n5 , 
         \shifter/exec_ctrl/s_insn_r0_12 , \shifter/ckgen/mclk_c_enable_95 , 
         \shifter/exec_ctrl/n20 , \shifter/exec_ctrl/n19 , 
         \shifter/exec_ctrl/n7550 , s_dbg_mem_wr, s_mem_wr_addr_5, 
         \shifter/exec_ctrl/s_insn_r0_10 , \shifter/exec_ctrl/s_insn_r0_2 , 
         n8856, \shifter/exec_ctrl/n7161 , n8857, \shifter/exec_ctrl/n7189 , 
         \shifter/exec_ctrl/n8298 , s_mem_wr_addr_4, 
         \shifter/exec_ctrl/s_insn_r0_8 , \shifter/exec_ctrl/s_insn_r0_0 , 
         \shifter/ckgen/s_tcki_r1 , \shifter/exec_ctrl/n7191 , 
         \shifter/exec_ctrl/s_drpause_state_1 , 
         \shifter/exec_ctrl/s_irpause_state_1 , \shifter/exec_ctrl/n7231 , 
         \shifter/exec_ctrl/n7250 , \shifter/exec_ctrl/n8252 , s_mem_rd_addr_7, 
         s_mem_rd_addr_8, s_mem_wr_addr_7, s_mem_wr_addr_8, 
         \shifter/ckgen/n8248 , fsmc_clk_c_enable_1, fsmc_clk_c_enable_2, 
         \shifter/exec_ctrl/s_insn_r0_4 , \shifter/exec_ctrl/s_insn_r0_5 , 
         \shifter/exec_ctrl/s_insn_r0_6 , \shifter/exec_ctrl/s_insn_r0_7 , 
         \cram_bus/reg_wr_fifo/s_addr1_3 , \cram_bus/reg_wr_fifo/s_addr0_3 , 
         s_mem_wr_addr_9, s_mem_rd_addr_11, s_mem_rd_addr_9, s_desc_lo_4, 
         s_desc_lo_5, s_desc_lo_7, s_we_lo, s_aux_mem_wr_stb, s_mem_rd_addr_4, 
         s_mem_rd_addr_10, s_ptr_addr_5, s_desc_lo_8, s_ptr_addr_2, 
         s_desc_lo_9, s_ptr_addr_4, s_ptr_addr_6, s_ptr_addr_3, 
         s_mem_wr_addr_11, s_ptr_addr_7, s_ptr_addr_1, s_ptr_addr_8, 
         s_mem_wr_addr_10, \rx_mem/mclk_c_enable_28 , 
         \rx_mem/mclk_c_enable_34 , tp_dbgack_c, uart_tx_c, tp_dbgrq_c, 
         uart_rx_c, s_cram_dout_0, s_cram_dout_15, s_cram_dout_1, 
         s_cram_dout_14, s_cram_dout_2, s_cram_dout_13, s_cram_dout_3, 
         s_cram_dout_12, s_cram_dout_4, s_cram_dout_11, s_cram_dout_5, 
         s_cram_dout_10, s_cram_dout_6, s_cram_dout_9, s_cram_dout_7, 
         s_cram_dout_8, s_desc_addr_1, s_rx_mem_addr_0, s_rx_mem_addr_1, 
         \shifter/ckgen/s_rtdiv_hi_r0_2 , \shifter/ckgen/s_rtdiv_hi_r0_3 , 
         \shifter/ckgen/s_rtdiv_hi_r0_4 , \shifter/ckgen/s_rtdiv_hi_r0_5 , 
         \shifter/ckgen/s_rtdiv_hi_r0_6 , \shifter/ckgen/s_rtdiv_hi_r0_7 , 
         \shifter/ckgen/s_rtdiv_hi_r0_9 , \shifter/ckgen/s_rtdiv_hi_r0_14 , 
         \shifter/ckgen/s_rtdiv_hi_r0_13 , \shifter/ckgen/s_tcken_r0 ;

  cklgen_1khz_SLICE_0 \cklgen_1khz/SLICE_0 ( .A1(\cklgen_1khz/s_count_6 ), 
    .A0(\cklgen_1khz/s_count_5 ), .DI1(\cklgen_1khz/n39 ), 
    .DI0(\cklgen_1khz/n40 ), .CE(s_1mhz_stb), .LSR(\cklgen_1khz/n4050 ), 
    .CLK(mclk_c), .FCI(\cklgen_1khz/n6451 ), .F0(\cklgen_1khz/n40 ), 
    .Q0(\cklgen_1khz/s_count_5 ), .F1(\cklgen_1khz/n39 ), 
    .Q1(\cklgen_1khz/s_count_6 ), .FCO(\cklgen_1khz/n6452 ));
  cklgen_1khz_SLICE_1 \cklgen_1khz/SLICE_1 ( .A0(\cklgen_1khz/s_count_9 ), 
    .DI0(\cklgen_1khz/n36 ), .CE(s_1mhz_stb), .LSR(\cklgen_1khz/n4050 ), 
    .CLK(mclk_c), .FCI(\cklgen_1khz/n6453 ), .F0(\cklgen_1khz/n36 ), 
    .Q0(\cklgen_1khz/s_count_9 ));
  cklgen_1khz_SLICE_2 \cklgen_1khz/SLICE_2 ( .A1(\cklgen_1khz/s_count_8 ), 
    .A0(\cklgen_1khz/s_count_7 ), .DI1(\cklgen_1khz/n37 ), 
    .DI0(\cklgen_1khz/n38 ), .CE(s_1mhz_stb), .LSR(\cklgen_1khz/n4050 ), 
    .CLK(mclk_c), .FCI(\cklgen_1khz/n6452 ), .F0(\cklgen_1khz/n38 ), 
    .Q0(\cklgen_1khz/s_count_7 ), .F1(\cklgen_1khz/n37 ), 
    .Q1(\cklgen_1khz/s_count_8 ), .FCO(\cklgen_1khz/n6453 ));
  cklgen_1khz_SLICE_3 \cklgen_1khz/SLICE_3 ( .A1(\cklgen_1khz/s_count_2 ), 
    .A0(\cklgen_1khz/s_count_1 ), .DI1(\cklgen_1khz/n43 ), 
    .DI0(\cklgen_1khz/n44 ), .CE(s_1mhz_stb), .LSR(\cklgen_1khz/n4050 ), 
    .CLK(mclk_c), .FCI(\cklgen_1khz/n6449 ), .F0(\cklgen_1khz/n44 ), 
    .Q0(\cklgen_1khz/s_count_1 ), .F1(\cklgen_1khz/n43 ), 
    .Q1(\cklgen_1khz/s_count_2 ), .FCO(\cklgen_1khz/n6450 ));
  cklgen_1khz_SLICE_4 \cklgen_1khz/SLICE_4 ( .A1(\cklgen_1khz/s_count_0 ), 
    .DI1(\cklgen_1khz/n45 ), .CE(s_1mhz_stb), .LSR(\cklgen_1khz/n4050 ), 
    .CLK(mclk_c), .F1(\cklgen_1khz/n45 ), .Q1(\cklgen_1khz/s_count_0 ), 
    .FCO(\cklgen_1khz/n6449 ));
  cklgen_1khz_SLICE_5 \cklgen_1khz/SLICE_5 ( .A1(\cklgen_1khz/s_count_4 ), 
    .A0(\cklgen_1khz/s_count_3 ), .DI1(\cklgen_1khz/n41 ), 
    .DI0(\cklgen_1khz/n42 ), .CE(s_1mhz_stb), .LSR(\cklgen_1khz/n4050 ), 
    .CLK(mclk_c), .FCI(\cklgen_1khz/n6450 ), .F0(\cklgen_1khz/n42 ), 
    .Q0(\cklgen_1khz/s_count_3 ), .F1(\cklgen_1khz/n41 ), 
    .Q1(\cklgen_1khz/s_count_4 ), .FCO(\cklgen_1khz/n6451 ));
  cklgen_1mhz_SLICE_6 \cklgen_1mhz/SLICE_6 ( .A1(\cklgen_1mhz/s_count_0 ), 
    .DI1(\cklgen_1mhz/n29 ), .LSR(\cklgen_1mhz/n4033 ), .CLK(mclk_c), 
    .F1(\cklgen_1mhz/n29 ), .Q1(\cklgen_1mhz/s_count_0 ), 
    .FCO(\cklgen_1mhz/n6446 ));
  cklgen_1mhz_SLICE_7 \cklgen_1mhz/SLICE_7 ( .A0(\cklgen_1mhz/s_count_5 ), 
    .DI0(\cklgen_1mhz/n24 ), .LSR(\cklgen_1mhz/n4033 ), .CLK(mclk_c), 
    .FCI(\cklgen_1mhz/n6448 ), .F0(\cklgen_1mhz/n24 ), 
    .Q0(\cklgen_1mhz/s_count_5 ));
  cklgen_1mhz_SLICE_8 \cklgen_1mhz/SLICE_8 ( .A1(\cklgen_1mhz/s_count_4 ), 
    .A0(\cklgen_1mhz/s_count_3 ), .DI1(\cklgen_1mhz/n25 ), 
    .DI0(\cklgen_1mhz/n26 ), .LSR(\cklgen_1mhz/n4033 ), .CLK(mclk_c), 
    .FCI(\cklgen_1mhz/n6447 ), .F0(\cklgen_1mhz/n26 ), 
    .Q0(\cklgen_1mhz/s_count_3 ), .F1(\cklgen_1mhz/n25 ), 
    .Q1(\cklgen_1mhz/s_count_4 ), .FCO(\cklgen_1mhz/n6448 ));
  cklgen_1mhz_SLICE_9 \cklgen_1mhz/SLICE_9 ( .A1(\cklgen_1mhz/s_count_2 ), 
    .A0(\cklgen_1mhz/s_count_1 ), .DI1(\cklgen_1mhz/n27 ), 
    .DI0(\cklgen_1mhz/n28 ), .LSR(\cklgen_1mhz/n4033 ), .CLK(mclk_c), 
    .FCI(\cklgen_1mhz/n6446 ), .F0(\cklgen_1mhz/n28 ), 
    .Q0(\cklgen_1mhz/s_count_1 ), .F1(\cklgen_1mhz/n27 ), 
    .Q1(\cklgen_1mhz/s_count_2 ), .FCO(\cklgen_1mhz/n6447 ));
  shifter_tx_SLICE_10 \shifter/tx/SLICE_10 ( .D1(s_desc_data_19), 
    .C1(\shifter/tx/s_sum_9 ), .B1(\shifter/n8858 ), .D0(s_desc_data_18), 
    .C0(\shifter/tx/s_sum_8 ), .B0(\shifter/n8858 ), .DI1(s_addr_0_9), 
    .DI0(s_addr_0_8), .CLK(mclk_c), .FCI(\shifter/tx/n6498 ), .F0(s_addr_0_8), 
    .Q0(\shifter/tx/s_addr_r_8 ), .F1(s_addr_0_9), 
    .Q1(\shifter/tx/s_addr_r_9 ));
  shifter_tx_SLICE_11 \shifter/tx/SLICE_11 ( .D1(s_desc_data_17), 
    .C1(\shifter/tx/s_sum_7 ), .B1(\shifter/n8858 ), .D0(s_desc_data_16), 
    .C0(\shifter/tx/s_sum_6 ), .B0(\shifter/n8858 ), .DI1(s_addr_0_7), 
    .DI0(s_addr_0_6), .CLK(mclk_c), .FCI(\shifter/tx/n6497 ), .F0(s_addr_0_6), 
    .Q0(\shifter/tx/s_addr_r_6 ), .F1(s_addr_0_7), 
    .Q1(\shifter/tx/s_addr_r_7 ), .FCO(\shifter/tx/n6498 ));
  shifter_tx_SLICE_12 \shifter/tx/SLICE_12 ( .D1(s_desc_data_15), 
    .C1(\shifter/tx/s_sum_5 ), .B1(\shifter/n8858 ), .A1(\shifter/tx/n2222 ), 
    .D0(s_desc_data_14), .C0(\shifter/tx/s_sum_4 ), .B0(\shifter/n8858 ), 
    .A0(\shifter/tx/n2223 ), .DI1(s_addr_0_5), .DI0(s_addr_0_4), .CLK(mclk_c), 
    .FCI(\shifter/tx/n6496 ), .F0(s_addr_0_4), .Q0(\shifter/tx/s_addr_r_4 ), 
    .F1(s_addr_0_5), .Q1(\shifter/tx/s_addr_r_5 ), .FCO(\shifter/tx/n6497 ));
  shifter_tx_SLICE_13 \shifter/tx/SLICE_13 ( .D1(s_desc_data_13), 
    .C1(\shifter/tx/s_sum_3 ), .B1(\shifter/n8858 ), .A1(\shifter/tx/n2224 ), 
    .D0(s_desc_data_12), .C0(\shifter/tx/s_sum_2 ), .B0(\shifter/n8858 ), 
    .A0(\shifter/tx/n2225 ), .DI1(s_addr_0_3), .DI0(s_addr_0_2), .CLK(mclk_c), 
    .FCI(\shifter/tx/n6495 ), .F0(s_addr_0_2), .Q0(\shifter/tx/s_addr_r_2 ), 
    .F1(s_addr_0_3), .Q1(\shifter/tx/s_addr_r_3 ), .FCO(\shifter/tx/n6496 ));
  shifter_tx_SLICE_14 \shifter/tx/SLICE_14 ( .D1(s_desc_data_11), 
    .C1(\shifter/tx/s_sum_1 ), .B1(\shifter/n8858 ), .A1(\shifter/tx/n2226 ), 
    .D0(s_desc_data_10), .C0(\shifter/tx/s_sum_0 ), .B0(\shifter/n8858 ), 
    .A0(\shifter/tx/n2227 ), .DI1(s_addr_0_1), .DI0(s_addr_0_0), .CLK(mclk_c), 
    .FCI(\shifter/tx/n6494 ), .F0(s_addr_0_0), .Q0(\shifter/tx/s_addr_r_0 ), 
    .F1(s_addr_0_1), .Q1(\shifter/tx/s_addr_r_1 ), .FCO(\shifter/tx/n6495 ));
  shifter_SLICE_15 \shifter/SLICE_15 ( .B1(\shifter/n8217 ), 
    .A1(\shifter/s_en_r1 ), .M1(\shifter/rx/s_op0.addr_1 ), 
    .M0(\shifter/rx/s_op0.addr_0 ), .CE(\shifter/mclk_c_enable_219 ), 
    .CLK(mclk_c), .Q0(\shifter/rx/s_op_fifo.buf_2_.addr_0 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.addr_1 ), .FCO(\shifter/tx/n6494 ));
  shifter_SLICE_16 \shifter/SLICE_16 ( .A0(s_ptr_data_7), 
    .M1(\shifter/rx/s_op0.addr_3 ), .M0(\shifter/rx/s_op0.addr_2 ), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6503 ), 
    .F0(\shifter/shift_ctrl/s_stop_N_1313_7 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.addr_2 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.addr_3 ));
  shifter_SLICE_17 \shifter/SLICE_17 ( .A1(s_ptr_data_6), .A0(s_ptr_data_5), 
    .M1(\shifter/rx/s_op0.addr_1 ), .M0(\shifter/rx/s_op0.addr_0 ), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6502 ), 
    .F0(\shifter/shift_ctrl/s_stop_N_1313_5 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.addr_0 ), 
    .F1(\shifter/shift_ctrl/s_stop_N_1313_6 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.addr_1 ), 
    .FCO(\shifter/shift_ctrl/n6503 ));
  shifter_SLICE_18 \shifter/SLICE_18 ( .A1(s_ptr_data_4), .A0(s_ptr_data_3), 
    .M1(\shifter/rx/s_addr_r1_9 ), .M0(\shifter/rx/s_addr_r1_8 ), 
    .CE(\shifter/mclk_c_enable_204 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6501 ), 
    .F0(\shifter/shift_ctrl/s_stop_N_1313_3 ), .Q0(s_rx_mem_addr_8), 
    .F1(\shifter/shift_ctrl/s_stop_N_1313_4 ), .Q1(s_rx_mem_addr_9), 
    .FCO(\shifter/shift_ctrl/n6502 ));
  shifter_SLICE_19 \shifter/SLICE_19 ( .A1(s_ptr_data_2), .A0(s_ptr_data_1), 
    .M1(\shifter/rx/s_addr_r1_7 ), .M0(\shifter/rx/s_addr_r1_6 ), 
    .CE(\shifter/mclk_c_enable_204 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6500 ), 
    .F0(\shifter/shift_ctrl/s_stop_N_1313_1 ), .Q0(s_rx_mem_addr_6), 
    .F1(\shifter/shift_ctrl/s_stop_N_1313_2 ), .Q1(s_rx_mem_addr_7), 
    .FCO(\shifter/shift_ctrl/n6501 ));
  shifter_SLICE_20 \shifter/SLICE_20 ( .A1(s_ptr_data_0), 
    .M1(\shifter/rx/s_addr_r1_5 ), .M0(\shifter/rx/s_addr_r1_4 ), 
    .CE(\shifter/mclk_c_enable_204 ), .CLK(mclk_c), .Q0(s_rx_mem_addr_4), 
    .F1(\shifter/shift_ctrl/s_stop_N_1313_0 ), .Q1(s_rx_mem_addr_5), 
    .FCO(\shifter/shift_ctrl/n6500 ));
  shifter_SLICE_21 \shifter/SLICE_21 ( .D0(\shifter/s_offs_r_0 ), 
    .C0(\shifter/shift_ctrl/s_stop_N_1313_0 ), .B0(\shifter/s_offs_r_1 ), 
    .A0(\shifter/shift_ctrl/s_stop_N_1313_1 ), .M1(s_desc_data_9), 
    .M0(s_desc_data_8), .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6406 ), .Q0(\shifter/rx/s_op_fifo.buf_1_.len_8 ), 
    .F1(\shifter/shift_ctrl/s_stop_N_1312 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.len_9 ));
  shifter_SLICE_22 \shifter/SLICE_22 ( .D1(\shifter/shift_ctrl/s_offs_r_2 ), 
    .C1(\shifter/shift_ctrl/s_stop_N_1313_2 ), 
    .B1(\shifter/shift_ctrl/s_offs_r_3 ), 
    .A1(\shifter/shift_ctrl/s_stop_N_1313_3 ), 
    .D0(\shifter/shift_ctrl/s_offs_r_4 ), 
    .C0(\shifter/shift_ctrl/s_stop_N_1313_4 ), 
    .B0(\shifter/shift_ctrl/s_offs_r_5 ), 
    .A0(\shifter/shift_ctrl/s_stop_N_1313_5 ), .M1(s_desc_data_7), 
    .M0(s_desc_data_6), .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6405 ), .Q0(\shifter/rx/s_op_fifo.buf_1_.len_6 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.len_7 ), .FCO(\shifter/shift_ctrl/n6406 ));
  shifter_SLICE_23 \shifter/SLICE_23 ( .D1(\shifter/shift_ctrl/s_offs_r_6 ), 
    .C1(\shifter/shift_ctrl/s_stop_N_1313_6 ), 
    .B1(\shifter/shift_ctrl/s_offs_r_7 ), 
    .A1(\shifter/shift_ctrl/s_stop_N_1313_7 ), .M1(s_desc_data_5), 
    .M0(s_desc_data_4), .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.len_4 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.len_5 ), .FCO(\shifter/shift_ctrl/n6405 ));
  shifter_SLICE_24 \shifter/SLICE_24 ( .B1(\shifter/shift_ctrl/s_offs_r_7 ), 
    .A1(s_ptr_data_15), .B0(\shifter/shift_ctrl/s_offs_r_6 ), 
    .A0(s_ptr_data_14), .M1(s_pos_0_3_N_670_3), .M0(s_pos_0_3_N_670_2), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6507 ), .F0(s_desc_addr_7), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.len_2 ), .F1(s_desc_addr_8), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.len_3 ));
  shifter_SLICE_25 \shifter/SLICE_25 ( .B1(\shifter/shift_ctrl/s_offs_r_5 ), 
    .A1(s_ptr_data_13), .B0(\shifter/shift_ctrl/s_offs_r_4 ), 
    .A0(s_ptr_data_12), .M1(s_pos_0_3_N_670_1), .M0(s_pos_0_3_N_670_0), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .FCI(\shifter/shift_ctrl/n6506 ), .F0(s_desc_addr_5), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.len_0 ), .F1(s_desc_addr_6), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.len_1 ), .FCO(\shifter/shift_ctrl/n6507 ));
  shifter_SLICE_26 \shifter/SLICE_26 ( .B1(\shifter/shift_ctrl/s_offs_r_3 ), 
    .A1(s_ptr_data_11), .B0(\shifter/shift_ctrl/s_offs_r_2 ), 
    .A0(s_ptr_data_10), .M1(\shifter/rx/s_op0.addr_9 ), 
    .M0(\shifter/rx/s_op0.addr_8 ), .CE(\shifter/mclk_c_enable_243 ), 
    .CLK(mclk_c), .FCI(\shifter/shift_ctrl/n6505 ), .F0(s_desc_addr_3), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.addr_8 ), .F1(s_desc_addr_4), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.addr_9 ), 
    .FCO(\shifter/shift_ctrl/n6506 ));
  shifter_SLICE_27 \shifter/SLICE_27 ( .B1(\shifter/s_offs_r_1 ), 
    .A1(s_ptr_data_9), .B0(\shifter/s_offs_r_0 ), .A0(s_ptr_data_8), 
    .M1(\shifter/rx/s_op0.addr_7 ), .M0(\shifter/rx/s_op0.addr_6 ), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.addr_6 ), .F1(s_desc_addr_2), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.addr_7 ), 
    .FCO(\shifter/shift_ctrl/n6505 ));
  shifter_rx_SLICE_28 \shifter/rx/SLICE_28 ( .A0(s_desc_data_29), 
    .DI0(\shifter/rx/s_op0.addr_9 ), .CE(\shifter/mclk_c_enable_207 ), 
    .CLK(mclk_c), .FCI(\shifter/rx/n6490 ), .F0(\shifter/rx/s_op0.addr_9 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.addr_9 ));
  shifter_rx_SLICE_29 \shifter/rx/SLICE_29 ( .A1(s_desc_data_28), 
    .A0(s_desc_data_27), .DI1(\shifter/rx/s_op0.addr_8 ), 
    .DI0(\shifter/rx/s_op0.addr_7 ), .CE(\shifter/mclk_c_enable_207 ), 
    .CLK(mclk_c), .FCI(\shifter/rx/n6489 ), .F0(\shifter/rx/s_op0.addr_7 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.addr_7 ), .F1(\shifter/rx/s_op0.addr_8 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.addr_8 ), .FCO(\shifter/rx/n6490 ));
  shifter_rx_SLICE_30 \shifter/rx/SLICE_30 ( .A1(s_desc_data_26), 
    .C0(s_desc_data_25), .B0(s_desc_data_31), .A0(s_desc_data_9), 
    .DI1(\shifter/rx/s_op0.addr_6 ), .DI0(\shifter/rx/s_op0.addr_5 ), 
    .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), .FCI(\shifter/rx/n6488 ), 
    .F0(\shifter/rx/s_op0.addr_5 ), .Q0(\shifter/rx/s_op_fifo.buf_3_.addr_5 ), 
    .F1(\shifter/rx/s_op0.addr_6 ), .Q1(\shifter/rx/s_op_fifo.buf_3_.addr_6 ), 
    .FCO(\shifter/rx/n6489 ));
  shifter_rx_SLICE_31 \shifter/rx/SLICE_31 ( .C1(s_desc_data_24), 
    .B1(s_desc_data_31), .A1(s_desc_data_8), .C0(s_desc_data_23), 
    .B0(s_desc_data_31), .A0(s_desc_data_7), .DI1(\shifter/rx/s_op0.addr_4 ), 
    .DI0(\shifter/rx/s_op0.addr_3 ), .CE(\shifter/mclk_c_enable_207 ), 
    .CLK(mclk_c), .FCI(\shifter/rx/n6487 ), .F0(\shifter/rx/s_op0.addr_3 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.addr_3 ), .F1(\shifter/rx/s_op0.addr_4 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.addr_4 ), .FCO(\shifter/rx/n6488 ));
  shifter_rx_SLICE_32 \shifter/rx/SLICE_32 ( .C1(s_desc_data_22), 
    .B1(s_desc_data_31), .A1(s_desc_data_6), .C0(s_desc_data_21), 
    .B0(s_desc_data_31), .A0(s_desc_data_5), .DI1(\shifter/rx/s_op0.addr_2 ), 
    .DI0(\shifter/rx/s_op0.addr_1 ), .CE(\shifter/mclk_c_enable_207 ), 
    .CLK(mclk_c), .FCI(\shifter/rx/n6486 ), .F0(\shifter/rx/s_op0.addr_1 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.addr_1 ), .F1(\shifter/rx/s_op0.addr_2 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.addr_2 ), .FCO(\shifter/rx/n6487 ));
  shifter_rx_SLICE_33 \shifter/rx/SLICE_33 ( .C1(s_desc_data_20), 
    .B1(s_desc_data_31), .A1(s_desc_data_4), .DI1(\shifter/rx/s_op0.addr_0 ), 
    .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), 
    .F1(\shifter/rx/s_op0.addr_0 ), .Q1(\shifter/rx/s_op_fifo.buf_3_.addr_0 ), 
    .FCO(\shifter/rx/n6486 ));
  shifter_SLICE_34 \shifter/SLICE_34 ( .D0(\shifter/exec_ctrl/s_cnt_reg_0 ), 
    .C0(\shifter/exec_ctrl/s_cnt_top_0 ), .B0(\shifter/exec_ctrl/s_cnt_reg_1 ), 
    .A0(\shifter/exec_ctrl/s_cnt_top_1 ), .M1(\shifter/ckgen/s_tck_r0 ), 
    .M0(\shifter/ckgen/s_rtcken_r1 ), .LSR(\shifter/ckgen/s_enabled ), 
    .CLK(mclk_c), .FCI(\shifter/exec_ctrl/n6408 ), 
    .Q0(\shifter/ckgen/s_rtcken_reg ), .F1(\shifter/exec_ctrl/s_cnt_ovf ), 
    .Q1(tp_tck_c));
  shifter_SLICE_35 \shifter/SLICE_35 ( .D1(\shifter/exec_ctrl/s_cnt_reg_2 ), 
    .C1(\shifter/exec_ctrl/s_cnt_top_2 ), .B1(\shifter/exec_ctrl/s_cnt_reg_3 ), 
    .A1(\shifter/exec_ctrl/s_cnt_top_3 ), .D0(\shifter/exec_ctrl/s_cnt_reg_4 ), 
    .C0(\shifter/exec_ctrl/s_cnt_top_4 ), .B0(\shifter/exec_ctrl/s_cnt_reg_5 ), 
    .A0(\shifter/exec_ctrl/s_cnt_top_5 ), .M0(\shifter/ckgen/s_rtcken_reg ), 
    .CE(\shifter/ckgen/mclk_c_enable_41 ), .LSR(\shifter/ckgen/s_enabled ), 
    .CLK(mclk_c), .FCI(\shifter/exec_ctrl/n6407 ), .Q0(s_irq_1), 
    .FCO(\shifter/exec_ctrl/n6408 ));
  shifter_SLICE_36 \shifter/SLICE_36 ( .D1(\shifter/exec_ctrl/s_cnt_reg_6 ), 
    .C1(\shifter/exec_ctrl/s_cnt_top_6 ), .B1(\shifter/exec_ctrl/s_cnt_reg_7 ), 
    .A1(\shifter/exec_ctrl/s_cnt_top_7 ), .M0(\shifter/ckgen/s_rtck_r0 ), 
    .LSR(\shifter/ckgen/n8307 ), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtck_r1 ), 
    .FCO(\shifter/exec_ctrl/n6407 ));
  shifter_exec_ctrl_SLICE_37 \shifter/exec_ctrl/SLICE_37 ( 
    .A0(\shifter/exec_ctrl/s_cnt_reg_7 ), .DI0(\shifter/exec_ctrl/n334 ), 
    .CE(\shifter/exec_ctrl/mclk_c_enable_114 ), 
    .LSR(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .FCI(\shifter/exec_ctrl/n6512 ), .F0(\shifter/exec_ctrl/n334 ), 
    .Q0(\shifter/exec_ctrl/s_cnt_reg_7 ));
  shifter_exec_ctrl_SLICE_38 \shifter/exec_ctrl/SLICE_38 ( 
    .A1(\shifter/exec_ctrl/s_cnt_reg_6 ), .A0(\shifter/exec_ctrl/s_cnt_reg_5 ), 
    .DI1(\shifter/exec_ctrl/n335 ), .DI0(\shifter/exec_ctrl/n336 ), 
    .CE(\shifter/exec_ctrl/mclk_c_enable_114 ), 
    .LSR(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .FCI(\shifter/exec_ctrl/n6511 ), .F0(\shifter/exec_ctrl/n336 ), 
    .Q0(\shifter/exec_ctrl/s_cnt_reg_5 ), .F1(\shifter/exec_ctrl/n335 ), 
    .Q1(\shifter/exec_ctrl/s_cnt_reg_6 ), .FCO(\shifter/exec_ctrl/n6512 ));
  shifter_exec_ctrl_SLICE_39 \shifter/exec_ctrl/SLICE_39 ( 
    .A1(\shifter/exec_ctrl/s_cnt_reg_4 ), .A0(\shifter/exec_ctrl/s_cnt_reg_3 ), 
    .DI1(\shifter/exec_ctrl/n337 ), .DI0(\shifter/exec_ctrl/n338 ), 
    .CE(\shifter/exec_ctrl/mclk_c_enable_114 ), 
    .LSR(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .FCI(\shifter/exec_ctrl/n6510 ), .F0(\shifter/exec_ctrl/n338 ), 
    .Q0(\shifter/exec_ctrl/s_cnt_reg_3 ), .F1(\shifter/exec_ctrl/n337 ), 
    .Q1(\shifter/exec_ctrl/s_cnt_reg_4 ), .FCO(\shifter/exec_ctrl/n6511 ));
  shifter_exec_ctrl_SLICE_40 \shifter/exec_ctrl/SLICE_40 ( 
    .A1(\shifter/exec_ctrl/s_cnt_reg_2 ), .A0(\shifter/exec_ctrl/s_cnt_reg_1 ), 
    .DI1(\shifter/exec_ctrl/n339 ), .DI0(\shifter/exec_ctrl/n340 ), 
    .CE(\shifter/exec_ctrl/mclk_c_enable_114 ), 
    .LSR(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .FCI(\shifter/exec_ctrl/n6509 ), .F0(\shifter/exec_ctrl/n340 ), 
    .Q0(\shifter/exec_ctrl/s_cnt_reg_1 ), .F1(\shifter/exec_ctrl/n339 ), 
    .Q1(\shifter/exec_ctrl/s_cnt_reg_2 ), .FCO(\shifter/exec_ctrl/n6510 ));
  shifter_exec_ctrl_SLICE_41 \shifter/exec_ctrl/SLICE_41 ( 
    .A1(\shifter/exec_ctrl/s_cnt_reg_0 ), .DI1(\shifter/exec_ctrl/n341 ), 
    .CE(\shifter/exec_ctrl/mclk_c_enable_114 ), 
    .LSR(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F1(\shifter/exec_ctrl/n341 ), .Q1(\shifter/exec_ctrl/s_cnt_reg_0 ), 
    .FCO(\shifter/exec_ctrl/n6509 ));
  SLICE_42 SLICE_42( .M1(s_desc_data_27), .M0(s_desc_data_26), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6404 ), 
    .F0(\shifter/ckgen/rtcktmo_N_629 ), .Q0(s_desc_hi_10), .Q1(s_desc_hi_11));
  SLICE_43 SLICE_43( .D1(\shifter/ckgen/s_cnt_lo_r_4 ), 
    .C1(\shifter/ckgen/s_cmp_lo_4 ), .B1(\shifter/ckgen/s_cnt_lo_r_5 ), 
    .A1(\shifter/ckgen/s_cmp_lo_5 ), .D0(\shifter/ckgen/s_cnt_lo_r_6 ), 
    .C0(\shifter/ckgen/s_cmp_lo_6 ), .B0(\shifter/ckgen/s_cnt_lo_r_7 ), 
    .A0(\shifter/ckgen/s_cmp_lo_7 ), .M1(s_desc_data_21), .M0(s_desc_data_20), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6398 ), 
    .Q0(s_desc_hi_4), .Q1(s_desc_hi_5), .FCO(\shifter/ckgen/n6399 ));
  shifter_ckgen_SLICE_44 \shifter/ckgen/SLICE_44 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_6 ), .A0(\shifter/ckgen/s_cnt_hi_r_5 ), 
    .DI1(\shifter/ckgen/n74_adj_1576 ), .DI0(\shifter/ckgen/n75_adj_1574 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6464 ), 
    .F0(\shifter/ckgen/n75_adj_1574 ), .Q0(\shifter/ckgen/s_cnt_hi_r_5 ), 
    .F1(\shifter/ckgen/n74_adj_1576 ), .Q1(\shifter/ckgen/s_cnt_hi_r_6 ), 
    .FCO(\shifter/ckgen/n6465 ));
  SLICE_45 SLICE_45( .D1(\shifter/ckgen/s_cnt_hi_r_0 ), 
    .C1(\shifter/ckgen/s_cmp_hi_0 ), .B1(\shifter/ckgen/s_cnt_hi_r_1 ), 
    .A1(\shifter/ckgen/s_cmp_hi_1 ), .D0(\shifter/ckgen/s_cnt_hi_r_2 ), 
    .C0(\shifter/ckgen/s_cmp_hi_2 ), .B0(\shifter/ckgen/s_cnt_hi_r_3 ), 
    .A0(\shifter/ckgen/s_cmp_hi_3 ), .M1(s_desc_data_29), .M0(s_desc_data_28), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6403 ), 
    .Q0(s_desc_hi_12), .Q1(s_desc_hi_13), .FCO(\shifter/ckgen/n6404 ));
  shifter_ckgen_SLICE_46 \shifter/ckgen/SLICE_46 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_4 ), .A0(\shifter/ckgen/s_cnt_hi_r_3 ), 
    .DI1(\shifter/ckgen/n76 ), .DI0(\shifter/ckgen/n77 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6463 ), .F0(\shifter/ckgen/n77 ), 
    .Q0(\shifter/ckgen/s_cnt_hi_r_3 ), .F1(\shifter/ckgen/n76 ), 
    .Q1(\shifter/ckgen/s_cnt_hi_r_4 ), .FCO(\shifter/ckgen/n6464 ));
  shifter_ckgen_SLICE_47 \shifter/ckgen/SLICE_47 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_4 ), .A0(\shifter/ckgen/s_cnt_lo_r_3 ), 
    .DI1(\shifter/ckgen/n76_adj_1575 ), .DI0(\shifter/ckgen/n77_adj_1577 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6455 ), 
    .F0(\shifter/ckgen/n77_adj_1577 ), .Q0(\shifter/ckgen/s_cnt_lo_r_3 ), 
    .F1(\shifter/ckgen/n76_adj_1575 ), .Q1(\shifter/ckgen/s_cnt_lo_r_4 ), 
    .FCO(\shifter/ckgen/n6456 ));
  shifter_ckgen_SLICE_48 \shifter/ckgen/SLICE_48 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_2 ), .A0(\shifter/ckgen/s_cnt_lo_r_1 ), 
    .DI1(\shifter/ckgen/n78_adj_1579 ), .DI0(\shifter/ckgen/n79_adj_1578 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6454 ), 
    .F0(\shifter/ckgen/n79_adj_1578 ), .Q0(\shifter/ckgen/s_cnt_lo_r_1 ), 
    .F1(\shifter/ckgen/n78_adj_1579 ), .Q1(\shifter/ckgen/s_cnt_lo_r_2 ), 
    .FCO(\shifter/ckgen/n6455 ));
  SLICE_49 SLICE_49( .D1(\shifter/ckgen/s_cnt_hi_r_4 ), 
    .C1(\shifter/ckgen/s_cmp_hi_4 ), .B1(\shifter/ckgen/s_cnt_hi_r_5 ), 
    .A1(\shifter/ckgen/s_cmp_hi_5 ), .D0(\shifter/ckgen/s_cnt_hi_r_6 ), 
    .C0(\shifter/ckgen/s_cmp_hi_6 ), .B0(\shifter/ckgen/s_cnt_hi_r_7 ), 
    .A0(\shifter/ckgen/s_cmp_hi_7 ), .M1(s_desc_data_17), .M0(s_desc_data_16), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6402 ), 
    .Q0(s_desc_hi_0), .Q1(s_desc_hi_1), .FCO(\shifter/ckgen/n6403 ));
  shifter_ckgen_SLICE_50 \shifter/ckgen/SLICE_50 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_0 ), .DI1(\shifter/ckgen/n80 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .F1(\shifter/ckgen/n80 ), .Q1(\shifter/ckgen/s_cnt_lo_r_0 ), 
    .FCO(\shifter/ckgen/n6454 ));
  SLICE_51 SLICE_51( .D1(\shifter/ckgen/s_cnt_lo_r_8 ), 
    .C1(\shifter/ckgen/s_cmp_lo_8 ), .B1(\shifter/ckgen/s_cnt_lo_r_9 ), 
    .A1(\shifter/ckgen/s_cmp_lo_9 ), .D0(\shifter/ckgen/s_cnt_lo_r_10 ), 
    .C0(\shifter/ckgen/s_cmp_lo_10 ), .B0(\shifter/ckgen/s_cnt_lo_r_11 ), 
    .A0(\shifter/ckgen/s_cmp_lo_11 ), .M1(s_desc_data_19), .M0(s_desc_data_18), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6397 ), 
    .Q0(s_desc_hi_2), .Q1(s_desc_hi_3), .FCO(\shifter/ckgen/n6398 ));
  shifter_ckgen_SLICE_52 \shifter/ckgen/SLICE_52 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_2 ), .A0(\shifter/ckgen/s_cnt_hi_r_1 ), 
    .DI1(\shifter/ckgen/n78 ), .DI0(\shifter/ckgen/n79 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6462 ), .F0(\shifter/ckgen/n79 ), 
    .Q0(\shifter/ckgen/s_cnt_hi_r_1 ), .F1(\shifter/ckgen/n78 ), 
    .Q1(\shifter/ckgen/s_cnt_hi_r_2 ), .FCO(\shifter/ckgen/n6463 ));
  shifter_ckgen_SLICE_53 \shifter/ckgen/SLICE_53 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_0 ), .DI1(\shifter/ckgen/n80_adj_1587 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .F1(\shifter/ckgen/n80_adj_1587 ), 
    .Q1(\shifter/ckgen/s_cnt_hi_r_0 ), .FCO(\shifter/ckgen/n6462 ));
  shifter_ckgen_SLICE_54 \shifter/ckgen/SLICE_54 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_14 ), .A0(\shifter/ckgen/s_cnt_lo_r_13 ), 
    .DI1(\shifter/ckgen/n66_adj_1588 ), .DI0(\shifter/ckgen/n67_adj_1586 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6460 ), 
    .F0(\shifter/ckgen/n67_adj_1586 ), .Q0(\shifter/ckgen/s_cnt_lo_r_13 ), 
    .F1(\shifter/ckgen/n66_adj_1588 ), .Q1(\shifter/ckgen/s_cnt_lo_r_14 ));
  shifter_ckgen_SLICE_55 \shifter/ckgen/SLICE_55 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_12 ), .A0(\shifter/ckgen/s_cnt_lo_r_11 ), 
    .DI1(\shifter/ckgen/n68_adj_1585 ), .DI0(\shifter/ckgen/n69_adj_1583 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6459 ), 
    .F0(\shifter/ckgen/n69_adj_1583 ), .Q0(\shifter/ckgen/s_cnt_lo_r_11 ), 
    .F1(\shifter/ckgen/n68_adj_1585 ), .Q1(\shifter/ckgen/s_cnt_lo_r_12 ), 
    .FCO(\shifter/ckgen/n6460 ));
  shifter_ckgen_SLICE_56 \shifter/ckgen/SLICE_56 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_10 ), .A0(\shifter/ckgen/s_cnt_lo_r_9 ), 
    .DI1(\shifter/ckgen/n70_adj_1584 ), .DI0(\shifter/ckgen/n71 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6458 ), .F0(\shifter/ckgen/n71 ), 
    .Q0(\shifter/ckgen/s_cnt_lo_r_9 ), .F1(\shifter/ckgen/n70_adj_1584 ), 
    .Q1(\shifter/ckgen/s_cnt_lo_r_10 ), .FCO(\shifter/ckgen/n6459 ));
  shifter_ckgen_SLICE_57 \shifter/ckgen/SLICE_57 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_8 ), .A0(\shifter/ckgen/s_cnt_lo_r_7 ), 
    .DI1(\shifter/ckgen/n72 ), .DI0(\shifter/ckgen/n73 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6457 ), .F0(\shifter/ckgen/n73 ), 
    .Q0(\shifter/ckgen/s_cnt_lo_r_7 ), .F1(\shifter/ckgen/n72 ), 
    .Q1(\shifter/ckgen/s_cnt_lo_r_8 ), .FCO(\shifter/ckgen/n6458 ));
  shifter_ckgen_SLICE_58 \shifter/ckgen/SLICE_58 ( 
    .A1(\shifter/ckgen/s_cnt_lo_r_6 ), .A0(\shifter/ckgen/s_cnt_lo_r_5 ), 
    .DI1(\shifter/ckgen/n74 ), .DI0(\shifter/ckgen/n75 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .LSR(\shifter/ckgen/n4036 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6456 ), .F0(\shifter/ckgen/n75 ), 
    .Q0(\shifter/ckgen/s_cnt_lo_r_5 ), .F1(\shifter/ckgen/n74 ), 
    .Q1(\shifter/ckgen/s_cnt_lo_r_6 ), .FCO(\shifter/ckgen/n6457 ));
  shifter_ckgen_SLICE_59 \shifter/ckgen/SLICE_59 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_14 ), .A1(s_ckgen_rtdiv_14), 
    .B0(\shifter/ckgen/s_rtdiv_hi_13 ), .A0(s_ckgen_rtdiv_13), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_14 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_13 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6484 ), 
    .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_13 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_13 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_14 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_14 ));
  shifter_ckgen_SLICE_60 \shifter/ckgen/SLICE_60 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_12 ), .A1(s_ckgen_rtdiv_12), 
    .B0(\shifter/ckgen/s_rtdiv_hi_11 ), .A0(s_ckgen_rtdiv_11), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_12 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_11 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6483 ), 
    .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_11 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_11 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_12 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_12 ), .FCO(\shifter/ckgen/n6484 ));
  shifter_ckgen_SLICE_61 \shifter/ckgen/SLICE_61 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_10 ), .A1(s_ckgen_rtdiv_10), 
    .B0(\shifter/ckgen/s_rtdiv_hi_9 ), .A0(s_ckgen_rtdiv_9), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_10 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_9 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6482 ), .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_9 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_9 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_10 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_10 ), .FCO(\shifter/ckgen/n6483 ));
  shifter_ckgen_SLICE_62 \shifter/ckgen/SLICE_62 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_8 ), .A1(s_ckgen_rtdiv_8), 
    .B0(\shifter/ckgen/s_rtdiv_hi_7 ), .A0(s_ckgen_rtdiv_7), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_8 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_7 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6481 ), .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_7 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_7 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_8 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_8 ), .FCO(\shifter/ckgen/n6482 ));
  shifter_ckgen_SLICE_63 \shifter/ckgen/SLICE_63 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_6 ), .A1(s_ckgen_rtdiv_6), 
    .B0(\shifter/ckgen/s_rtdiv_hi_5 ), .A0(s_ckgen_rtdiv_5), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_6 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_5 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6480 ), .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_5 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_5 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_6 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_6 ), .FCO(\shifter/ckgen/n6481 ));
  SLICE_64 SLICE_64( .D1(\shifter/ckgen/s_cnt_hi_r_8 ), 
    .C1(\shifter/ckgen/s_cmp_hi_8 ), .B1(\shifter/ckgen/s_cnt_hi_r_9 ), 
    .A1(\shifter/ckgen/s_cmp_hi_9 ), .D0(\shifter/ckgen/s_cnt_hi_r_10 ), 
    .C0(\shifter/ckgen/s_cmp_hi_10 ), .B0(\shifter/ckgen/s_cnt_hi_r_11 ), 
    .A0(\shifter/ckgen/s_cmp_hi_11 ), .M1(n1544), .M0(n1545), 
    .CE(out_get_N_312), .CLK(mclk_c), .FCI(\shifter/ckgen/n6401 ), .Q0(n1544), 
    .Q1(n1543), .FCO(\shifter/ckgen/n6402 ));
  shifter_ckgen_SLICE_65 \shifter/ckgen/SLICE_65 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_4 ), .A1(s_ckgen_rtdiv_4), 
    .B0(\shifter/ckgen/s_rtdiv_hi_3 ), .A0(s_ckgen_rtdiv_3), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_4 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_3 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6479 ), .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_3 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_3 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_4 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_4 ), .FCO(\shifter/ckgen/n6480 ));
  shifter_ckgen_SLICE_66 \shifter/ckgen/SLICE_66 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_2 ), .A1(s_ckgen_rtdiv_2), 
    .B0(\shifter/ckgen/s_rtdiv_hi_1 ), .A0(s_ckgen_rtdiv_1), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_2 ), 
    .DI0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_1 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6478 ), .F0(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_1 ), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_r0_1 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_2 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_2 ), .FCO(\shifter/ckgen/n6479 ));
  shifter_ckgen_SLICE_67 \shifter/ckgen/SLICE_67 ( 
    .B1(\shifter/ckgen/s_rtdiv_hi_0 ), .A1(s_ckgen_rtdiv_0), 
    .DI1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_0 ), 
    .M0(\shifter/ckgen/s_div_hi_r0_0 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_div_hi_0 ), 
    .F1(\shifter/ckgen/s_rtdiv_lo_r0_14_N_490_0 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_r0_0 ), .FCO(\shifter/ckgen/n6478 ));
  shifter_ckgen_SLICE_68 \shifter/ckgen/SLICE_68 ( 
    .B1(\shifter/ckgen/s_div_hi_14 ), .A1(s_ckgen_div_14), 
    .B0(\shifter/ckgen/s_div_hi_13 ), .A0(s_ckgen_div_13), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_14 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_13 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6476 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_13 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_13 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_14 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_14 ));
  SLICE_69 SLICE_69( .D1(\shifter/ckgen/s_cnt_hi_r_12 ), 
    .C1(\shifter/ckgen/s_cmp_hi_12 ), .B1(\shifter/ckgen/s_cnt_hi_r_13 ), 
    .A1(\shifter/ckgen/s_cmp_hi_13 ), .B0(\shifter/ckgen/s_cnt_hi_r_14 ), 
    .A0(\shifter/ckgen/s_cmp_hi_14 ), .M1(\cram_bus/reg_wr_fifo/n1546 ), 
    .M0(n1543), .CE(out_get_N_312), .CLK(mclk_c), 
    .Q0(\cram_bus/reg_wr_fifo/n1546 ), .Q1(n1545), .FCO(\shifter/ckgen/n6401 ));
  shifter_ckgen_SLICE_70 \shifter/ckgen/SLICE_70 ( 
    .B1(\shifter/ckgen/s_div_hi_12 ), .A1(s_ckgen_div_12), 
    .B0(\shifter/ckgen/s_div_hi_11 ), .A0(s_ckgen_div_11), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_12 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_11 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6475 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_11 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_11 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_12 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_12 ), .FCO(\shifter/ckgen/n6476 ));
  shifter_ckgen_SLICE_71 \shifter/ckgen/SLICE_71 ( 
    .B1(\shifter/ckgen/s_div_hi_10 ), .A1(s_ckgen_div_10), 
    .B0(\shifter/ckgen/s_div_hi_9 ), .A0(s_ckgen_div_9), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_10 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_9 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6474 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_9 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_9 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_10 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_10 ), .FCO(\shifter/ckgen/n6475 ));
  shifter_ckgen_SLICE_72 \shifter/ckgen/SLICE_72 ( 
    .B1(\shifter/ckgen/s_div_hi_8 ), .A1(s_ckgen_div_8), 
    .B0(\shifter/ckgen/s_div_hi_7 ), .A0(s_ckgen_div_7), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_8 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_7 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6473 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_7 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_7 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_8 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_8 ), .FCO(\shifter/ckgen/n6474 ));
  shifter_ckgen_SLICE_73 \shifter/ckgen/SLICE_73 ( 
    .B1(\shifter/ckgen/s_div_hi_6 ), .A1(s_ckgen_div_6), 
    .B0(\shifter/ckgen/s_div_hi_5 ), .A0(s_ckgen_div_5), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_6 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_5 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6472 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_5 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_5 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_6 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_6 ), .FCO(\shifter/ckgen/n6473 ));
  shifter_ckgen_SLICE_74 \shifter/ckgen/SLICE_74 ( 
    .B1(\shifter/ckgen/s_div_hi_4 ), .A1(s_ckgen_div_4), 
    .B0(\shifter/ckgen/s_div_hi_3 ), .A0(s_ckgen_div_3), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_4 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_3 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6471 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_3 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_3 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_4 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_4 ), .FCO(\shifter/ckgen/n6472 ));
  shifter_ckgen_SLICE_75 \shifter/ckgen/SLICE_75 ( 
    .B1(\shifter/ckgen/s_div_hi_2 ), .A1(s_ckgen_div_2), 
    .B0(\shifter/ckgen/s_div_hi_1 ), .A0(s_ckgen_div_1), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_2 ), 
    .DI0(\shifter/ckgen/s_div_lo_r0_14_N_475_1 ), .CLK(mclk_c), 
    .FCI(\shifter/ckgen/n6470 ), .F0(\shifter/ckgen/s_div_lo_r0_14_N_475_1 ), 
    .Q0(\shifter/ckgen/s_div_lo_r0_1 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_2 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_2 ), .FCO(\shifter/ckgen/n6471 ));
  SLICE_76 SLICE_76( .M1(s_desc_data_23), .M0(s_desc_data_22), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6400 ), 
    .F0(\shifter/ckgen/s_tck_r0_N_638 ), .Q0(s_desc_hi_6), .Q1(s_desc_hi_7));
  SLICE_77 SLICE_77( .B1(\shifter/ckgen/s_div_hi_0 ), .A1(s_ckgen_div_0), 
    .DI1(\shifter/ckgen/s_div_lo_r0_14_N_475_0 ), 
    .M0(\cram_bus/reg_wr_fifo/s_syn_sel0_1 ), .CLK(mclk_c), 
    .Q0(\cram_bus/reg_wr_fifo/s_syn_sel1_1 ), 
    .F1(\shifter/ckgen/s_div_lo_r0_14_N_475_0 ), 
    .Q1(\shifter/ckgen/s_div_lo_r0_0 ), .FCO(\shifter/ckgen/n6470 ));
  SLICE_78 SLICE_78( .D1(\shifter/ckgen/s_cnt_lo_r_12 ), 
    .C1(\shifter/ckgen/s_cmp_lo_12 ), .B1(\shifter/ckgen/s_cnt_lo_r_13 ), 
    .A1(\shifter/ckgen/s_cmp_lo_13 ), .B0(\shifter/ckgen/s_cnt_lo_r_14 ), 
    .A0(\shifter/ckgen/s_cmp_lo_14 ), .M1(s_desc_data_31), .M0(s_desc_data_30), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .Q0(s_desc_hi_14), .Q1(s_desc_hi_15), 
    .FCO(\shifter/ckgen/n6397 ));
  shifter_ckgen_SLICE_79 \shifter/ckgen/SLICE_79 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_14 ), .A0(\shifter/ckgen/s_cnt_hi_r_13 ), 
    .DI1(\shifter/ckgen/n66 ), .DI0(\shifter/ckgen/n67 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6468 ), .F0(\shifter/ckgen/n67 ), 
    .Q0(\shifter/ckgen/s_cnt_hi_r_13 ), .F1(\shifter/ckgen/n66 ), 
    .Q1(\shifter/ckgen/s_cnt_hi_r_14 ));
  shifter_ckgen_SLICE_80 \shifter/ckgen/SLICE_80 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_12 ), .A0(\shifter/ckgen/s_cnt_hi_r_11 ), 
    .DI1(\shifter/ckgen/n68 ), .DI0(\shifter/ckgen/n69 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6467 ), .F0(\shifter/ckgen/n69 ), 
    .Q0(\shifter/ckgen/s_cnt_hi_r_11 ), .F1(\shifter/ckgen/n68 ), 
    .Q1(\shifter/ckgen/s_cnt_hi_r_12 ), .FCO(\shifter/ckgen/n6468 ));
  shifter_ckgen_SLICE_81 \shifter/ckgen/SLICE_81 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_10 ), .A0(\shifter/ckgen/s_cnt_hi_r_9 ), 
    .DI1(\shifter/ckgen/n70 ), .DI0(\shifter/ckgen/n71_adj_1580 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6466 ), 
    .F0(\shifter/ckgen/n71_adj_1580 ), .Q0(\shifter/ckgen/s_cnt_hi_r_9 ), 
    .F1(\shifter/ckgen/n70 ), .Q1(\shifter/ckgen/s_cnt_hi_r_10 ), 
    .FCO(\shifter/ckgen/n6467 ));
  shifter_ckgen_SLICE_82 \shifter/ckgen/SLICE_82 ( 
    .A1(\shifter/ckgen/s_cnt_hi_r_8 ), .A0(\shifter/ckgen/s_cnt_hi_r_7 ), 
    .DI1(\shifter/ckgen/n72_adj_1581 ), .DI0(\shifter/ckgen/n73_adj_1582 ), 
    .CE(\shifter/ckgen/mclk_c_enable_135 ), .LSR(\shifter/ckgen/n4077 ), 
    .CLK(mclk_c), .FCI(\shifter/ckgen/n6465 ), 
    .F0(\shifter/ckgen/n73_adj_1582 ), .Q0(\shifter/ckgen/s_cnt_hi_r_7 ), 
    .F1(\shifter/ckgen/n72_adj_1581 ), .Q1(\shifter/ckgen/s_cnt_hi_r_8 ), 
    .FCO(\shifter/ckgen/n6466 ));
  SLICE_83 SLICE_83( .D1(\shifter/ckgen/s_cnt_lo_r_0 ), 
    .C1(\shifter/ckgen/s_cmp_lo_0 ), .B1(\shifter/ckgen/s_cnt_lo_r_1 ), 
    .A1(\shifter/ckgen/s_cmp_lo_1 ), .D0(\shifter/ckgen/s_cnt_lo_r_2 ), 
    .C0(\shifter/ckgen/s_cmp_lo_2 ), .B0(\shifter/ckgen/s_cnt_lo_r_3 ), 
    .A0(\shifter/ckgen/s_cmp_lo_3 ), .M1(s_desc_data_25), .M0(s_desc_data_24), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .FCI(\shifter/ckgen/n6399 ), 
    .Q0(s_desc_hi_8), .Q1(s_desc_hi_9), .FCO(\shifter/ckgen/n6400 ));
  cram_bus_addr_r_SLICE_84 \cram_bus/addr_r/SLICE_84 ( 
    .D1(\cram_bus/addr_r/n8213 ), .C1(\cram_bus/s_cram_adv ), 
    .B1(fsmc_d_out_11), .A1(\cram_bus/addr_r/q_15__N_60 ), 
    .D0(\cram_bus/addr_r/n8208 ), .C0(\cram_bus/s_cram_adv ), 
    .B0(fsmc_d_out_12), .A0(\cram_bus/addr_r/q_15__N_58 ), 
    .DI1(\cram_bus/addr_r/q_11__N_97 ), .DI0(\cram_bus/addr_r/q_12__N_93 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_12__N_93 ), 
    .Q0(\cram_bus/addr_r/q_15__N_58 ), .F1(\cram_bus/addr_r/q_11__N_97 ), 
    .Q1(\cram_bus/addr_r/q_15__N_60 ));
  cram_bus_SLICE_85 \cram_bus/SLICE_85 ( .B0(\cram_bus/s_cram_adv ), 
    .A0(s_cram_next_st_1__N_24_c_0), .DI0(\cram_bus/n1508 ), .LSR(fsmc_nce_c), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/n1508 ), .Q0(\cram_bus/n1503 ), 
    .Q1(\cram_bus/n1505 ));
  cram_bus_reg_wr_fifo_SLICE_121 \cram_bus/reg_wr_fifo/SLICE_121 ( 
    .B1(\cram_bus/reg_wr_fifo/s_sel_in_0 ), 
    .A1(\cram_bus/reg_wr_fifo/s_sel_in_1 ), 
    .A0(\cram_bus/reg_wr_fifo/s_sel_in_0 ), .DI1(\cram_bus/reg_wr_fifo/n14 ), 
    .DI0(\cram_bus/reg_wr_fifo/n15 ), .CE(\cram_bus/s_fifo_wr_stb ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/reg_wr_fifo/n15 ), 
    .Q0(\cram_bus/reg_wr_fifo/s_sel_in_0 ), .F1(\cram_bus/reg_wr_fifo/n14 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_sel_in_1 ));
  cram_bus_SLICE_124 \cram_bus/SLICE_124 ( .C1(\cram_bus/s_cram_wr_addr_15 ), 
    .B1(s_cram_next_st_1__N_24_c_0), .A1(\cram_bus/s_cram_adi ), 
    .D0(\cram_bus/s_cram_adv ), .C0(\cram_bus/n1503 ), 
    .B0(s_cram_next_st_1__N_24_c_0), .A0(\cram_bus/s_cram_adi ), 
    .DI0(\cram_bus/n6532 ), .M1(\cram_bus/n1505 ), .LSR(fsmc_nce_c), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/n6532 ), .Q0(\cram_bus/s_cram_adi ), 
    .F1(\cram_bus/s_fifo_wr_stb ), .Q1(\cram_bus/s_cram_adv ));
  cram_bus_addr_r_SLICE_127 \cram_bus/addr_r/SLICE_127 ( .D1(q_15__N_56), 
    .C1(q_15__N_52), .B1(\cram_bus/addr_r/n8208 ), 
    .A1(\cram_bus/addr_r/q_15__N_58 ), .D0(\cram_bus/addr_r/q_15__N_51 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_15), 
    .A0(\cram_bus/s_cram_wr_addr_15 ), .DI0(\cram_bus/addr_r/q_15__N_49 ), 
    .M1(\cram_bus/addr_r/q_0__N_141 ), .CLK(fsmc_clk_c), 
    .F0(\cram_bus/addr_r/q_15__N_49 ), .Q0(\cram_bus/s_cram_wr_addr_15 ), 
    .F1(\cram_bus/addr_r/q_15__N_51 ), .Q1(q_15__N_82));
  cram_bus_SLICE_128 \cram_bus/SLICE_128 ( 
    .C1(\cram_bus/reg_wr_fifo/s_sel_in_1 ), .B1(\cram_bus/n8287 ), 
    .A1(\cram_bus/reg_wr_fifo/s_sel_in_0 ), .B0(fsmc_nce_c), 
    .A0(s_cram_next_st_1__N_24_c_0), .DI0(\cram_bus/s_op_mem_rd_N_35 ), 
    .CE(\cram_bus/s_cram_adv ), .LSR(\cram_bus/n2425 ), .CLK(fsmc_clk_c), 
    .F0(\cram_bus/s_op_mem_rd_N_35 ), .Q0(\cram_bus/s_op_mem_rd ), 
    .F1(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ));
  cram_bus_SLICE_129 \cram_bus/SLICE_129 ( .B1(fsmc_nce_c), .A1(fsmc_noe_c), 
    .B0(fsmc_nce_c), .A0(s_cram_next_st_1__N_24_c_0), 
    .DI0(\cram_bus/s_op_mem_wr_N_42 ), .CE(\cram_bus/s_cram_adv ), 
    .LSR(\cram_bus/n2425 ), .CLK(fsmc_clk_c), .F0(\cram_bus/s_op_mem_wr_N_42 ), 
    .Q0(\cram_bus/s_op_mem_wr ), .F1(n2844));
  SLICE_130 SLICE_130( .D1(n7501), .C1(n7480), .B1(q_15__N_76), 
    .A1(q_15__N_78), .D0(n2977), .C0(q_15__N_76), .B0(n9), .A0(n7462), 
    .DI1(\cram_bus/s_reg_dout_1 ), .DI0(s_reg_dout_0), .CLK(fsmc_clk_c), 
    .F0(s_reg_dout_0), .Q0(\cram_bus/s_reg_rd_data_0 ), 
    .F1(\cram_bus/s_reg_dout_1 ), .Q1(\cram_bus/s_reg_rd_data_1 ));
  cram_bus_SLICE_131 \cram_bus/SLICE_131 ( .D1(n7487), .C1(n7455), 
    .B1(q_15__N_76), .A1(q_15__N_78), .D0(n7494), .C0(n7471), .B0(q_15__N_76), 
    .A0(q_15__N_78), .DI1(\cram_bus/s_reg_dout_3 ), 
    .DI0(\cram_bus/s_reg_dout_2 ), .CLK(fsmc_clk_c), 
    .F0(\cram_bus/s_reg_dout_2 ), .Q0(\cram_bus/s_reg_rd_data_2 ), 
    .F1(\cram_bus/s_reg_dout_3 ), .Q1(\cram_bus/s_reg_rd_data_3 ));
  SLICE_132 SLICE_132( .D1(n7836), .C1(n7835), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7406), .A0(s_r3_4), 
    .DI0(s_reg_dout_4), .M0(q_15__N_76), .CLK(fsmc_clk_c), .OFX0(s_reg_dout_4), 
    .Q0(\cram_bus/s_reg_rd_data_4 ));
  SLICE_133 SLICE_133( .D1(n7787), .C1(n7786), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7313), .A0(s_r3_5), 
    .DI0(s_reg_dout_5), .M0(q_15__N_76), .CLK(fsmc_clk_c), .OFX0(s_reg_dout_5), 
    .Q0(\cram_bus/s_reg_rd_data_5 ));
  SLICE_134 SLICE_134( .D1(\cram_bus/addr_r/n8339 ), .C1(n7376), 
    .B1(q_15__N_76), .A1(q_15__N_78), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_6), 
    .A0(s_ckgen_div_6), .DI0(s_reg_dout_6), .M0(n7225), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_6), .Q0(\cram_bus/s_reg_rd_data_6 ));
  SLICE_135 SLICE_135( .D1(n7830), .C1(n7829), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7403), .A0(s_r3_7), 
    .DI0(s_reg_dout_7), .M0(q_15__N_76), .CLK(fsmc_clk_c), .OFX0(s_reg_dout_7), 
    .Q0(\cram_bus/s_reg_rd_data_7 ));
  SLICE_136 SLICE_136( .D1(n7802), .C1(n7801), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7367), .A0(s_r3_8), 
    .DI0(s_reg_dout_8), .M0(q_15__N_76), .CLK(fsmc_clk_c), .OFX0(s_reg_dout_8), 
    .Q0(\cram_bus/s_reg_rd_data_8 ));
  SLICE_137 SLICE_137( .D1(n7805), .C1(n7804), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7385), .A0(s_r3_9), 
    .DI0(s_reg_dout_9), .M0(q_15__N_76), .CLK(fsmc_clk_c), .OFX0(s_reg_dout_9), 
    .Q0(\cram_bus/s_reg_rd_data_9 ));
  SLICE_138 SLICE_138( .D1(n7824), .C1(n7823), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7397), .A0(s_r3_10), 
    .DI0(s_reg_dout_10), .M0(q_15__N_76), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_10), .Q0(\cram_bus/s_reg_rd_data_10 ));
  SLICE_139 SLICE_139( .D1(n7821), .C1(n7820), .B1(q_15__N_80), 
    .A1(q_15__N_78), .D0(n3064), .C0(q_15__N_78), .B0(n7382), .A0(s_r3_11), 
    .DI0(s_reg_dout_11), .M0(q_15__N_76), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_11), .Q0(\cram_bus/s_reg_rd_data_11 ));
  SLICE_140 SLICE_140( .D1(q_15__N_82), .C1(s_desc_hi_12), .B1(n2977), 
    .A1(s_desc_lo_12), .D0(n3064), .C0(q_15__N_78), .B0(n7370), .A0(s_r3_12), 
    .DI0(s_reg_dout_12), .M0(q_15__N_76), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_12), .Q0(\cram_bus/s_reg_rd_data_12 ));
  SLICE_141 SLICE_141( .D1(q_15__N_82), .C1(s_desc_hi_13), .B1(n2977), 
    .A1(s_desc_lo_13), .D0(n3064), .C0(q_15__N_78), .B0(n7507), .A0(s_r3_13), 
    .DI0(s_reg_dout_13), .M0(q_15__N_76), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_13), .Q0(\cram_bus/s_reg_rd_data_13 ));
  SLICE_142 SLICE_142( .D1(q_15__N_82), .C1(s_desc_hi_14), .B1(n2977), 
    .A1(s_desc_lo_14), .D0(n3064), .C0(q_15__N_78), .B0(n7510), .A0(s_r3_14), 
    .DI0(s_reg_dout_14), .M0(q_15__N_76), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_14), .Q0(\cram_bus/s_reg_rd_data_14 ));
  SLICE_143 SLICE_143( .D1(q_15__N_82), .C1(s_desc_hi_15), .B1(n2977), 
    .A1(s_desc_lo_15), .D0(n3064), .C0(q_15__N_78), .B0(n7310), .A0(s_r3_15), 
    .DI0(s_reg_dout_15), .M0(q_15__N_76), .CLK(fsmc_clk_c), 
    .OFX0(s_reg_dout_15), .Q0(\cram_bus/s_reg_rd_data_15 ));
  SLICE_145 SLICE_145( .D1(s_1khz_stb), .C1(s_tap_busy), .B1(s_irq_en_2), 
    .A1(s_irq_en_0), .D0(s_tmr_cnt_en), .C0(irq_N_8_1), .B0(n6), 
    .A0(s_irq_en_3), .DI0(irq_N_5), .M1(s_addr_0_9), .CLK(mclk_c), 
    .F0(irq_N_5), .Q0(irq_c), .F1(n6), .Q1(n2615));
  SLICE_146 SLICE_146( .D1(\led_run_drv/n6 ), .C1(\led_run_drv/s_count_0 ), 
    .B1(\led_run_drv/s_count_2 ), .A1(\led_run_drv/s_count_3 ), 
    .D0(\led_run_drv/n3628 ), .C0(led_1_c), .B0(\led_run_drv/s_trip_r1 ), 
    .A0(\led_run_drv/s_trip_r0 ), .DI0(\led_run_drv/n4024 ), 
    .M1(\cram_bus/reg_wr_fifo/s_sel_in_1 ), .CLK(mclk_c), 
    .F0(\led_run_drv/n4024 ), .Q0(led_1_c), .F1(\led_run_drv/n3628 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_syn_sel0_1 ));
  SLICE_147 SLICE_147( .D1(\led_con_drv/n6 ), .C1(\led_con_drv/s_count_0 ), 
    .B1(\led_con_drv/s_count_2 ), .A1(\led_con_drv/s_count_3 ), 
    .D0(\led_con_drv/n3627 ), .C0(led_2_c), .B0(\led_con_drv/s_trip_r1 ), 
    .A0(\led_con_drv/s_trip_r0 ), .DI0(\led_con_drv/n4026 ), 
    .M1(\cram_bus/reg_wr_fifo/s_sel_in_0 ), .CLK(mclk_c), 
    .F0(\led_con_drv/n4026 ), .Q0(led_2_c), .F1(\led_con_drv/n3627 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_syn_sel0_0 ));
  led_con_drv_SLICE_148 \led_con_drv/SLICE_148 ( .C1(\led_con_drv/n3627 ), 
    .B1(\led_con_drv/s_trip_r1 ), .A1(\led_con_drv/s_trip_r0 ), 
    .C0(\led_con_drv/s_count_0 ), .B0(led_2_c), .A0(s_1khz_stb), 
    .DI0(\led_con_drv/n3124 ), .LSR(\led_con_drv/s_cnt_ld ), .CLK(mclk_c), 
    .F0(\led_con_drv/n3124 ), .Q0(\led_con_drv/s_count_0 ), 
    .F1(\led_con_drv/s_cnt_ld ));
  led_con_drv_SLICE_149 \led_con_drv/SLICE_149 ( .C1(\led_con_drv/s_count_2 ), 
    .B1(\led_con_drv/s_count_0 ), .A1(\led_con_drv/s_count_1 ), 
    .B0(\led_con_drv/s_count_0 ), .A0(\led_con_drv/s_count_1 ), 
    .DI1(\led_con_drv/n3687 ), .DI0(\led_con_drv/n3685 ), 
    .CE(\led_con_drv/mclk_c_enable_29 ), .LSR(\led_con_drv/s_cnt_ld ), 
    .CLK(mclk_c), .F0(\led_con_drv/n3685 ), .Q0(\led_con_drv/s_count_1 ), 
    .F1(\led_con_drv/n3687 ), .Q1(\led_con_drv/s_count_2 ));
  led_con_drv_SLICE_150 \led_con_drv/SLICE_150 ( .D1(\led_con_drv/s_count_4 ), 
    .C1(\led_con_drv/s_count_3 ), .B1(\led_con_drv/n8320 ), 
    .A1(\led_con_drv/s_count_2 ), .D0(\led_con_drv/s_count_2 ), 
    .C0(\led_con_drv/s_count_3 ), .B0(\led_con_drv/s_count_0 ), 
    .A0(\led_con_drv/s_count_1 ), .DI1(\led_con_drv/n3681 ), 
    .DI0(\led_con_drv/n3683 ), .CE(\led_con_drv/mclk_c_enable_29 ), 
    .LSR(\led_con_drv/s_cnt_ld ), .CLK(mclk_c), .F0(\led_con_drv/n3683 ), 
    .Q0(\led_con_drv/s_count_3 ), .F1(\led_con_drv/n3681 ), 
    .Q1(\led_con_drv/s_count_4 ));
  SLICE_151 SLICE_151( .D1(q_15__N_82), .C1(q_15__N_52), .B1(q_15__N_56), 
    .A1(n8288), .C0(\cram_bus/s_cram_wr_addr_15 ), 
    .B0(s_cram_next_st_1__N_24_c_0), .A0(\cram_bus/s_cram_adi ), .DI0(n8288), 
    .M1(\led_con_drv/s_trip_r0 ), .CLK(mclk_c), .F0(n8288), 
    .Q0(\led_con_drv/s_trip_r0 ), .F1(s_we_hi), .Q1(\led_con_drv/s_trip_r1 ));
  led_run_drv_SLICE_152 \led_run_drv/SLICE_152 ( .C1(\led_run_drv/n3628 ), 
    .B1(\led_run_drv/s_trip_r1 ), .A1(\led_run_drv/s_trip_r0 ), 
    .C0(\led_run_drv/s_count_0 ), .B0(led_1_c), .A0(s_1khz_stb), 
    .DI0(\led_run_drv/n3132 ), .LSR(\led_run_drv/s_cnt_ld ), .CLK(mclk_c), 
    .F0(\led_run_drv/n3132 ), .Q0(\led_run_drv/s_count_0 ), 
    .F1(\led_run_drv/s_cnt_ld ));
  led_run_drv_SLICE_153 \led_run_drv/SLICE_153 ( .C1(\led_run_drv/s_count_2 ), 
    .B1(\led_run_drv/s_count_0 ), .A1(\led_run_drv/s_count_1 ), 
    .B0(\led_run_drv/s_count_0 ), .A0(\led_run_drv/s_count_1 ), 
    .DI1(\led_run_drv/n3689 ), .DI0(\led_run_drv/n3695 ), 
    .CE(\led_run_drv/mclk_c_enable_59 ), .LSR(\led_run_drv/s_cnt_ld ), 
    .CLK(mclk_c), .F0(\led_run_drv/n3695 ), .Q0(\led_run_drv/s_count_1 ), 
    .F1(\led_run_drv/n3689 ), .Q1(\led_run_drv/s_count_2 ));
  led_run_drv_SLICE_154 \led_run_drv/SLICE_154 ( .D1(\led_run_drv/s_count_4 ), 
    .C1(\led_run_drv/s_count_3 ), .B1(\led_run_drv/n8316 ), 
    .A1(\led_run_drv/s_count_2 ), .D0(\led_run_drv/s_count_2 ), 
    .C0(\led_run_drv/s_count_3 ), .B0(\led_run_drv/s_count_0 ), 
    .A0(\led_run_drv/s_count_1 ), .DI1(\led_run_drv/n3693 ), 
    .DI0(\led_run_drv/n3691 ), .CE(\led_run_drv/mclk_c_enable_59 ), 
    .LSR(\led_run_drv/s_cnt_ld ), .CLK(mclk_c), .F0(\led_run_drv/n3691 ), 
    .Q0(\led_run_drv/s_count_3 ), .F1(\led_run_drv/n3693 ), 
    .Q1(\led_run_drv/s_count_4 ));
  SLICE_155 SLICE_155( .C1(n1543), .B1(n1544), 
    .A1(\cram_bus/reg_wr_fifo/s_syn_sel1_1 ), .D0(n1543), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/n2 ), .A0(\cram_bus/reg_wr_fifo/s_syn_sel1_0 ), 
    .DI0(out_get_N_312), .M1(\led_run_drv/s_trip_r0 ), .CLK(mclk_c), 
    .F0(out_get_N_312), .Q0(\led_run_drv/s_trip_r0 ), 
    .F1(\cram_bus/reg_wr_fifo/n2 ), .Q1(\led_run_drv/s_trip_r1 ));
  SLICE_160 SLICE_160( .C1(s_desc_hi_10), .B1(q_15__N_82), .A1(s_desc_lo_10), 
    .D0(\cram_bus/s_cram_adi ), .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_0), 
    .A0(q_15__N_82), .DI0(\cram_bus/addr_r/q_0__N_141 ), 
    .M1(\cram_bus/addr_r/q_0__N_141 ), .CLK(fsmc_clk_c), 
    .F0(\cram_bus/addr_r/q_0__N_141 ), .Q0(n8852), .F1(n7823), .Q1(n8853));
  cram_bus_addr_r_SLICE_161 \cram_bus/addr_r/SLICE_161 ( 
    .B1(\cram_bus/s_cram_adi ), .A1(q_15__N_82), .D0(\cram_bus/addr_r/n8313 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_1), .A0(q_15__N_80), 
    .DI0(\cram_bus/addr_r/q_1__N_137 ), .M1(\cram_bus/addr_r/q_1__N_137 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_1__N_137 ), .Q0(n8854), 
    .F1(\cram_bus/addr_r/n8313 ), .Q1(n8855));
  cram_bus_addr_r_SLICE_163 \cram_bus/addr_r/SLICE_163 ( 
    .D1(\cram_bus/addr_r/n8204 ), .C1(\cram_bus/s_cram_adv ), 
    .B1(fsmc_d_out_13), .A1(q_15__N_56), .D0(\cram_bus/addr_r/n8200 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_14), .A0(q_15__N_52), 
    .DI1(\cram_bus/addr_r/q_13__N_89 ), .DI0(\cram_bus/addr_r/q_14__N_85 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_14__N_85 ), .Q0(q_15__N_52), 
    .F1(\cram_bus/addr_r/q_13__N_89 ), .Q1(q_15__N_56));
  cram_bus_addr_r_SLICE_164 \cram_bus/addr_r/SLICE_164 ( 
    .D1(\cram_bus/addr_r/n8223 ), .C1(\cram_bus/s_cram_adv ), 
    .B1(fsmc_d_out_9), .A1(q_15__N_64), .D0(\cram_bus/addr_r/n8218 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_10), .A0(q_15__N_62), 
    .DI1(\cram_bus/addr_r/q_9__N_105 ), .DI0(\cram_bus/addr_r/q_10__N_101 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_10__N_101 ), .Q0(q_15__N_62), 
    .F1(\cram_bus/addr_r/q_9__N_105 ), .Q1(q_15__N_64));
  cram_bus_addr_r_SLICE_165 \cram_bus/addr_r/SLICE_165 ( 
    .D1(\cram_bus/addr_r/n8236 ), .C1(\cram_bus/s_cram_adv ), 
    .B1(fsmc_d_out_7), .A1(q_15__N_68), .D0(\cram_bus/addr_r/n8231 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_8), .A0(q_15__N_66), 
    .DI1(\cram_bus/addr_r/q_7__N_113 ), .DI0(\cram_bus/addr_r/q_8__N_109 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_8__N_109 ), .Q0(q_15__N_66), 
    .F1(\cram_bus/addr_r/q_7__N_113 ), .Q1(q_15__N_68));
  cram_bus_addr_r_SLICE_166 \cram_bus/addr_r/SLICE_166 ( 
    .D1(\cram_bus/addr_r/n8251 ), .C1(\cram_bus/s_cram_adv ), 
    .B1(fsmc_d_out_5), .A1(q_15__N_72), .D0(\cram_bus/addr_r/n8244 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_6), .A0(q_15__N_70), 
    .DI1(\cram_bus/addr_r/q_5__N_121 ), .DI0(\cram_bus/addr_r/q_6__N_117 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_6__N_117 ), .Q0(q_15__N_70), 
    .F1(\cram_bus/addr_r/q_5__N_121 ), .Q1(q_15__N_72));
  cram_bus_addr_r_SLICE_167 \cram_bus/addr_r/SLICE_167 ( 
    .D1(\cram_bus/addr_r/n8270 ), .C1(\cram_bus/s_cram_adv ), 
    .B1(fsmc_d_out_3), .A1(q_15__N_76), .D0(\cram_bus/addr_r/n8259 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_4), .A0(q_15__N_74), 
    .DI1(\cram_bus/addr_r/q_3__N_129 ), .DI0(\cram_bus/addr_r/q_4__N_125 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_4__N_125 ), .Q0(q_15__N_74), 
    .F1(\cram_bus/addr_r/q_3__N_129 ), .Q1(q_15__N_76));
  cram_bus_SLICE_168 \cram_bus/SLICE_168 ( .B1(\cram_bus/s_cram_adv ), 
    .A1(fsmc_d_out_15), .D0(\cram_bus/addr_r/n8285 ), 
    .C0(\cram_bus/s_cram_adv ), .B0(fsmc_d_out_2), .A0(q_15__N_78), 
    .DI0(\cram_bus/addr_r/q_2__N_133 ), .M1(\cram_bus/addr_r/q_1__N_137 ), 
    .CLK(fsmc_clk_c), .F0(\cram_bus/addr_r/q_2__N_133 ), .Q0(q_15__N_78), 
    .F1(\cram_bus/n2425 ), .Q1(q_15__N_80));
  SLICE_170 SLICE_170( .B1(\cklgen_1khz/s_count_1 ), 
    .A1(\cklgen_1khz/s_count_4 ), .D0(s_1mhz_stb), 
    .C0(\cklgen_1khz/s_count_2 ), .B0(\cklgen_1khz/n20 ), 
    .A0(\cklgen_1khz/n15 ), .DI0(\cklgen_1khz/p_stb_N_1558 ), 
    .M1(\shifter/ckgen/s_div_lo_r0_13 ), .CLK(mclk_c), 
    .F0(\cklgen_1khz/p_stb_N_1558 ), .Q0(s_1khz_stb), .F1(\cklgen_1khz/n15 ), 
    .Q1(\shifter/ckgen/s_div_lo_13 ));
  SLICE_171 SLICE_171( .D0(\cklgen_1mhz/s_count_5 ), 
    .C0(\cklgen_1mhz/s_count_2 ), .B0(\cklgen_1mhz/n6527 ), 
    .A0(\cklgen_1mhz/s_count_1 ), .DI0(\cklgen_1mhz/s_hi ), 
    .M1(\shifter/ckgen/s_div_lo_r0_14 ), .CLK(mclk_c), .F0(\cklgen_1mhz/s_hi ), 
    .Q0(s_1mhz_stb), .Q1(\shifter/ckgen/s_div_lo_14 ));
  SLICE_178 SLICE_178( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_0 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_0 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_0 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_0 ), .DI0(s_reg_din_0), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_0), .Q0(s_cfg_0));
  SLICE_179 SLICE_179( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_1 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_1 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_1 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_1 ), .DI0(s_reg_din_1), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_1), .Q0(s_cfg_1));
  SLICE_180 SLICE_180( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_2 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_2 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_2 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_2 ), .DI0(s_reg_din_2), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_2), .Q0(s_cfg_2));
  SLICE_181 SLICE_181( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_3 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_3 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_3 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_3 ), .DI0(s_reg_din_3), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_3), .Q0(s_cfg_3));
  SLICE_182 SLICE_182( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_4 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_4 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_4 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_4 ), .DI0(s_reg_din_4), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_4), .Q0(s_cfg_4));
  SLICE_183 SLICE_183( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_5 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_5 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_5 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_5 ), .DI0(s_reg_din_5), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_5), .Q0(s_cfg_5));
  SLICE_184 SLICE_184( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_6 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_6 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_6 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_6 ), .DI0(s_reg_din_6), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .LSR(n4048), .CLK(mclk_c), 
    .OFX0(s_reg_din_6), .Q0(s_cfg_6));
  SLICE_185 SLICE_185( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_7 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_7 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_7 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_7 ), .DI0(s_reg_din_7), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_7), .Q0(s_cfg_7));
  SLICE_186 SLICE_186( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_8 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_8 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_8 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_8 ), .DI0(s_reg_din_8), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_8), .Q0(s_cfg_8));
  SLICE_187 SLICE_187( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_9 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_9 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_9 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_9 ), .DI0(s_reg_din_9), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_9), .Q0(s_cfg_9));
  SLICE_188 SLICE_188( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_10 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_10 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_10 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_10 ), .DI0(s_reg_din_10), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_10), .Q0(s_cfg_10));
  SLICE_189 SLICE_189( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_11 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_11 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_11 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_11 ), .DI0(s_reg_din_11), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_11), .Q0(s_cfg_11));
  SLICE_190 SLICE_190( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_12 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_12 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_12 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_12 ), .DI0(s_reg_din_12), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_12), .Q0(s_cfg_12));
  SLICE_191 SLICE_191( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_13 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_13 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_13 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_13 ), .DI0(s_reg_din_13), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_13), .Q0(s_cfg_13));
  SLICE_192 SLICE_192( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_14 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_14 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_14 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_14 ), .DI0(s_reg_din_14), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_14), .Q0(s_cfg_14));
  SLICE_193 SLICE_193( .C1(n1543), .B1(\cram_bus/reg_wr_fifo/s_data3_15 ), 
    .A1(\cram_bus/reg_wr_fifo/s_data2_15 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_data1_15 ), 
    .A0(\cram_bus/reg_wr_fifo/s_data0_15 ), .DI0(s_reg_din_15), 
    .M0(\cram_bus/reg_wr_fifo/n7307 ), .CE(s_cfg_wr_stb), .CLK(mclk_c), 
    .OFX0(s_reg_din_15), .Q0(s_cfg_15));
  SLICE_229 SLICE_229( .C1(\shifter/exec_ctrl/n8849 ), 
    .B1(\shifter/exec_ctrl/n8331 ), .A1(\shifter/exec_ctrl/n8330 ), 
    .A0(s_tap_busy), .DI0(n8317), .M1(s_irq_1), .CLK(mclk_c), .F0(n8317), 
    .Q0(s_irq_st_0), .F1(\shifter/exec_ctrl/n3068 ), .Q1(s_irq_st_1));
  SLICE_231 SLICE_231( .A0(s_tmr_cnt_en), .DI0(s_tmr_cnt_en_N_1), 
    .M1(s_1khz_stb), .CLK(mclk_c), .F0(s_tmr_cnt_en_N_1), .Q0(s_irq_st_3), 
    .Q1(s_irq_st_2));
  shifter_rx_SLICE_258 \shifter/rx/SLICE_258 ( .D0(\shifter/n8282 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/bit_pos_3 ), 
    .A0(\shifter/rx/bit_pos_2 ), .DI0(\shifter/rx/mem_dout_15__N_799 ), 
    .CE(\shifter/rx/mclk_c_enable_92 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_799 ), .Q0(s_rx_mem_din_0));
  shifter_rx_SLICE_259 \shifter/rx/SLICE_259 ( .D1(\shifter/rx/n8302 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/n8306 ), 
    .A1(\shifter/mclk_c_enable_204 ), .D0(\shifter/rx/n8302 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8306 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_795 ), 
    .CE(\shifter/rx/mclk_c_enable_244 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_795 ), .Q0(s_rx_mem_din_1), 
    .F1(\shifter/rx/mclk_c_enable_244 ));
  shifter_rx_SLICE_260 \shifter/rx/SLICE_260 ( .D1(\shifter/rx/n8301 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/n8306 ), 
    .A1(\shifter/mclk_c_enable_204 ), .D0(\shifter/rx/n8301 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8306 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_791 ), 
    .CE(\shifter/rx/mclk_c_enable_245 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_791 ), .Q0(s_rx_mem_din_2), 
    .F1(\shifter/rx/mclk_c_enable_245 ));
  shifter_rx_SLICE_261 \shifter/rx/SLICE_261 ( .D0(\shifter/rx/n8300 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8306 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_787 ), 
    .CE(\shifter/rx/mclk_c_enable_246 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_787 ), .Q0(s_rx_mem_din_3));
  shifter_rx_SLICE_262 \shifter/rx/SLICE_262 ( .D0(\shifter/n8282 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/bit_pos_3 ), 
    .A0(\shifter/rx/bit_pos_2 ), .DI0(\shifter/rx/mem_dout_15__N_783 ), 
    .CE(\shifter/rx/mclk_c_enable_247 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_783 ), .Q0(s_rx_mem_din_4));
  shifter_rx_SLICE_263 \shifter/rx/SLICE_263 ( .D1(\shifter/rx/n8299 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/n8302 ), 
    .A1(\shifter/mclk_c_enable_204 ), .D0(\shifter/rx/n8299 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8302 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_779 ), 
    .CE(\shifter/rx/mclk_c_enable_248 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_779 ), .Q0(s_rx_mem_din_5), 
    .F1(\shifter/rx/mclk_c_enable_248 ));
  shifter_rx_SLICE_264 \shifter/rx/SLICE_264 ( .D1(\shifter/rx/n8299 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/n8301 ), 
    .A1(\shifter/mclk_c_enable_204 ), .D0(\shifter/rx/n8299 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8301 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_775 ), 
    .CE(\shifter/rx/mclk_c_enable_249 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_775 ), .Q0(s_rx_mem_din_6), 
    .F1(\shifter/rx/mclk_c_enable_249 ));
  shifter_rx_SLICE_265 \shifter/rx/SLICE_265 ( .D0(\shifter/rx/n8299 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8300 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_771 ), 
    .CE(\shifter/rx/mclk_c_enable_250 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_771 ), .Q0(s_rx_mem_din_7));
  shifter_rx_SLICE_266 \shifter/rx/SLICE_266 ( .D0(\shifter/n8282 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/bit_pos_3 ), 
    .A0(\shifter/rx/bit_pos_2 ), .DI0(\shifter/rx/mem_dout_15__N_767 ), 
    .CE(\shifter/rx/mclk_c_enable_251 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_767 ), .Q0(s_rx_mem_din_8));
  shifter_rx_SLICE_267 \shifter/rx/SLICE_267 ( .D1(\shifter/rx/n8297 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/n8302 ), 
    .A1(\shifter/mclk_c_enable_204 ), .D0(\shifter/rx/n8297 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8302 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_763 ), 
    .CE(\shifter/rx/mclk_c_enable_252 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_763 ), .Q0(s_rx_mem_din_9), 
    .F1(\shifter/rx/mclk_c_enable_252 ));
  shifter_rx_SLICE_268 \shifter/rx/SLICE_268 ( .D1(\shifter/rx/n8297 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/n8301 ), 
    .A1(\shifter/mclk_c_enable_204 ), .D0(\shifter/rx/n8297 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8301 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_759 ), 
    .CE(\shifter/rx/mclk_c_enable_253 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_759 ), .Q0(s_rx_mem_din_10), 
    .F1(\shifter/rx/mclk_c_enable_253 ));
  shifter_rx_SLICE_269 \shifter/rx/SLICE_269 ( .D0(\shifter/rx/n8297 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8300 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_755 ), 
    .CE(\shifter/rx/mclk_c_enable_254 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_755 ), .Q0(s_rx_mem_din_11));
  shifter_SLICE_270 \shifter/SLICE_270 ( .D1(\shifter/bit_pos_1 ), 
    .C1(\shifter/bit_pos_0 ), .B1(\shifter/tckn_stb ), 
    .A1(\shifter/shift_ctrl/s_rx_en_r1 ), .D0(\shifter/n8282 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/bit_pos_3 ), 
    .A0(\shifter/rx/bit_pos_2 ), .DI0(\shifter/rx/mem_dout_15__N_751 ), 
    .CE(\shifter/rx/mclk_c_enable_255 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_751 ), .Q0(s_rx_mem_din_12), 
    .F1(\shifter/n8282 ));
  shifter_rx_SLICE_271 \shifter/rx/SLICE_271 ( .D0(\shifter/rx/n8296 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8302 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_747 ), 
    .CE(\shifter/rx/mclk_c_enable_256 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_747 ), .Q0(s_rx_mem_din_13));
  shifter_rx_SLICE_272 \shifter/rx/SLICE_272 ( .B1(\shifter/rx/bit_pos_3 ), 
    .A1(\shifter/rx/bit_pos_2 ), .D0(\shifter/rx/n8296 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8301 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_743 ), 
    .CE(\shifter/rx/mclk_c_enable_257 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_743 ), .Q0(s_rx_mem_din_14), 
    .F1(\shifter/rx/n8296 ));
  shifter_SLICE_273 \shifter/SLICE_273 ( .B1(\shifter/tckn_stb ), 
    .A1(\shifter/shift_ctrl/s_rx_en_r1 ), .D0(\shifter/rx/n8296 ), 
    .C0(\shifter/s_mtdo ), .B0(\shifter/rx/n8300 ), 
    .A0(\shifter/mclk_c_enable_204 ), .DI0(\shifter/rx/mem_dout_15__N_739 ), 
    .CE(\shifter/rx/mclk_c_enable_258 ), .CLK(mclk_c), 
    .F0(\shifter/rx/mem_dout_15__N_739 ), .Q0(s_rx_mem_din_15), 
    .F1(\shifter/mclk_c_enable_204 ));
  shifter_rx_SLICE_274 \shifter/rx/SLICE_274 ( .D1(\shifter/rx/s_count_r_6 ), 
    .C1(\shifter/rx/s_count_r_7 ), .B1(\shifter/rx/s_count_r_5 ), 
    .A1(\shifter/rx/n8245 ), .D0(\shifter/rx/s_count_r_9 ), 
    .C0(\shifter/rx/n8257 ), .B0(\shifter/rx/s_count_r_8 ), 
    .A0(\shifter/rx/n8225 ), .DI0(\shifter/rx/mem_wr_N_1153 ), 
    .LSR(\shifter/rx/busy ), .CLK(mclk_c), .F0(\shifter/rx/mem_wr_N_1153 ), 
    .Q0(s_rx_mem_wr_stb), .F1(\shifter/rx/n8225 ));
  shifter_exec_ctrl_SLICE_275 \shifter/exec_ctrl/SLICE_275 ( 
    .D1(\shifter/exec_ctrl/s_runtest_state_0 ), .C1(s_goto_state_0), 
    .B1(\shifter/exec_ctrl/s_pos_goto_en ), 
    .A1(\shifter/exec_ctrl/insn_goto_N_1512 ), .D0(n8279), 
    .C0(\shifter/exec_ctrl/s_reset_state_0 ), .B0(\shifter/exec_ctrl/n508 ), 
    .A0(n8264), .DI1(\shifter/exec_ctrl/s_tap_state_next_0 ), 
    .M1(\shifter/exec_ctrl/n7241 ), .M0(\shifter/exec_ctrl/n7245 ), 
    .FXB(\shifter/exec_ctrl/s_tap_state_next_3_N_1438_0 ), 
    .FXA(\shifter/exec_ctrl/n518 ), .CE(\shifter/tckn_stb ), .CLK(mclk_c), 
    .OFX0(\shifter/exec_ctrl/s_tap_state_next_3_N_1438_0 ), .Q1(s_status_0), 
    .OFX1(\shifter/exec_ctrl/s_tap_state_next_0 ));
  shifter_exec_ctrl_SLICE_276 \shifter/exec_ctrl/SLICE_276 ( 
    .D1(\shifter/exec_ctrl/s_tap_state_next_3_N_1461_1 ), .C1(s_goto_state_1), 
    .B1(\shifter/exec_ctrl/s_pos_goto_en ), 
    .A1(\shifter/exec_ctrl/insn_goto_N_1512 ), .D0(n8279), 
    .C0(\shifter/exec_ctrl/s_drscan_state_1 ), .B0(\shifter/exec_ctrl/n517 ), 
    .A0(\shifter/exec_ctrl/n8268 ), 
    .DI0(\shifter/exec_ctrl/s_tap_state_next_1 ), 
    .M0(\shifter/exec_ctrl/n7256 ), .CE(\shifter/tckn_stb ), .CLK(mclk_c), 
    .OFX0(\shifter/exec_ctrl/s_tap_state_next_1 ), .Q0(s_status_1));
  shifter_exec_ctrl_SLICE_277 \shifter/exec_ctrl/SLICE_277 ( 
    .D1(\shifter/exec_ctrl/s_insn_r0_15 ), 
    .C1(\shifter/exec_ctrl/s_insn_r0_13 ), 
    .B1(\shifter/exec_ctrl/s_insn_r0_14 ), .A1(\shifter/exec_ctrl/n182 ), 
    .D0(\shifter/exec_ctrl/n7739 ), .C0(s_goto_state_2), 
    .B0(\shifter/exec_ctrl/s_pos_goto_en ), 
    .A0(\shifter/exec_ctrl/insn_goto_N_1512 ), 
    .DI0(\shifter/exec_ctrl/s_tap_state_next_2 ), .CE(\shifter/tckn_stb ), 
    .CLK(mclk_c), .F0(\shifter/exec_ctrl/s_tap_state_next_2 ), .Q0(s_status_2), 
    .F1(\shifter/exec_ctrl/insn_goto_N_1512 ));
  shifter_exec_ctrl_SLICE_278 \shifter/exec_ctrl/SLICE_278 ( 
    .D1(s_end_state_3), .C1(\shifter/exec_ctrl/n4016 ), 
    .B1(\shifter/exec_ctrl/n2979 ), .A1(\shifter/exec_ctrl/n126 ), 
    .D0(s_status_3), .C0(\shifter/exec_ctrl/n8038 ), 
    .B0(\shifter/exec_ctrl/n5106 ), .A0(\shifter/exec_ctrl/s_drscan_state_3 ), 
    .DI0(\shifter/exec_ctrl/s_tap_state_next_3 ), 
    .M0(\shifter/exec_ctrl/n8263 ), .CE(\shifter/tckn_stb ), .CLK(mclk_c), 
    .OFX0(\shifter/exec_ctrl/s_tap_state_next_3 ), .Q0(s_status_3));
  shifter_SLICE_279 \shifter/SLICE_279 ( .D1(\shifter/exec_ctrl/n2159 ), 
    .C1(\shifter/exec_ctrl/n3068 ), .B1(\shifter/exec_ctrl/n182 ), 
    .A1(s_tap_busy), .C0(\shifter/exec_ctrl/n7105 ), 
    .B0(\shifter/exec_ctrl/busy_N_1509 ), .A0(\shifter/exec_ctrl/n8224 ), 
    .DI0(\shifter/exec_ctrl/n4029 ), .M1(\shifter/ckgen/s_div_hi_r0_1 ), 
    .CLK(mclk_c), .F0(\shifter/exec_ctrl/n4029 ), .Q0(s_tap_busy), 
    .F1(\shifter/exec_ctrl/n7105 ), .Q1(\shifter/ckgen/s_div_hi_1 ));
  shifter_SLICE_280 \shifter/SLICE_280 ( .C0(\shifter/tx/s_pos_3 ), 
    .B0(\shifter/tx/n7436 ), .A0(\shifter/tx/n7435 ), .DI0(\shifter/s_so ), 
    .CE(mclk_c_enable_115), .LSR(\shifter/n7090 ), .CLK(mclk_c), 
    .F0(\shifter/s_so ), .Q0(s_tap_tdi));
  tmr_r_SLICE_281 \tmr_r/SLICE_281 ( .D1(n8295), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_1), .A1(s_tmr_1), .D0(n8327), .C0(s_tmr_cnt_en_N_2), 
    .B0(s_reg_din_0), .A0(s_tmr_0), .DI1(\tmr_r/q_1__N_137 ), 
    .DI0(\tmr_r/q_0__N_141 ), .CLK(mclk_c), .F0(\tmr_r/q_0__N_141 ), 
    .Q0(s_tmr_0), .F1(\tmr_r/q_1__N_137 ), .Q1(s_tmr_1));
  tmr_r_SLICE_282 \tmr_r/SLICE_282 ( .D1(\tmr_r/n8267 ), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_3), .A1(s_tmr_3), .D0(n8276), .C0(s_tmr_cnt_en_N_2), 
    .B0(s_reg_din_2), .A0(s_tmr_2), .DI1(\tmr_r/q_3__N_129 ), 
    .DI0(\tmr_r/q_2__N_133 ), .CLK(mclk_c), .F0(\tmr_r/q_2__N_133 ), 
    .Q0(s_tmr_2), .F1(\tmr_r/q_3__N_129 ), .Q1(s_tmr_3));
  tmr_r_SLICE_283 \tmr_r/SLICE_283 ( .D1(\tmr_r/n8247 ), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_5), .A1(s_tmr_5), .D0(\tmr_r/n8256 ), .C0(s_tmr_cnt_en_N_2), 
    .B0(s_reg_din_4), .A0(s_tmr_4), .DI1(\tmr_r/q_5__N_121 ), 
    .DI0(\tmr_r/q_4__N_125 ), .CLK(mclk_c), .F0(\tmr_r/q_4__N_125 ), 
    .Q0(s_tmr_4), .F1(\tmr_r/q_5__N_121 ), .Q1(s_tmr_5));
  tmr_r_SLICE_284 \tmr_r/SLICE_284 ( .D1(\tmr_r/n8233 ), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_7), .A1(s_tmr_7), .D0(\tmr_r/n8238 ), .C0(s_tmr_cnt_en_N_2), 
    .B0(s_reg_din_6), .A0(s_tmr_6), .DI1(\tmr_r/q_7__N_113 ), 
    .DI0(\tmr_r/q_6__N_117 ), .CLK(mclk_c), .F0(\tmr_r/q_6__N_117 ), 
    .Q0(s_tmr_6), .F1(\tmr_r/q_7__N_113 ), .Q1(s_tmr_7));
  tmr_r_SLICE_285 \tmr_r/SLICE_285 ( .D1(\tmr_r/n8220 ), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_9), .A1(s_tmr_9), .D0(\tmr_r/n8227 ), .C0(s_tmr_cnt_en_N_2), 
    .B0(s_reg_din_8), .A0(s_tmr_8), .DI1(\tmr_r/q_9__N_105 ), 
    .DI0(\tmr_r/q_8__N_109 ), .CLK(mclk_c), .F0(\tmr_r/q_8__N_109 ), 
    .Q0(s_tmr_8), .F1(\tmr_r/q_9__N_105 ), .Q1(s_tmr_9));
  tmr_r_SLICE_286 \tmr_r/SLICE_286 ( .D1(\tmr_r/n8210 ), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_11), .A1(s_tmr_11), .D0(\tmr_r/n8216 ), 
    .C0(s_tmr_cnt_en_N_2), .B0(s_reg_din_10), .A0(s_tmr_10), 
    .DI1(\tmr_r/q_11__N_97 ), .DI0(\tmr_r/q_10__N_101 ), .CLK(mclk_c), 
    .F0(\tmr_r/q_10__N_101 ), .Q0(s_tmr_10), .F1(\tmr_r/q_11__N_97 ), 
    .Q1(s_tmr_11));
  tmr_r_SLICE_287 \tmr_r/SLICE_287 ( .D1(\tmr_r/n8201 ), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_13), .A1(s_tmr_13), .D0(\tmr_r/n8206 ), 
    .C0(s_tmr_cnt_en_N_2), .B0(s_reg_din_12), .A0(s_tmr_12), 
    .DI1(\tmr_r/q_13__N_89 ), .DI0(\tmr_r/q_12__N_93 ), .CLK(mclk_c), 
    .F0(\tmr_r/q_12__N_93 ), .Q0(s_tmr_12), .F1(\tmr_r/q_13__N_89 ), 
    .Q1(s_tmr_13));
  tmr_r_SLICE_288 \tmr_r/SLICE_288 ( .D1(q_15__N_51), .C1(s_tmr_cnt_en_N_2), 
    .B1(s_reg_din_15), .A1(s_tmr_15), .D0(\tmr_r/n8197 ), 
    .C0(s_tmr_cnt_en_N_2), .B0(s_reg_din_14), .A0(s_tmr_14), 
    .DI1(\tmr_r/q_15__N_49 ), .DI0(\tmr_r/q_14__N_85 ), .CLK(mclk_c), 
    .F0(\tmr_r/q_14__N_85 ), .Q0(s_tmr_14), .F1(\tmr_r/q_15__N_49 ), 
    .Q1(s_tmr_15));
  SLICE_289 SLICE_289( .D1(s_tmr_13), .C1(s_tmr_14), .B1(\tmr_r/n8206 ), 
    .A1(s_tmr_12), .D0(q_15__N_51), .C0(s_tmr_cnt_en), .B0(s_tmr_cnt_en_N_2), 
    .A0(s_tmr_15), .DI0(n4020), .M1(\cram_bus/reg_wr_fifo/s_syn_sel0_0 ), 
    .CLK(mclk_c), .F0(n4020), .Q0(s_tmr_cnt_en), .F1(q_15__N_51), 
    .Q1(\cram_bus/reg_wr_fifo/s_syn_sel1_0 ));
  shifter_rx_SLICE_290 \shifter/rx/SLICE_290 ( 
    .D1(\shifter/rx/op_pos_3_N_837_0 ), .C1(\shifter/rx/busy ), 
    .B1(s_desc_data_31), .A1(s_pos_0_3_N_670_0), .C0(\shifter/bit_pos_0 ), 
    .B0(\shifter/tckn_stb ), .A0(\shifter/shift_ctrl/s_rx_en_r1 ), 
    .DI0(\shifter/rx/bit_pos_0__N_815 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/bit_pos_0__N_815 ), 
    .Q0(\shifter/bit_pos_0 ));
  shifter_rx_SLICE_291 \shifter/rx/SLICE_291 ( 
    .D1(\shifter/rx/op_pos_3_N_837_1 ), .C1(\shifter/rx/busy ), 
    .B1(s_desc_data_31), .A1(s_pos_0_3_N_670_1), .D0(\shifter/bit_pos_1 ), 
    .C0(\shifter/bit_pos_0 ), .B0(\shifter/mclk_c_enable_204 ), 
    .A0(\shifter/op_msbf ), .DI0(\shifter/rx/bit_pos_1__N_813 ), 
    .M0(\shifter/rx/fifo_get ), .CLK(mclk_c), 
    .OFX0(\shifter/rx/bit_pos_1__N_813 ), .Q0(\shifter/bit_pos_1 ));
  shifter_ckgen_SLICE_292 \shifter/ckgen/SLICE_292 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_1 ), 
    .A1(\shifter/ckgen/s_div_hi_1 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_0 ), .A0(\shifter/ckgen/s_div_hi_0 ), 
    .DI1(\shifter/ckgen/n208 ), .DI0(\shifter/ckgen/n209 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n209 ), .Q0(\shifter/ckgen/s_cmp_hi_0 ), 
    .F1(\shifter/ckgen/n208 ), .Q1(\shifter/ckgen/s_cmp_hi_1 ));
  shifter_ckgen_SLICE_293 \shifter/ckgen/SLICE_293 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_3 ), 
    .A1(\shifter/ckgen/s_div_hi_3 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_2 ), .A0(\shifter/ckgen/s_div_hi_2 ), 
    .DI1(\shifter/ckgen/n206 ), .DI0(\shifter/ckgen/n207 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n207 ), .Q0(\shifter/ckgen/s_cmp_hi_2 ), 
    .F1(\shifter/ckgen/n206 ), .Q1(\shifter/ckgen/s_cmp_hi_3 ));
  shifter_ckgen_SLICE_294 \shifter/ckgen/SLICE_294 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_5 ), 
    .A1(\shifter/ckgen/s_div_hi_5 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_4 ), .A0(\shifter/ckgen/s_div_hi_4 ), 
    .DI1(\shifter/ckgen/n204 ), .DI0(\shifter/ckgen/n205 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n205 ), .Q0(\shifter/ckgen/s_cmp_hi_4 ), 
    .F1(\shifter/ckgen/n204 ), .Q1(\shifter/ckgen/s_cmp_hi_5 ));
  shifter_ckgen_SLICE_295 \shifter/ckgen/SLICE_295 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_7 ), 
    .A1(\shifter/ckgen/s_div_hi_7 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_6 ), .A0(\shifter/ckgen/s_div_hi_6 ), 
    .DI1(\shifter/ckgen/n202 ), .DI0(\shifter/ckgen/n203 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n203 ), .Q0(\shifter/ckgen/s_cmp_hi_6 ), 
    .F1(\shifter/ckgen/n202 ), .Q1(\shifter/ckgen/s_cmp_hi_7 ));
  shifter_ckgen_SLICE_296 \shifter/ckgen/SLICE_296 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_9 ), 
    .A1(\shifter/ckgen/s_div_hi_9 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_8 ), .A0(\shifter/ckgen/s_div_hi_8 ), 
    .DI1(\shifter/ckgen/n200 ), .DI0(\shifter/ckgen/n201 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n201 ), .Q0(\shifter/ckgen/s_cmp_hi_8 ), 
    .F1(\shifter/ckgen/n200 ), .Q1(\shifter/ckgen/s_cmp_hi_9 ));
  shifter_ckgen_SLICE_297 \shifter/ckgen/SLICE_297 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_11 ), 
    .A1(\shifter/ckgen/s_div_hi_11 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_10 ), .A0(\shifter/ckgen/s_div_hi_10 ), 
    .DI1(\shifter/ckgen/n198 ), .DI0(\shifter/ckgen/n199 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n199 ), .Q0(\shifter/ckgen/s_cmp_hi_10 ), 
    .F1(\shifter/ckgen/n198 ), .Q1(\shifter/ckgen/s_cmp_hi_11 ));
  shifter_ckgen_SLICE_298 \shifter/ckgen/SLICE_298 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_rtdiv_hi_13 ), 
    .A1(\shifter/ckgen/s_div_hi_13 ), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_12 ), .A0(\shifter/ckgen/s_div_hi_12 ), 
    .DI1(\shifter/ckgen/n196 ), .DI0(\shifter/ckgen/n197 ), 
    .CE(\shifter/ckgen/mclk_c_enable_261 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/n197 ), .Q0(\shifter/ckgen/s_cmp_hi_12 ), 
    .F1(\shifter/ckgen/n196 ), .Q1(\shifter/ckgen/s_cmp_hi_13 ));
  shifter_ckgen_SLICE_299 \shifter/ckgen/SLICE_299 ( .B1(s_irq_en_1), 
    .A1(s_irq_1), .C0(\shifter/ckgen/s_rtcken_reg ), 
    .B0(\shifter/ckgen/s_rtdiv_hi_14 ), .A0(\shifter/ckgen/s_div_hi_14 ), 
    .DI0(\shifter/ckgen/n195 ), .CE(\shifter/ckgen/mclk_c_enable_261 ), 
    .CLK(mclk_c), .F0(\shifter/ckgen/n195 ), .Q0(\shifter/ckgen/s_cmp_hi_14 ), 
    .F1(irq_N_8_1));
  shifter_ckgen_SLICE_300 \shifter/ckgen/SLICE_300 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_1 ), .A1(\shifter/ckgen/s_rtdiv_lo_1 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_0 ), .A0(\shifter/ckgen/s_rtdiv_lo_0 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_1 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_0 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_0 ), .Q0(\shifter/ckgen/s_cmp_lo_0 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_1 ), .Q1(\shifter/ckgen/s_cmp_lo_1 ));
  shifter_ckgen_SLICE_301 \shifter/ckgen/SLICE_301 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_3 ), .A1(\shifter/ckgen/s_rtdiv_lo_3 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_2 ), .A0(\shifter/ckgen/s_rtdiv_lo_2 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_3 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_2 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_2 ), .Q0(\shifter/ckgen/s_cmp_lo_2 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_3 ), .Q1(\shifter/ckgen/s_cmp_lo_3 ));
  shifter_ckgen_SLICE_302 \shifter/ckgen/SLICE_302 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_5 ), .A1(\shifter/ckgen/s_rtdiv_lo_5 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_4 ), .A0(\shifter/ckgen/s_rtdiv_lo_4 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_5 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_4 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_4 ), .Q0(\shifter/ckgen/s_cmp_lo_4 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_5 ), .Q1(\shifter/ckgen/s_cmp_lo_5 ));
  shifter_ckgen_SLICE_303 \shifter/ckgen/SLICE_303 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_7 ), .A1(\shifter/ckgen/s_rtdiv_lo_7 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_6 ), .A0(\shifter/ckgen/s_rtdiv_lo_6 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_7 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_6 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_6 ), .Q0(\shifter/ckgen/s_cmp_lo_6 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_7 ), .Q1(\shifter/ckgen/s_cmp_lo_7 ));
  shifter_ckgen_SLICE_304 \shifter/ckgen/SLICE_304 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_9 ), .A1(\shifter/ckgen/s_rtdiv_lo_9 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_8 ), .A0(\shifter/ckgen/s_rtdiv_lo_8 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_9 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_8 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_8 ), .Q0(\shifter/ckgen/s_cmp_lo_8 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_9 ), .Q1(\shifter/ckgen/s_cmp_lo_9 ));
  shifter_ckgen_SLICE_305 \shifter/ckgen/SLICE_305 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_11 ), .A1(\shifter/ckgen/s_rtdiv_lo_11 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_10 ), .A0(\shifter/ckgen/s_rtdiv_lo_10 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_11 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_10 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_10 ), 
    .Q0(\shifter/ckgen/s_cmp_lo_10 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_11 ), 
    .Q1(\shifter/ckgen/s_cmp_lo_11 ));
  shifter_ckgen_SLICE_306 \shifter/ckgen/SLICE_306 ( 
    .D1(\shifter/ckgen/s_rtcken_reg ), .C1(\shifter/ckgen/n1830 ), 
    .B1(\shifter/ckgen/s_div_lo_13 ), .A1(\shifter/ckgen/s_rtdiv_lo_13 ), 
    .D0(\shifter/ckgen/s_rtcken_reg ), .C0(\shifter/ckgen/n1830 ), 
    .B0(\shifter/ckgen/s_div_lo_12 ), .A0(\shifter/ckgen/s_rtdiv_lo_12 ), 
    .DI1(\shifter/ckgen/s_cmp_lo_14_N_550_13 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_12 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_12 ), 
    .Q0(\shifter/ckgen/s_cmp_lo_12 ), 
    .F1(\shifter/ckgen/s_cmp_lo_14_N_550_13 ), 
    .Q1(\shifter/ckgen/s_cmp_lo_13 ));
  shifter_ckgen_SLICE_307 \shifter/ckgen/SLICE_307 ( 
    .C1(\shifter/ckgen/s_rtcken_reg ), .B1(\shifter/ckgen/s_tck_r0 ), 
    .A1(\shifter/ckgen/s_enabled ), .D0(\shifter/ckgen/s_rtcken_reg ), 
    .C0(\shifter/ckgen/n1830 ), .B0(\shifter/ckgen/s_div_lo_14 ), 
    .A0(\shifter/ckgen/s_rtdiv_lo_14 ), 
    .DI0(\shifter/ckgen/s_cmp_lo_14_N_550_14 ), 
    .CE(\shifter/ckgen/mclk_c_enable_159 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_cmp_lo_14_N_550_14 ), 
    .Q0(\shifter/ckgen/s_cmp_lo_14 ), .F1(\shifter/ckgen/n1830 ));
  shifter_ckgen_SLICE_335 \shifter/ckgen/SLICE_335 ( .B1(s_irq_1), 
    .A1(\shifter/ckgen/s_rtcken_reg ), .B0(s_irq_1), 
    .A0(\shifter/ckgen/s_rtcken_reg ), .DI0(\shifter/ckgen/n6337 ), 
    .LSR(\shifter/ckgen/s_rtck_r1 ), .CLK(mclk_c), .F0(\shifter/ckgen/n6337 ), 
    .Q0(\shifter/ckgen/s_rtck_r2 ), .F1(\shifter/ckgen/n8307 ));
  shifter_ckgen_SLICE_336 \shifter/ckgen/SLICE_336 ( .M1(tp_rtck_c), 
    .M0(s_cfg_5), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtcken_r0 ), 
    .Q1(\shifter/ckgen/s_rtck_r0 ));
  shifter_ckgen_SLICE_338 \shifter/ckgen/SLICE_338 ( 
    .M1(\shifter/ckgen/s_rtcken_r0 ), .M0(\shifter/ckgen/s_rtdiv_hi_r0_0 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_0 ), 
    .Q1(\shifter/ckgen/s_rtcken_r1 ));
  shifter_ckgen_SLICE_343 \shifter/ckgen/SLICE_343 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_1 ), 
    .M0(\shifter/ckgen/s_rtdiv_hi_r0_10 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_hi_10 ), .Q1(\shifter/ckgen/s_rtdiv_hi_1 ));
  shifter_ckgen_SLICE_344 \shifter/ckgen/SLICE_344 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_11 ), 
    .M0(\shifter/ckgen/s_rtdiv_hi_r0_12 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_hi_12 ), .Q1(\shifter/ckgen/s_rtdiv_hi_11 ));
  shifter_ckgen_SLICE_354 \shifter/ckgen/SLICE_354 ( .M1(s_ckgen_rtdiv_9), 
    .M0(\shifter/ckgen/s_rtdiv_lo_r0_0 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_0 ), .Q1(\shifter/ckgen/s_rtdiv_hi_r0_8 ));
  shifter_ckgen_SLICE_359 \shifter/ckgen/SLICE_359 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_1 ), 
    .M0(\shifter/ckgen/s_rtdiv_lo_r0_10 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_10 ), .Q1(\shifter/ckgen/s_rtdiv_lo_1 ));
  shifter_ckgen_SLICE_360 \shifter/ckgen/SLICE_360 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_11 ), 
    .M0(\shifter/ckgen/s_rtdiv_lo_r0_12 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_12 ), .Q1(\shifter/ckgen/s_rtdiv_lo_11 ));
  shifter_ckgen_SLICE_361 \shifter/ckgen/SLICE_361 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_13 ), 
    .M0(\shifter/ckgen/s_rtdiv_lo_r0_14 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_lo_14 ), .Q1(\shifter/ckgen/s_rtdiv_lo_13 ));
  shifter_ckgen_SLICE_362 \shifter/ckgen/SLICE_362 ( 
    .B0(\shifter/ckgen/s_enabled ), .A0(\shifter/ckgen/s_tck_r0 ), 
    .DI0(\shifter/ckgen/mclk_c_enable_261 ), 
    .CE(\shifter/ckgen/mclk_c_enable_106 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/mclk_c_enable_261 ), .Q0(\shifter/ckgen/s_tck_r0 ));
  shifter_ckgen_SLICE_364 \shifter/ckgen/SLICE_364 ( 
    .C1(\shifter/ckgen/rtcktmo_N_629 ), .B1(\shifter/ckgen/s_enabled ), 
    .A1(\shifter/ckgen/s_tck_r0 ), .C0(\shifter/ckgen/s_tcken_r1 ), 
    .B0(\shifter/ckgen/s_enabled ), .A0(\shifter/ckgen/s_tck_r0 ), 
    .DI0(\shifter/ckgen/s_tcki_r0_N_639 ), 
    .CE(\shifter/ckgen/mclk_c_enable_106 ), .CLK(mclk_c), 
    .F0(\shifter/ckgen/s_tcki_r0_N_639 ), .Q0(\shifter/ckgen/s_tcki_r0 ), 
    .F1(\shifter/ckgen/mclk_c_enable_41 ));
  shifter_exec_ctrl_SLICE_375 \shifter/exec_ctrl/SLICE_375 ( 
    .B0(\shifter/exec_ctrl/n8332 ), .A0(\shifter/exec_ctrl/n2109 ), 
    .DI0(\shifter/exec_ctrl/s_pos_goto_en_N_1480 ), 
    .CE(\shifter/exec_ctrl/tdi_en_N_1474 ), .LSR(\shifter/exec_ctrl/n4856 ), 
    .CLK(mclk_c), .F0(\shifter/exec_ctrl/s_pos_goto_en_N_1480 ), 
    .Q0(\shifter/exec_ctrl/s_pos_goto_en ));
  shifter_SLICE_376 \shifter/SLICE_376 ( .C1(\shifter/s_en_r0 ), 
    .B1(\shifter/exec_ctrl/s_shift_en ), 
    .A1(\shifter/exec_ctrl/s_shift_en_r0 ), .D0(\shifter/exec_ctrl/n8239 ), 
    .C0(\shifter/exec_ctrl/n8240 ), .B0(\shifter/exec_ctrl/n4 ), 
    .A0(s_status_3), .DI0(\shifter/exec_ctrl/s_shift_en ), 
    .M1(\shifter/ckgen/s_div_hi_r0_10 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_shift_en ), 
    .Q0(\shifter/exec_ctrl/s_shift_en_r0 ), .F1(\shifter/n8221 ), 
    .Q1(\shifter/ckgen/s_div_hi_10 ));
  SLICE_377 SLICE_377( .DI0(n8851), .LSR(\shifter/tckn_stb ), 
    .CLK(mclk_c_enable_115), .F0(n8851), .Q0(\shifter/io/s_tckn_r0_N_669 ));
  shifter_rx_SLICE_378 \shifter/rx/SLICE_378 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_2 ), .A1(s_pos_0_3_N_670_2), 
    .C0(\shifter/rx/busy ), .B0(\shifter/rx/s_rx_op.msbf_N_1187 ), 
    .A0(s_desc_data_31), .DI0(\shifter/rx/s_rx_op.msbf ), 
    .CE(\shifter/rx/fifo_get ), .CLK(mclk_c), .F0(\shifter/rx/s_rx_op.msbf ), 
    .Q0(\shifter/op_msbf ), .F1(\shifter/rx/op_len_2 ));
  shifter_SLICE_379 \shifter/SLICE_379 ( .D1(\shifter/rx/op_pos_3_N_837_2 ), 
    .C1(\shifter/rx/busy ), .B1(s_desc_data_31), .A1(s_pos_0_3_N_670_2), 
    .D0(\shifter/rx/fifo_get ), .C0(\shifter/rx/op_pos_2 ), 
    .B0(\shifter/rx/n8275 ), .A0(\shifter/rx/bit_pos_2 ), 
    .DI0(\shifter/rx/bit_pos_2__N_811 ), .M1(\shifter/ckgen/s_div_lo_r0_10 ), 
    .CLK(mclk_c), .F0(\shifter/rx/bit_pos_2__N_811 ), 
    .Q0(\shifter/rx/bit_pos_2 ), .F1(\shifter/rx/op_pos_2 ), 
    .Q1(\shifter/ckgen/s_div_lo_10 ));
  shifter_rx_SLICE_380 \shifter/rx/SLICE_380 ( 
    .D1(\shifter/rx/op_pos_3_N_837_3 ), .C1(\shifter/rx/busy ), 
    .B1(s_desc_data_31), .A1(s_pos_0_3_N_670_3), .D0(\shifter/rx/bit_pos_3 ), 
    .C0(\shifter/rx/bit_pos_2 ), .B0(\shifter/rx/n8275 ), 
    .A0(\shifter/op_msbf ), .DI0(\shifter/rx/bit_pos_3__N_803 ), 
    .M0(\shifter/rx/fifo_get ), .CLK(mclk_c), 
    .OFX0(\shifter/rx/bit_pos_3__N_803 ), .Q0(\shifter/rx/bit_pos_3 ));
  shifter_SLICE_381 \shifter/SLICE_381 ( .D1(\shifter/rx/s_count_r_8 ), 
    .C1(\shifter/rx/s_count_r_9 ), .B1(\shifter/rx/s_count_r_7 ), 
    .A1(\shifter/rx/n8232 ), .D0(\shifter/n8858 ), 
    .C0(\shifter/rx/s_op_fifo.empty ), .B0(\shifter/rx/n8214 ), 
    .A0(\shifter/rx/busy ), .DI0(\shifter/rx/n6 ), .M1(s_ckgen_div_9), 
    .CLK(mclk_c), .F0(\shifter/rx/n6 ), .Q0(\shifter/rx/busy ), 
    .F1(\shifter/rx/n8214 ), .Q1(\shifter/ckgen/s_div_hi_r0_8 ));
  shifter_rx_SLICE_382 \shifter/rx/SLICE_382 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_0 ), .A1(\shifter/rx/s_op0.addr_0 ), 
    .D0(\shifter/rx/s_addr_r1_0 ), .C0(\shifter/rx/bit_pos_3 ), 
    .B0(\shifter/rx/n8266 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_0__N_877 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_0__N_877 ), 
    .Q0(\shifter/rx/s_addr_r1_0 ));
  shifter_rx_SLICE_383 \shifter/rx/SLICE_383 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_1 ), .A1(\shifter/rx/s_op0.addr_1 ), 
    .D0(\shifter/rx/s_addr_r1_1 ), .C0(\shifter/rx/s_addr_r1_0 ), 
    .B0(\shifter/rx/n8257 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_1__N_875 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_1__N_875 ), 
    .Q0(\shifter/rx/s_addr_r1_1 ));
  shifter_rx_SLICE_384 \shifter/rx/SLICE_384 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_2 ), .A1(\shifter/rx/s_op0.addr_2 ), 
    .D0(\shifter/rx/s_addr_r1_2 ), .C0(\shifter/rx/s_addr_r1_1 ), 
    .B0(\shifter/rx/n8241 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_2__N_873 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_2__N_873 ), 
    .Q0(\shifter/rx/s_addr_r1_2 ));
  shifter_rx_SLICE_385 \shifter/rx/SLICE_385 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_3 ), .A1(\shifter/rx/s_op0.addr_3 ), 
    .D0(\shifter/rx/s_addr_r1_3 ), .C0(\shifter/rx/s_addr_r1_2 ), 
    .B0(\shifter/rx/n8234 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_3__N_871 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_3__N_871 ), 
    .Q0(\shifter/rx/s_addr_r1_3 ));
  shifter_rx_SLICE_386 \shifter/rx/SLICE_386 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_4 ), .A1(\shifter/rx/s_op0.addr_4 ), 
    .D0(\shifter/rx/s_addr_r1_4 ), .C0(\shifter/rx/s_addr_r1_3 ), 
    .B0(\shifter/rx/n8230 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_4__N_869 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_4__N_869 ), 
    .Q0(\shifter/rx/s_addr_r1_4 ));
  shifter_rx_SLICE_387 \shifter/rx/SLICE_387 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_5 ), .A1(\shifter/rx/s_op0.addr_5 ), 
    .D0(\shifter/rx/s_addr_r1_5 ), .C0(\shifter/rx/s_addr_r1_4 ), 
    .B0(\shifter/rx/n8226 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_5__N_867 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_5__N_867 ), 
    .Q0(\shifter/rx/s_addr_r1_5 ));
  shifter_rx_SLICE_388 \shifter/rx/SLICE_388 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_6 ), .A1(\shifter/rx/s_op0.addr_6 ), 
    .D0(\shifter/rx/s_addr_r1_6 ), .C0(\shifter/rx/s_addr_r1_5 ), 
    .B0(\shifter/rx/n8219 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_6__N_865 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_6__N_865 ), 
    .Q0(\shifter/rx/s_addr_r1_6 ));
  shifter_rx_SLICE_389 \shifter/rx/SLICE_389 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_7 ), .A1(\shifter/rx/s_op0.addr_7 ), 
    .D0(\shifter/rx/s_addr_r1_7 ), .C0(\shifter/rx/s_addr_r1_6 ), 
    .B0(\shifter/rx/n8215 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_7__N_863 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_7__N_863 ), 
    .Q0(\shifter/rx/s_addr_r1_7 ));
  shifter_rx_SLICE_390 \shifter/rx/SLICE_390 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_8 ), .A1(\shifter/rx/s_op0.addr_8 ), 
    .D0(\shifter/rx/s_addr_r1_8 ), .C0(\shifter/rx/s_addr_r1_7 ), 
    .B0(\shifter/rx/n8209 ), .A0(\shifter/op_msbf ), 
    .DI0(\shifter/rx/s_addr_r1_8__N_861 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_8__N_861 ), 
    .Q0(\shifter/rx/s_addr_r1_8 ));
  shifter_rx_SLICE_391 \shifter/rx/SLICE_391 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_addr_9_N_817_9 ), .A1(\shifter/rx/s_op0.addr_9 ), 
    .D0(\shifter/rx/s_addr_r1_8 ), .C0(\shifter/rx/n8205 ), 
    .B0(\shifter/op_msbf ), .A0(\shifter/rx/s_addr_r1_9 ), 
    .DI0(\shifter/rx/s_addr_r1_9__N_841 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_addr_r1_9__N_841 ), 
    .Q0(\shifter/rx/s_addr_r1_9 ));
  shifter_SLICE_392 \shifter/SLICE_392 ( .D1(\shifter/s_count_r_0 ), 
    .C1(\shifter/s_count_r_1 ), .B1(\shifter/tckn_stb ), 
    .A1(\shifter/shift_ctrl/s_rx_en_r1 ), .D0(\shifter/rx/fifo_get ), 
    .C0(\shifter/rx/op_len_2 ), .B0(\shifter/n8272 ), 
    .A0(\shifter/rx/s_count_r_2 ), .DI0(\shifter/rx/s_count_r_2__N_900 ), 
    .M1(\shifter/ckgen/s_div_lo_r0_0 ), .CLK(mclk_c), 
    .F0(\shifter/rx/s_count_r_2__N_900 ), .Q0(\shifter/rx/s_count_r_2 ), 
    .F1(\shifter/n8272 ), .Q1(\shifter/ckgen/s_div_lo_0 ));
  shifter_rx_SLICE_393 \shifter/rx/SLICE_393 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_3 ), .A1(s_pos_0_3_N_670_3), 
    .D0(\shifter/rx/s_count_r_2 ), .C0(\shifter/rx/s_count_r_3 ), 
    .B0(\shifter/s_count_r_1 ), .A0(\shifter/n8289 ), 
    .DI0(\shifter/rx/s_count_r_3__N_904 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_3__N_904 ), 
    .Q0(\shifter/rx/s_count_r_3 ));
  shifter_rx_SLICE_394 \shifter/rx/SLICE_394 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_4 ), .A1(s_desc_data_4), 
    .D0(\shifter/rx/s_count_r_3 ), .C0(\shifter/rx/s_count_r_4 ), 
    .B0(\shifter/rx/s_count_r_2 ), .A0(\shifter/n8272 ), 
    .DI0(\shifter/rx/s_count_r_4__N_908 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_4__N_908 ), 
    .Q0(\shifter/rx/s_count_r_4 ));
  shifter_rx_SLICE_395 \shifter/rx/SLICE_395 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_5 ), .A1(s_desc_data_5), 
    .D0(\shifter/rx/s_count_r_4 ), .C0(\shifter/rx/s_count_r_5 ), 
    .B0(\shifter/rx/s_count_r_3 ), .A0(\shifter/rx/n8261 ), 
    .DI0(\shifter/rx/s_count_r_5__N_912 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_5__N_912 ), 
    .Q0(\shifter/rx/s_count_r_5 ));
  shifter_rx_SLICE_396 \shifter/rx/SLICE_396 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_6 ), .A1(s_desc_data_6), 
    .D0(\shifter/rx/s_count_r_5 ), .C0(\shifter/rx/s_count_r_6 ), 
    .B0(\shifter/rx/s_count_r_4 ), .A0(\shifter/rx/n8253 ), 
    .DI0(\shifter/rx/s_count_r_6__N_916 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_6__N_916 ), 
    .Q0(\shifter/rx/s_count_r_6 ));
  shifter_rx_SLICE_397 \shifter/rx/SLICE_397 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_7 ), .A1(s_desc_data_7), 
    .D0(\shifter/rx/s_count_r_6 ), .C0(\shifter/rx/s_count_r_7 ), 
    .B0(\shifter/rx/s_count_r_5 ), .A0(\shifter/rx/n8245 ), 
    .DI0(\shifter/rx/s_count_r_7__N_920 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_7__N_920 ), 
    .Q0(\shifter/rx/s_count_r_7 ));
  shifter_rx_SLICE_398 \shifter/rx/SLICE_398 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_8 ), .A1(s_desc_data_8), 
    .D0(\shifter/rx/s_count_r_7 ), .C0(\shifter/rx/s_count_r_8 ), 
    .B0(\shifter/rx/s_count_r_6 ), .A0(\shifter/rx/n8237 ), 
    .DI0(\shifter/rx/s_count_r_8__N_924 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_8__N_924 ), 
    .Q0(\shifter/rx/s_count_r_8 ));
  shifter_rx_SLICE_399 \shifter/rx/SLICE_399 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_9 ), .A1(s_desc_data_9), 
    .D0(\shifter/rx/s_count_r_8 ), .C0(\shifter/rx/s_count_r_9 ), 
    .B0(\shifter/rx/s_count_r_7 ), .A0(\shifter/rx/n8232 ), 
    .DI0(\shifter/rx/s_count_r_9__N_879 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_9__N_879 ), 
    .Q0(\shifter/rx/s_count_r_9 ));
  shifter_rx_SLICE_411 \shifter/rx/SLICE_411 ( .B1(s_desc_data_31), 
    .A1(s_pos_0_3_N_670_1), .B0(s_desc_data_31), .A0(s_pos_0_3_N_670_0), 
    .DI1(\shifter/rx/n8328 ), .DI0(\shifter/rx/n8324 ), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), .F0(\shifter/rx/n8324 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.pos_0 ), .F1(\shifter/rx/n8328 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.pos_1 ));
  shifter_rx_SLICE_412 \shifter/rx/SLICE_412 ( .B1(s_desc_data_31), 
    .A1(s_pos_0_3_N_670_3), .B0(s_desc_data_31), .A0(s_pos_0_3_N_670_2), 
    .DI1(\shifter/rx/n8304 ), .DI0(\shifter/rx/n8329 ), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), .F0(\shifter/rx/n8329 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.pos_2 ), .F1(\shifter/rx/n8304 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.pos_3 ));
  shifter_SLICE_448 \shifter/SLICE_448 ( .D1(\shifter/rx/busy ), 
    .C1(\shifter/rx/s_op_fifo.empty ), .B1(\shifter/rx/n8214 ), 
    .A1(\shifter/rx/start ), .B0(\shifter/rx/fifo_get ), 
    .A0(\shifter/rx/s_op_fifo.tail_0 ), .DI0(\shifter/rx/n4 ), 
    .M1(\shifter/ckgen/s_div_lo_r0_1 ), .CLK(mclk_c), .F0(\shifter/rx/n4 ), 
    .Q0(\shifter/rx/s_op_fifo.tail_0 ), .F1(\shifter/rx/fifo_get ), 
    .Q1(\shifter/ckgen/s_div_lo_1 ));
  shifter_rx_SLICE_449 \shifter/rx/SLICE_449 ( 
    .B0(\shifter/rx/s_op_fifo.tail_0 ), .A0(\shifter/rx/s_op_fifo.tail_1 ), 
    .DI0(\shifter/rx/s_op_fifo.tail_1_N_1054_1 ), .CE(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .F0(\shifter/rx/s_op_fifo.tail_1_N_1054_1 ), 
    .Q0(\shifter/rx/s_op_fifo.tail_1 ));
  shifter_SLICE_450 \shifter/SLICE_450 ( .D1(\shifter/shift_ctrl/bit_cnt_7 ), 
    .C1(\shifter/shift_ctrl/bit_cnt_8 ), .B1(\shifter/shift_ctrl/bit_cnt_6 ), 
    .A1(\shifter/shift_ctrl/n8250 ), .D0(\shifter/tckn_stb ), 
    .C0(\shifter/s_en_r1 ), .B0(\shifter/shift_ctrl/bit_cnt_9 ), 
    .A0(\shifter/shift_ctrl/n8229 ), .DI0(mclk_c_enable_118), 
    .LSR(\shifter/rx/busy ), .CLK(mclk_c), .F0(mclk_c_enable_118), 
    .Q0(\shifter/rx/start ), .F1(\shifter/shift_ctrl/n8229 ));
  shifter_rx_SLICE_451 \shifter/rx/SLICE_451 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_0 ), .A1(s_pos_0_3_N_670_0), 
    .C0(\shifter/s_count_r_0 ), .B0(\shifter/tckn_stb ), 
    .A0(\shifter/shift_ctrl/s_rx_en_r1 ), 
    .DI0(\shifter/rx/s_count_r_0__N_892 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_0__N_892 ), 
    .Q0(\shifter/s_count_r_0 ));
  shifter_rx_SLICE_452 \shifter/rx/SLICE_452 ( .C1(\shifter/rx/busy ), 
    .B1(\shifter/rx/op_len_9_N_827_1 ), .A1(s_pos_0_3_N_670_1), 
    .D0(\shifter/s_count_r_0 ), .C0(\shifter/s_count_r_1 ), 
    .B0(\shifter/tckn_stb ), .A0(\shifter/shift_ctrl/s_rx_en_r1 ), 
    .DI0(\shifter/rx/s_count_r_1__N_896 ), .M0(\shifter/rx/fifo_get ), 
    .CLK(mclk_c), .OFX0(\shifter/rx/s_count_r_1__N_896 ), 
    .Q0(\shifter/s_count_r_1 ));
  shifter_SLICE_453 \shifter/SLICE_453 ( .D1(\shifter/s_en_r1 ), 
    .C1(\shifter/tckn_stb ), .B1(\shifter/n8228 ), .A1(\shifter/s_en_r0 ), 
    .B0(\shifter/exec_ctrl/s_shift_en ), 
    .A0(\shifter/exec_ctrl/s_shift_en_r0 ), .DI0(\shifter/n8228 ), 
    .CE(\shifter/shift_ctrl/mclk_c_enable_89 ), 
    .LSR(\shifter/shift_ctrl/n4071 ), .CLK(mclk_c), .F0(\shifter/n8228 ), 
    .Q0(\shifter/s_en_r0 ), .F1(\shifter/mclk_c_enable_137 ));
  shifter_SLICE_454 \shifter/SLICE_454 ( .M1(s_tap_busy), 
    .M0(\shifter/s_en_r0 ), .CLK(mclk_c), .Q0(\shifter/s_en_r1 ), 
    .Q1(\shifter/exec_ctrl/s_exec_en ));
  shifter_SLICE_455 \shifter/SLICE_455 ( .C1(\shifter/tx/s_addr_r_0 ), 
    .B1(\shifter/tx/n8249 ), .A1(\shifter/s_msbf ), .D0(\shifter/s_msbf_r ), 
    .C0(s_desc_data_30), .B0(\shifter/s_en_r1 ), .A0(\shifter/n8217 ), 
    .DI0(\shifter/s_msbf ), .M1(\shifter/ckgen/s_div_lo_r0_11 ), .CLK(mclk_c), 
    .F0(\shifter/s_msbf ), .Q0(\shifter/s_msbf_r ), .F1(\shifter/tx/n8202 ), 
    .Q1(\shifter/ckgen/s_div_lo_11 ));
  SLICE_456 SLICE_456( .B1(s_cfg_4), .A1(s_tap_tdi), .C0(s_cfg_4), 
    .B0(s_tap_tdi), .A0(tp_tdo_c), .DI0(s_tap_tdo), .CE(mclk_c_enable_115), 
    .CLK(mclk_c), .F0(s_tap_tdo), .Q0(\shifter/s_mtdo ), .F1(tp_tdi_c));
  shifter_SLICE_457 \shifter/SLICE_457 ( .D1(\shifter/s_offs_r_1 ), 
    .C1(\shifter/n8212 ), .B1(\shifter/n8228 ), .A1(\shifter/s_en_r0 ), 
    .D0(\shifter/s_offs_r_0 ), .C0(\shifter/s_offs_inc ), .B0(\shifter/n8228 ), 
    .A0(\shifter/s_en_r0 ), .DI1(\shifter/n2503 ), .DI0(\shifter/n2478 ), 
    .CLK(mclk_c), .F0(\shifter/n2478 ), .Q0(\shifter/s_offs_r_0 ), 
    .F1(\shifter/n2503 ), .Q1(\shifter/s_offs_r_1 ));
  shifter_exec_ctrl_SLICE_460 \shifter/exec_ctrl/SLICE_460 ( 
    .DI0(\n8851\000/BUF1 ), .CE(\shifter/exec_ctrl/mclk_c_enable_25 ), 
    .LSR(\shifter/exec_ctrl/n2463 ), .CLK(mclk_c), .F0(\n8851\000/BUF1 ), 
    .Q0(\shifter/s_tcken ));
  shifter_exec_ctrl_SLICE_461 \shifter/exec_ctrl/SLICE_461 ( 
    .C1(\shifter/exec_ctrl/s_insn_r0_13 ), 
    .B1(\shifter/exec_ctrl/s_insn_r0_14 ), 
    .A1(\shifter/exec_ctrl/s_insn_r0_15 ), .C0(\shifter/exec_ctrl/n8330 ), 
    .B0(\shifter/exec_ctrl/n2159 ), .A0(\shifter/exec_ctrl/n8331 ), 
    .DI0(\shifter/exec_ctrl/tdi_en_N_1472 ), 
    .CE(\shifter/exec_ctrl/mclk_c_enable_45 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/tdi_en_N_1472 ), .Q0(\shifter/s_tdien ), 
    .F1(\shifter/exec_ctrl/n2159 ));
  shifter_shift_ctrl_SLICE_462 \shifter/shift_ctrl/SLICE_462 ( 
    .B1(\shifter/s_en_r1 ), .A1(\shifter/tckn_stb ), 
    .D0(\shifter/shift_ctrl/s_cnt_stb ), .C0(\shifter/n8858 ), 
    .B0(s_pos_0_3_N_670_0), .A0(\shifter/shift_ctrl/bit_cnt_0 ), 
    .DI0(\shifter/shift_ctrl/bit_cnt_0__N_1203 ), .LSR(\shifter/n8221 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/bit_cnt_0__N_1203 ), 
    .Q0(\shifter/shift_ctrl/bit_cnt_0 ), .F1(\shifter/shift_ctrl/s_cnt_stb ));
  shifter_shift_ctrl_SLICE_463 \shifter/shift_ctrl/SLICE_463 ( 
    .D1(\shifter/shift_ctrl/n8305 ), .C1(\shifter/n8858 ), 
    .B1(s_pos_0_3_N_670_2), .A1(\shifter/shift_ctrl/bit_cnt_2 ), 
    .D0(\shifter/shift_ctrl/bit_cnt_0 ), .C0(\shifter/n8858 ), 
    .B0(s_pos_0_3_N_670_1), .A0(\shifter/shift_ctrl/bit_cnt_1 ), 
    .DI1(\shifter/shift_ctrl/bit_cnt_2__N_1214 ), 
    .DI0(\shifter/shift_ctrl/bit_cnt_1__N_1208 ), 
    .CE(\shifter/mclk_c_enable_137 ), .LSR(\shifter/n8221 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/bit_cnt_1__N_1208 ), 
    .Q0(\shifter/shift_ctrl/bit_cnt_1 ), 
    .F1(\shifter/shift_ctrl/bit_cnt_2__N_1214 ), 
    .Q1(\shifter/shift_ctrl/bit_cnt_2 ));
  shifter_shift_ctrl_SLICE_464 \shifter/shift_ctrl/SLICE_464 ( 
    .D1(\shifter/shift_ctrl/n8269 ), .C1(\shifter/n8858 ), .B1(s_desc_data_4), 
    .A1(\shifter/shift_ctrl/bit_cnt_4 ), .D0(\shifter/shift_ctrl/n8281 ), 
    .C0(\shifter/n8858 ), .B0(s_pos_0_3_N_670_3), 
    .A0(\shifter/shift_ctrl/bit_cnt_3 ), 
    .DI1(\shifter/shift_ctrl/bit_cnt_4__N_1226 ), 
    .DI0(\shifter/shift_ctrl/bit_cnt_3__N_1220 ), 
    .CE(\shifter/mclk_c_enable_137 ), .LSR(\shifter/n8221 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/bit_cnt_3__N_1220 ), 
    .Q0(\shifter/shift_ctrl/bit_cnt_3 ), 
    .F1(\shifter/shift_ctrl/bit_cnt_4__N_1226 ), 
    .Q1(\shifter/shift_ctrl/bit_cnt_4 ));
  shifter_shift_ctrl_SLICE_465 \shifter/shift_ctrl/SLICE_465 ( 
    .D1(\shifter/shift_ctrl/n8250 ), .C1(\shifter/n8858 ), .B1(s_desc_data_6), 
    .A1(\shifter/shift_ctrl/bit_cnt_6 ), .D0(\shifter/shift_ctrl/n8258 ), 
    .C0(\shifter/n8858 ), .B0(s_desc_data_5), 
    .A0(\shifter/shift_ctrl/bit_cnt_5 ), 
    .DI1(\shifter/shift_ctrl/bit_cnt_6__N_1238 ), 
    .DI0(\shifter/shift_ctrl/bit_cnt_5__N_1232 ), 
    .CE(\shifter/mclk_c_enable_137 ), .LSR(\shifter/n8221 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/bit_cnt_5__N_1232 ), 
    .Q0(\shifter/shift_ctrl/bit_cnt_5 ), 
    .F1(\shifter/shift_ctrl/bit_cnt_6__N_1238 ), 
    .Q1(\shifter/shift_ctrl/bit_cnt_6 ));
  shifter_shift_ctrl_SLICE_466 \shifter/shift_ctrl/SLICE_466 ( 
    .D1(\shifter/shift_ctrl/n8235 ), .C1(\shifter/n8858 ), .B1(s_desc_data_8), 
    .A1(\shifter/shift_ctrl/bit_cnt_8 ), .D0(\shifter/shift_ctrl/n8243 ), 
    .C0(\shifter/n8858 ), .B0(s_desc_data_7), 
    .A0(\shifter/shift_ctrl/bit_cnt_7 ), 
    .DI1(\shifter/shift_ctrl/bit_cnt_8__N_1250 ), 
    .DI0(\shifter/shift_ctrl/bit_cnt_7__N_1244 ), 
    .CE(\shifter/mclk_c_enable_137 ), .LSR(\shifter/n8221 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/bit_cnt_7__N_1244 ), 
    .Q0(\shifter/shift_ctrl/bit_cnt_7 ), 
    .F1(\shifter/shift_ctrl/bit_cnt_8__N_1250 ), 
    .Q1(\shifter/shift_ctrl/bit_cnt_8 ));
  shifter_shift_ctrl_SLICE_467 \shifter/shift_ctrl/SLICE_467 ( 
    .D1(\shifter/tckn_stb ), .C1(\shifter/s_en_r1 ), 
    .B1(\shifter/shift_ctrl/bit_cnt_9 ), .A1(\shifter/shift_ctrl/n8229 ), 
    .D0(\shifter/shift_ctrl/n8229 ), .C0(\shifter/n8858 ), .B0(s_desc_data_9), 
    .A0(\shifter/shift_ctrl/bit_cnt_9 ), 
    .DI0(\shifter/shift_ctrl/bit_cnt_9__N_1189 ), 
    .CE(\shifter/mclk_c_enable_137 ), .LSR(\shifter/n8221 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/bit_cnt_9__N_1189 ), 
    .Q0(\shifter/shift_ctrl/bit_cnt_9 ), .F1(\shifter/n8858 ));
  shifter_shift_ctrl_SLICE_469 \shifter/shift_ctrl/SLICE_469 ( 
    .D1(\shifter/shift_ctrl/s_offs_r_3 ), .C1(\shifter/n8221 ), 
    .B1(\shifter/shift_ctrl/s_offs_r_2 ), .A1(\shifter/shift_ctrl/n8207 ), 
    .D0(\shifter/shift_ctrl/s_offs_r_2 ), .C0(\shifter/n8221 ), 
    .B0(\shifter/s_offs_r_1 ), .A0(\shifter/n8212 ), 
    .DI1(\shifter/shift_ctrl/n2494 ), .DI0(\shifter/shift_ctrl/n2501 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/n2501 ), 
    .Q0(\shifter/shift_ctrl/s_offs_r_2 ), .F1(\shifter/shift_ctrl/n2494 ), 
    .Q1(\shifter/shift_ctrl/s_offs_r_3 ));
  shifter_shift_ctrl_SLICE_470 \shifter/shift_ctrl/SLICE_470 ( 
    .D1(\shifter/shift_ctrl/s_offs_r_5 ), .C1(\shifter/n8221 ), 
    .B1(\shifter/shift_ctrl/s_offs_r_4 ), .A1(\shifter/shift_ctrl/n8199 ), 
    .D0(\shifter/shift_ctrl/s_offs_r_4 ), .C0(\shifter/n8221 ), 
    .B0(\shifter/shift_ctrl/s_offs_r_3 ), .A0(\shifter/shift_ctrl/n8203 ), 
    .DI1(\shifter/shift_ctrl/n2486 ), .DI0(\shifter/shift_ctrl/n2490 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/n2490 ), 
    .Q0(\shifter/shift_ctrl/s_offs_r_4 ), .F1(\shifter/shift_ctrl/n2486 ), 
    .Q1(\shifter/shift_ctrl/s_offs_r_5 ));
  shifter_shift_ctrl_SLICE_471 \shifter/shift_ctrl/SLICE_471 ( 
    .D1(\shifter/shift_ctrl/s_offs_r_6 ), .C1(\shifter/shift_ctrl/n8194 ), 
    .B1(\shifter/n8221 ), .A1(\shifter/shift_ctrl/s_offs_r_7 ), 
    .D0(\shifter/shift_ctrl/s_offs_r_6 ), .C0(\shifter/n8221 ), 
    .B0(\shifter/shift_ctrl/s_offs_r_5 ), .A0(\shifter/shift_ctrl/n8196 ), 
    .DI1(\shifter/shift_ctrl/n2480 ), .DI0(\shifter/shift_ctrl/n2482 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/n2482 ), 
    .Q0(\shifter/shift_ctrl/s_offs_r_6 ), .F1(\shifter/shift_ctrl/n2480 ), 
    .Q1(\shifter/shift_ctrl/s_offs_r_7 ));
  shifter_tx_SLICE_474 \shifter/tx/SLICE_474 ( .D1(\shifter/n8858 ), 
    .C1(\shifter/tx/s_pos_0_1 ), .B1(\shifter/tx/n8290 ), 
    .A1(\shifter/tx/s_pos_1 ), .D0(\shifter/n8858 ), 
    .C0(\shifter/tx/s_pos_0_0 ), .B0(\shifter/s_tx_shift_stb ), 
    .A0(\shifter/tx/s_pos_0 ), .DI1(\shifter/tx/s_pos_1__N_696 ), 
    .DI0(\shifter/tx/s_pos_0__N_698 ), .CLK(mclk_c), 
    .F0(\shifter/tx/s_pos_0__N_698 ), .Q0(\shifter/tx/s_pos_0 ), 
    .F1(\shifter/tx/s_pos_1__N_696 ), .Q1(\shifter/tx/s_pos_1 ));
  shifter_SLICE_475 \shifter/SLICE_475 ( .B1(s_desc_data_30), 
    .A1(s_pos_0_3_N_670_2), .D0(\shifter/n8858 ), .C0(\shifter/tx/s_pos_0_2 ), 
    .B0(\shifter/tx/n8271 ), .A0(\shifter/tx/s_pos_2 ), 
    .DI0(\shifter/tx/s_pos_2__N_694 ), .M1(\shifter/ckgen/s_div_lo_r0_12 ), 
    .CLK(mclk_c), .F0(\shifter/tx/s_pos_2__N_694 ), .Q0(\shifter/tx/s_pos_2 ), 
    .F1(\shifter/tx/s_pos_0_2 ), .Q1(\shifter/ckgen/s_div_lo_12 ));
  shifter_tx_SLICE_476 \shifter/tx/SLICE_476 ( .B1(s_desc_data_30), 
    .A1(s_pos_0_3_N_670_3), .D0(\shifter/tx/s_pos_3 ), 
    .C0(\shifter/tx/s_pos_2 ), .B0(\shifter/tx/n8271 ), 
    .A0(\shifter/s_msbf_r ), .DI0(\shifter/tx/s_pos_3__N_686 ), 
    .M0(\shifter/n8858 ), .CLK(mclk_c), .OFX0(\shifter/tx/s_pos_3__N_686 ), 
    .Q0(\shifter/tx/s_pos_3 ));
  shifter_SLICE_478 \shifter/SLICE_478 ( .C1(\shifter/exec_ctrl/n8735 ), 
    .B1(\shifter/exec_ctrl/n8052 ), 
    .A1(\shifter/exec_ctrl/s_tap_state_next_3 ), .D0(s_status_3), 
    .C0(\shifter/exec_ctrl/s_tap_state_next_1 ), 
    .B0(\shifter/exec_ctrl/n7167 ), 
    .A0(\shifter/exec_ctrl/s_tap_state_next_3 ), .DI0(\shifter/s_mtms ), 
    .M0(\shifter/exec_ctrl/s_tap_state_next_2 ), .CE(mclk_c_enable_115), 
    .CLK(mclk_c), .OFX0(\shifter/s_mtms ), .Q0(tp_tms_c));
  i5808_SLICE_479 \i5808/SLICE_479 ( .C1(s_desc_hi_2), .B1(s_desc_lo_2), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_mem_rd_addr_2), 
    .A0(s_mem_wr_addr_2), .M0(q_15__N_80), .OFX0(n7471));
  i5829_SLICE_480 \i5829/SLICE_480 ( .C1(s_r3_2), .B1(s_irq_en_2), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_irq_st_2), .A0(s_status_2), 
    .M0(q_15__N_80), .OFX0(n7492));
  i5830_SLICE_481 \i5830/SLICE_481 ( .C1(s_tmr_2), .B1(s_cfg_2), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_2), .A0(s_ckgen_div_2), 
    .M1(q_15__N_78), .M0(q_15__N_80), .FXB(n7493), .FXA(n7492), .OFX0(n7493), 
    .OFX1(n7494));
  i5836_SLICE_482 \i5836/SLICE_482 ( .C1(s_r3_1), .B1(s_irq_en_1), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_irq_st_1), .A0(s_status_1), 
    .M0(q_15__N_80), .OFX0(n7499));
  i5837_SLICE_483 \i5837/SLICE_483 ( .C1(s_tmr_1), .B1(s_cfg_1), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_1), .A0(s_ckgen_div_1), 
    .M1(q_15__N_78), .M0(q_15__N_80), .FXB(n7500), .FXA(n7499), .OFX0(n7500), 
    .OFX1(n7501));
  i6_SLICE_484 \i6/SLICE_484 ( .D1(n8274), 
    .C1(\shifter/exec_ctrl/s_drpause_cnt_en ), 
    .B1(\shifter/exec_ctrl/mtms_N_1486_7 ), .A1(n8279), .D0(s_status_2), 
    .C0(\shifter/exec_ctrl/n8262 ), .B0(\shifter/exec_ctrl/n8246 ), 
    .A0(\shifter/exec_ctrl/n3000 ), .M0(n7227), .OFX0(n2_adj_1633));
  i5647_SLICE_485 \i5647/SLICE_485 ( .C1(s_tmr_15), .B1(s_cfg_15), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_15), 
    .A0(s_ckgen_div_15), .M0(q_15__N_80), .OFX0(n7310));
  i5844_SLICE_486 \i5844/SLICE_486 ( .C1(s_tmr_13), .B1(s_cfg_13), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_13), 
    .A0(s_ckgen_div_13), .M0(q_15__N_80), .OFX0(n7507));
  i36_SLICE_487 \i36/SLICE_487 ( .D1(s_addr3_1), .C1(s_addr3_2), 
    .B1(s_addr3_0), .A1(s_addr3_3), .D0(n1544), .C0(n8283), .B0(n22), 
    .A0(n8284), .M0(n1543), .OFX0(n19));
  i5847_SLICE_488 \i5847/SLICE_488 ( .C1(s_tmr_14), .B1(s_cfg_14), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_14), 
    .A0(s_ckgen_div_14), .M0(q_15__N_80), .OFX0(n7510));
  i5650_SLICE_489 \i5650/SLICE_489 ( .C1(s_tmr_5), .B1(s_cfg_5), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_5), .A0(s_ckgen_div_5), 
    .M0(q_15__N_80), .OFX0(n7313));
  i6211_SLICE_490 \i6211/SLICE_490 ( .D1(s_addr3_2), .C1(s_addr3_1), 
    .B1(s_addr3_0), .A1(s_addr3_3), .D0(n8177), .C0(n1544), .B0(s_addr2_2), 
    .A0(n8311), .M0(n1543), .OFX0(n7800));
  i49_SLICE_491 \i49/SLICE_491 ( .D1(s_addr2_2), .C1(s_addr2_1), 
    .B1(s_addr2_0), .A1(s_addr2_3), .C0(n7185), .B0(n8311), .A0(n8312), 
    .M0(n1544), .OFX0(n7215));
  cram_bus_addr_r_i6498_SLICE_492 \cram_bus/addr_r/i6498/SLICE_492 ( 
    .B1(s_tmr_6), .A1(q_15__N_82), .C0(s_r3_6), .B0(q_15__N_80), 
    .A0(q_15__N_82), .M0(q_15__N_78), .OFX0(\cram_bus/addr_r/n8339 ));
  i6205_SLICE_493 \i6205/SLICE_493 ( .D1(s_addr3_1), .C1(s_addr3_2), 
    .B1(s_addr3_0), .A1(s_addr3_3), .D0(n8178), .C0(n1544), .B0(s_addr2_2), 
    .A0(n8311), .M0(n1543), .OFX0(n7794));
  s_mem_rd_sel_1__I_0_Mux_0_i3_SLICE_494 
    \s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494 ( .B1(s_aux_mem_dout_0), 
    .A1(s_mem_rd_sel_0), .D0(n2546), .C0(n2562), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_0));
  s_mem_rd_sel_1__I_0_Mux_1_i3_SLICE_495 
    \s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495 ( .B1(s_aux_mem_dout_1), 
    .A1(s_mem_rd_sel_0), .D0(n2547), .C0(n2563), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_1));
  s_mem_rd_sel_1__I_0_Mux_2_i3_SLICE_496 
    \s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496 ( .B1(s_aux_mem_dout_2), 
    .A1(s_mem_rd_sel_0), .D0(n2548), .C0(n2564), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_2));
  s_mem_rd_sel_1__I_0_Mux_3_i3_SLICE_497 
    \s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497 ( .B1(s_aux_mem_dout_3), 
    .A1(s_mem_rd_sel_0), .D0(n2549), .C0(n2565), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_3));
  i5817_SLICE_498 \i5817/SLICE_498 ( .C1(s_desc_hi_1), .B1(s_desc_lo_1), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_mem_rd_addr_1), 
    .A0(s_mem_wr_addr_1), .M0(q_15__N_80), .OFX0(n7480));
  s_mem_rd_sel_1__I_0_Mux_4_i3_SLICE_499 
    \s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499 ( .B1(s_aux_mem_dout_4), 
    .A1(s_mem_rd_sel_0), .D0(n2550), .C0(n2566), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_4));
  s_mem_rd_sel_1__I_0_Mux_5_i3_SLICE_500 
    \s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500 ( .B1(s_aux_mem_dout_5), 
    .A1(s_mem_rd_sel_0), .D0(n2551), .C0(n2567), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_5));
  s_mem_rd_sel_1__I_0_Mux_6_i3_SLICE_501 
    \s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501 ( .B1(s_aux_mem_dout_6), 
    .A1(s_mem_rd_sel_0), .D0(n2552), .C0(n2568), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_6));
  s_mem_rd_sel_1__I_0_Mux_7_i3_SLICE_502 
    \s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502 ( .B1(s_aux_mem_dout_7), 
    .A1(s_mem_rd_sel_0), .D0(n2553), .C0(n2569), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_7));
  s_mem_rd_sel_1__I_0_Mux_8_i3_SLICE_503 
    \s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503 ( .B1(s_aux_mem_dout_8), 
    .A1(s_mem_rd_sel_0), .D0(n2554), .C0(n2570), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_8));
  s_mem_rd_sel_1__I_0_Mux_9_i3_SLICE_504 
    \s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504 ( .B1(s_aux_mem_dout_9), 
    .A1(s_mem_rd_sel_0), .D0(n2555), .C0(n2571), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_9));
  s_mem_rd_sel_1__I_0_Mux_10_i3_SLICE_505 
    \s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505 ( .B1(s_aux_mem_dout_10), 
    .A1(s_mem_rd_sel_0), .D0(n2556), .C0(n2572), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_10));
  s_mem_rd_sel_1__I_0_Mux_11_i3_SLICE_506 
    \s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506 ( .B1(s_aux_mem_dout_11), 
    .A1(s_mem_rd_sel_0), .D0(n2557), .C0(n2573), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_11));
  s_mem_rd_sel_1__I_0_Mux_12_i3_SLICE_507 
    \s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507 ( .B1(s_aux_mem_dout_12), 
    .A1(s_mem_rd_sel_0), .D0(n2558), .C0(n2574), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_12));
  s_mem_rd_sel_1__I_0_Mux_13_i3_SLICE_508 
    \s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508 ( .B1(s_aux_mem_dout_13), 
    .A1(s_mem_rd_sel_0), .D0(n2559), .C0(n2575), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_13));
  s_mem_rd_sel_1__I_0_Mux_14_i3_SLICE_509 
    \s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509 ( .B1(s_aux_mem_dout_14), 
    .A1(s_mem_rd_sel_0), .D0(n2560), .C0(n2576), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_14));
  s_mem_rd_sel_1__I_0_Mux_15_i3_SLICE_510 
    \s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510 ( .B1(s_aux_mem_dout_15), 
    .A1(s_mem_rd_sel_0), .D0(n2561), .C0(n2577), .B0(n2578), 
    .A0(s_mem_rd_sel_0), .M0(s_mem_rd_sel_1), .OFX0(s_mem_dout_15));
  i6195_SLICE_511 \i6195/SLICE_511 ( .D1(s_addr3_2), .C1(s_addr3_1), 
    .B1(s_addr3_0), .A1(s_addr3_3), .D0(n8180), .C0(n1544), .B0(s_addr2_2), 
    .A0(n8311), .M0(n1543), .OFX0(n7785));
  i46_SLICE_512 \i46/SLICE_512 ( .B1(s_addr1_0), .A1(s_addr1_1), 
    .B0(s_addr0_0), .A0(s_addr0_1), .M0(n1545), .OFX0(n7185));
  i42_SLICE_513 \i42/SLICE_513 ( .B1(s_addr1_0), .A1(s_addr1_1), 
    .B0(s_addr0_0), .A0(s_addr0_1), .M0(n1545), .OFX0(n20));
  i46_adj_215_SLICE_514 \i46_adj_215/SLICE_514 ( .B1(s_addr1_0), 
    .A1(s_addr1_1), .B0(s_addr0_1), .A0(s_addr0_0), .M0(n1545), .OFX0(n24));
  i5822_SLICE_515 \i5822/SLICE_515 ( .C1(s_r3_3), .B1(s_irq_en_3), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_irq_st_3), .A0(s_status_3), 
    .M0(q_15__N_80), .OFX0(n7485));
  i5823_SLICE_516 \i5823/SLICE_516 ( .C1(s_tmr_3), .B1(s_cfg_3), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_3), .A0(s_ckgen_div_3), 
    .M1(q_15__N_78), .M0(q_15__N_80), .FXB(n7486), .FXA(n7485), .OFX0(n7486), 
    .OFX1(n7487));
  i6268_SLICE_517 \i6268/SLICE_517 ( .D1(s_addr2_2), .C1(s_addr2_1), 
    .B1(s_addr2_0), .A1(s_addr2_3), .C0(n24), .B0(n8311), .A0(n8312), 
    .M0(n1544), .OFX0(n7863));
  i6265_SLICE_518 \i6265/SLICE_518 ( .D1(s_addr2_1), .C1(s_addr2_2), 
    .B1(s_addr2_0), .A1(s_addr2_3), .C0(n20), .B0(n8311), .A0(n8312), 
    .M0(n1544), .OFX0(n7860));
  i5704_SLICE_519 \i5704/SLICE_519 ( .C1(s_tmr_8), .B1(s_cfg_8), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_8), .A0(s_ckgen_div_8), 
    .M0(q_15__N_80), .OFX0(n7367));
  i5707_SLICE_520 \i5707/SLICE_520 ( .C1(s_tmr_12), .B1(s_cfg_12), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_12), 
    .A0(s_ckgen_div_12), .M0(q_15__N_80), .OFX0(n7370));
  i5713_SLICE_521 \i5713/SLICE_521 ( .C1(s_desc_hi_6), .B1(s_desc_lo_6), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_mem_rd_addr_6), 
    .A0(s_mem_wr_addr_6), .M0(q_15__N_80), .OFX0(n7376));
  i5719_SLICE_522 \i5719/SLICE_522 ( .C1(s_tmr_11), .B1(s_cfg_11), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_11), 
    .A0(s_ckgen_div_11), .M0(q_15__N_80), .OFX0(n7382));
  i5722_SLICE_523 \i5722/SLICE_523 ( .C1(s_tmr_9), .B1(s_cfg_9), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_9), .A0(s_ckgen_div_9), 
    .M0(q_15__N_80), .OFX0(n7385));
  shifter_tx_i5760_SLICE_524 \shifter/tx/i5760/SLICE_524 ( .C1(n2600), 
    .B1(n2584), .A1(n2615), .C0(n2615), .B0(n2599), .A0(n2583), 
    .M0(\shifter/tx/s_pos_0 ), .OFX0(\shifter/tx/n7423 ));
  shifter_tx_i5761_SLICE_525 \shifter/tx/i5761/SLICE_525 ( .C1(n2602), 
    .B1(n2586), .A1(n2615), .C0(n2615), .B0(n2601), .A0(n2585), 
    .M1(\shifter/tx/s_pos_1 ), .M0(\shifter/tx/s_pos_0 ), 
    .FXB(\shifter/tx/n7424 ), .FXA(\shifter/tx/n7423 ), 
    .OFX0(\shifter/tx/n7424 ), .OFX1(\shifter/tx/n7431 ));
  shifter_tx_i5762_SLICE_526 \shifter/tx/i5762/SLICE_526 ( .C1(n2604), 
    .B1(n2588), .A1(n2615), .C0(n2615), .B0(n2603), .A0(n2587), 
    .M1(\shifter/tx/s_pos_2 ), .M0(\shifter/tx/s_pos_0 ), 
    .FXB(\shifter/tx/n7432 ), .FXA(\shifter/tx/n7431 ), 
    .OFX0(\shifter/tx/n7425 ), .OFX1(\shifter/tx/n7435 ));
  shifter_tx_i5763_SLICE_527 \shifter/tx/i5763/SLICE_527 ( .C1(n2606), 
    .B1(n2590), .A1(n2615), .C0(n2615), .B0(n2605), .A0(n2589), 
    .M1(\shifter/tx/s_pos_1 ), .M0(\shifter/tx/s_pos_0 ), 
    .FXB(\shifter/tx/n7426 ), .FXA(\shifter/tx/n7425 ), 
    .OFX0(\shifter/tx/n7426 ), .OFX1(\shifter/tx/n7432 ));
  shifter_tx_i5764_SLICE_528 \shifter/tx/i5764/SLICE_528 ( .C1(n2608), 
    .B1(n2592), .A1(n2615), .C0(n2615), .B0(n2607), .A0(n2591), 
    .M0(\shifter/tx/s_pos_0 ), .OFX0(\shifter/tx/n7427 ));
  shifter_tx_i5765_SLICE_529 \shifter/tx/i5765/SLICE_529 ( .C1(n2610), 
    .B1(n2594), .A1(n2615), .C0(n2615), .B0(n2609), .A0(n2593), 
    .M1(\shifter/tx/s_pos_1 ), .M0(\shifter/tx/s_pos_0 ), 
    .FXB(\shifter/tx/n7428 ), .FXA(\shifter/tx/n7427 ), 
    .OFX0(\shifter/tx/n7428 ), .OFX1(\shifter/tx/n7433 ));
  shifter_tx_i5766_SLICE_530 \shifter/tx/i5766/SLICE_530 ( .C1(n2612), 
    .B1(n2596), .A1(n2615), .C0(n2615), .B0(n2611), .A0(n2595), 
    .M1(\shifter/tx/s_pos_2 ), .M0(\shifter/tx/s_pos_0 ), 
    .FXB(\shifter/tx/n7434 ), .FXA(\shifter/tx/n7433 ), 
    .OFX0(\shifter/tx/n7429 ), .OFX1(\shifter/tx/n7436 ));
  shifter_tx_i5767_SLICE_531 \shifter/tx/i5767/SLICE_531 ( .C1(n2614), 
    .B1(n2598), .A1(n2615), .C0(n2615), .B0(n2613), .A0(n2597), 
    .M1(\shifter/tx/s_pos_1 ), .M0(\shifter/tx/s_pos_0 ), 
    .FXB(\shifter/tx/n7430 ), .FXA(\shifter/tx/n7429 ), 
    .OFX0(\shifter/tx/n7430 ), .OFX1(\shifter/tx/n7434 ));
  shifter_rx_i5805_SLICE_532 \shifter/rx/i5805/SLICE_532 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_7 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_7 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_7 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_7 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_7 ));
  shifter_rx_i5811_SLICE_533 \shifter/rx/i5811/SLICE_533 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_6 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_6 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_6 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_6 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_6 ));
  shifter_rx_i5814_SLICE_534 \shifter/rx/i5814/SLICE_534 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_5 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_5 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_5 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_5 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_5 ));
  shifter_rx_i5656_SLICE_535 \shifter/rx/i5656/SLICE_535 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_4 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_4 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_4 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_4 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_4 ));
  shifter_rx_i5659_SLICE_536 \shifter/rx/i5659/SLICE_536 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_3 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_3 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_3 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_3 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_3 ));
  shifter_rx_i5662_SLICE_537 \shifter/rx/i5662/SLICE_537 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_2 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_2 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_2 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_2 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_2 ));
  shifter_rx_i5665_SLICE_538 \shifter/rx/i5665/SLICE_538 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_1 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_1 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_1 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_1 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_1 ));
  shifter_rx_i5668_SLICE_539 \shifter/rx/i5668/SLICE_539 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_9 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_9 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_9 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_9 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_9 ));
  shifter_rx_i5671_SLICE_540 \shifter/rx/i5671/SLICE_540 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_8 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_8 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_8 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_8 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_8 ));
  shifter_rx_i5674_SLICE_541 \shifter/rx/i5674/SLICE_541 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_7 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_7 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_7 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_7 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_7 ));
  shifter_rx_i5677_SLICE_542 \shifter/rx/i5677/SLICE_542 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_6 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_6 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_6 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_6 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_6 ));
  shifter_rx_i5680_SLICE_543 \shifter/rx/i5680/SLICE_543 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_5 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_5 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_5 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_5 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_5 ));
  shifter_rx_i5683_SLICE_544 \shifter/rx/i5683/SLICE_544 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_4 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_4 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_4 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_4 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_4 ));
  shifter_rx_i5686_SLICE_545 \shifter/rx/i5686/SLICE_545 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_3 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_3 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_3 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_3 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_3 ));
  shifter_rx_i5689_SLICE_546 \shifter/rx/i5689/SLICE_546 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_2 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_2 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_2 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_2 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_2 ));
  shifter_rx_i5692_SLICE_547 \shifter/rx/i5692/SLICE_547 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_0 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_0 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_0 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_0 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_0 ));
  shifter_rx_i5695_SLICE_548 \shifter/rx/i5695/SLICE_548 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_0 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_0 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_0 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_0 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_0 ));
  shifter_rx_i5698_SLICE_549 \shifter/rx/i5698/SLICE_549 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.pos_0 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.pos_0 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.pos_0 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.pos_0 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_pos_3_N_837_0 ));
  shifter_rx_i5701_SLICE_550 \shifter/rx/i5701/SLICE_550 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.msbf ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.msbf ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.msbf ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.msbf ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), 
    .OFX0(\shifter/rx/s_rx_op.msbf_N_1187 ));
  shifter_rx_i5710_SLICE_551 \shifter/rx/i5710/SLICE_551 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.pos_3 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.pos_3 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.pos_3 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.pos_3 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_pos_3_N_837_3 ));
  shifter_rx_i5728_SLICE_552 \shifter/rx/i5728/SLICE_552 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.len_1 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.len_1 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.len_1 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.len_1 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_len_9_N_827_1 ));
  shifter_rx_i5780_SLICE_553 \shifter/rx/i5780/SLICE_553 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.pos_2 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.pos_2 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.pos_2 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.pos_2 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_pos_3_N_837_2 ));
  shifter_rx_i5786_SLICE_554 \shifter/rx/i5786/SLICE_554 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.pos_1 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.pos_1 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.pos_1 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.pos_1 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_pos_3_N_837_1 ));
  shifter_rx_i5789_SLICE_555 \shifter/rx/i5789/SLICE_555 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_9 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_9 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_9 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_9 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_9 ));
  shifter_rx_i5802_SLICE_556 \shifter/rx/i5802/SLICE_556 ( 
    .C1(\shifter/rx/s_op_fifo.buf_3_.addr_8 ), 
    .B1(\shifter/rx/s_op_fifo.buf_2_.addr_8 ), 
    .A1(\shifter/rx/s_op_fifo.tail_0 ), .C0(\shifter/rx/s_op_fifo.tail_0 ), 
    .B0(\shifter/rx/s_op_fifo.buf_1_.addr_8 ), 
    .A0(\shifter/rx/s_op_fifo.buf_0_.addr_8 ), 
    .M0(\shifter/rx/s_op_fifo.tail_1 ), .OFX0(\shifter/rx/op_addr_9_N_817_8 ));
  shifter_exec_ctrl_mux_159_i2_SLICE_557 
    \shifter/exec_ctrl/mux_159_i2/SLICE_557 ( .D1(s_status_2), 
    .C1(\shifter/exec_ctrl/n8246 ), .B1(\shifter/exec_ctrl/n5022 ), 
    .A1(\shifter/exec_ctrl/s_irscan_state_1 ), .D0(\shifter/exec_ctrl/n8291 ), 
    .C0(\shifter/exec_ctrl/n8262 ), .B0(s_status_1), .A0(s_status_3), 
    .M0(\shifter/exec_ctrl/n7258 ), 
    .OFX0(\shifter/exec_ctrl/s_tap_state_next_3_N_1461_1 ));
  shifter_exec_ctrl_mux_157_i1_SLICE_558 
    \shifter/exec_ctrl/mux_157_i1/SLICE_558 ( .D1(s_status_1), .C1(s_status_0), 
    .B1(s_status_3), .A1(s_status_2), .D0(n8279), 
    .C0(\shifter/exec_ctrl/s_irscan_state_0 ), 
    .B0(\shifter/exec_ctrl/s_irpause_state_0 ), .A0(\shifter/exec_ctrl/n8268 ), 
    .M0(\shifter/exec_ctrl/n8265 ), .OFX0(\shifter/exec_ctrl/n518 ));
  shifter_exec_ctrl_i6396_SLICE_559 \shifter/exec_ctrl/i6396/SLICE_559 ( 
    .B1(\shifter/exec_ctrl/s_cnt_ovf ), .A1(\shifter/exec_ctrl/n8040 ), 
    .C0(\shifter/s_en_r0 ), .B0(s_status_0), .A0(\shifter/exec_ctrl/n8042 ), 
    .M0(\shifter/exec_ctrl/n8845 ), .OFX0(\shifter/exec_ctrl/n8045 ));
  shifter_exec_ctrl_i6742_SLICE_560 \shifter/exec_ctrl/i6742/SLICE_560 ( 
    .D1(s_status_0), .C1(s_status_2), .B1(s_status_3), .A1(s_status_1), 
    .C0(s_status_2), .B0(s_status_3), .A0(s_status_1), 
    .M0(\shifter/exec_ctrl/s_tap_state_next_1 ), 
    .OFX0(\shifter/exec_ctrl/n8734 ));
  shifter_exec_ctrl_i6177_SLICE_561 \shifter/exec_ctrl/i6177/SLICE_561 ( 
    .C1(s_status_0), .B1(s_status_1), .A1(s_status_2), 
    .D0(\shifter/exec_ctrl/s_drscan_state_2 ), .C0(\shifter/exec_ctrl/n7737 ), 
    .B0(\shifter/exec_ctrl/n8844 ), .A0(n8279), .M0(\shifter/exec_ctrl/n4012 ), 
    .OFX0(\shifter/exec_ctrl/n7739 ));
  shifter_exec_ctrl_mux_537_i1_SLICE_562 
    \shifter/exec_ctrl/mux_537_i1/SLICE_562 ( .C1(\shifter/exec_ctrl/n3540 ), 
    .B1(\shifter/exec_ctrl/s_cnt_ovf ), .A1(s_status_3), 
    .B0(\shifter/exec_ctrl/n8045 ), .A0(s_status_1), 
    .M0(\shifter/exec_ctrl/n2099 ), .OFX0(\shifter/exec_ctrl/n2109 ));
  shifter_exec_ctrl_i6175_SLICE_563 \shifter/exec_ctrl/i6175/SLICE_563 ( 
    .D1(s_status_0), .C1(s_status_1), .B1(s_status_3), .A1(s_status_2), 
    .D0(s_status_2), .C0(\shifter/exec_ctrl/s_irpause_state_2 ), 
    .B0(\shifter/exec_ctrl/n8262 ), .A0(\shifter/exec_ctrl/n8254 ), 
    .M0(\shifter/exec_ctrl/n8240 ), .OFX0(\shifter/exec_ctrl/n7737 ));
  shifter_exec_ctrl_s_tap_state_next_3__I_0_i4_SLICE_564 
    \shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564 ( .C1(s_status_1), 
    .B1(s_status_2), .A1(s_status_3), .D0(s_status_0), .C0(s_status_1), 
    .B0(s_status_2), .A0(s_status_3), 
    .M0(\shifter/exec_ctrl/s_tap_state_next_0 ), 
    .OFX0(\shifter/exec_ctrl/n4_adj_1590 ));
  shifter_ckgen_i6496_SLICE_565 \shifter/ckgen/i6496/SLICE_565 ( 
    .D1(\shifter/ckgen/rtcktmo_N_629 ), .C1(\shifter/ckgen/s_rtck_r2 ), 
    .B1(\shifter/ckgen/s_rtck_r1 ), .A1(\shifter/ckgen/s_enabled ), 
    .D0(\shifter/ckgen/s_rtck_r2 ), .C0(\shifter/ckgen/s_rtck_r1 ), 
    .B0(\shifter/ckgen/s_tck_r0_N_638 ), .A0(\shifter/ckgen/s_enabled ), 
    .M0(\shifter/ckgen/s_tck_r0 ), .OFX0(\shifter/ckgen/mclk_c_enable_106 ));
  i5734_SLICE_566 \i5734/SLICE_566 ( .C1(s_tmr_10), .B1(s_cfg_10), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_10), 
    .A0(s_ckgen_div_10), .M0(q_15__N_80), .OFX0(n7397));
  i5740_SLICE_567 \i5740/SLICE_567 ( .C1(s_tmr_7), .B1(s_cfg_7), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_7), .A0(s_ckgen_div_7), 
    .M0(q_15__N_80), .OFX0(n7403));
  i5743_SLICE_568 \i5743/SLICE_568 ( .C1(s_tmr_4), .B1(s_cfg_4), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_4), .A0(s_ckgen_div_4), 
    .M0(q_15__N_80), .OFX0(n7406));
  i5792_SLICE_569 \i5792/SLICE_569 ( .C1(s_desc_hi_3), .B1(s_desc_lo_3), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_mem_rd_addr_3), 
    .A0(s_mem_wr_addr_3), .M0(q_15__N_80), .OFX0(n7455));
  i5797_SLICE_570 \i5797/SLICE_570 ( .C1(s_r3_0), .B1(s_irq_en_0), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_irq_st_0), .A0(s_status_0), 
    .M0(q_15__N_80), .OFX0(n7460));
  i5798_SLICE_571 \i5798/SLICE_571 ( .C1(s_tmr_0), .B1(s_cfg_0), 
    .A1(q_15__N_82), .C0(q_15__N_82), .B0(s_ckgen_rtdiv_0), .A0(s_ckgen_div_0), 
    .M1(q_15__N_78), .M0(q_15__N_80), .FXB(n7461), .FXA(n7460), .OFX0(n7461), 
    .OFX1(n7462));
  SLICE_572 SLICE_572( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M0(s_end_state_3), .OFX0(mux_177_Mux_0_0_0_0_f5a));
  SLICE_573 SLICE_573( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M1(s_end_state_1), .M0(s_end_state_3), 
    .FXB(mux_177_Mux_0_0_0_1_f5b), .FXA(mux_177_Mux_0_0_0_0_f5a), 
    .OFX0(mux_177_Mux_0_0_0_1_f5b), .OFX1(mux_177_Mux_0_0_0_f5a));
  SLICE_574 SLICE_574( .M1(s_end_state_0), .FXB(mux_177_Mux_0_0_1_f5b), 
    .FXA(mux_177_Mux_0_0_0_f5a), .OFX0(mux_177_Mux_0_0_1_0_f5a), 
    .OFX1(mux_177_Mux_0_0_f5a));
  SLICE_575 SLICE_575( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_1), .C0(s_status_3), .B0(s_status_2), .A0(s_status_1), 
    .M1(s_end_state_3), .M0(s_end_state_2), .FXB(mux_177_Mux_0_0_1_1_f5b), 
    .FXA(mux_177_Mux_0_0_1_0_f5a), .OFX0(mux_177_Mux_0_0_1_1_f5b), 
    .OFX1(mux_177_Mux_0_0_1_f5b));
  SLICE_576 SLICE_576( .D1(\shifter/exec_ctrl/insn_goto_N_1512 ), 
    .C1(\shifter/exec_ctrl/n5152 ), .B1(\shifter/exec_ctrl/s_insn_r0_9 ), 
    .A1(\shifter/exec_ctrl/s_insn_r0_1 ), .D0(s_end_state_2), .C0(s_status_2), 
    .B0(s_end_state_3), .A0(s_end_state_1), .M1(s_status_0), 
    .FXB(mux_177_Mux_0_1_f5b), .FXA(mux_177_Mux_0_0_f5a), 
    .OFX0(mux_177_Mux_0_1_0_0_f5a), .F1(s_end_state_1), .OFX1(s_goto_state_0));
  SLICE_577 SLICE_577( .M1(s_status_1), .FXB(mux_177_Mux_0_1_0_1_f5b), 
    .FXA(mux_177_Mux_0_1_0_0_f5a), .OFX0(mux_177_Mux_0_1_0_1_f5b), 
    .F1(GND_net), .OFX1(mux_177_Mux_0_1_0_f5a));
  SLICE_578 SLICE_578( .M1(s_end_state_0), .FXB(mux_177_Mux_0_1_1_f5b), 
    .FXA(mux_177_Mux_0_1_0_f5a), .OFX0(mux_177_Mux_0_1_1_0_f5a), .F1(VCC_net), 
    .OFX1(mux_177_Mux_0_1_f5b));
  SLICE_579 SLICE_579( .D1(s_status_3), .C1(s_status_2), .B1(s_end_state_2), 
    .A1(s_end_state_1), .D0(s_status_3), .C0(s_status_2), .B0(s_end_state_2), 
    .A0(s_end_state_1), .M1(s_status_1), .M0(s_end_state_3), 
    .FXB(mux_177_Mux_0_1_1_1_f5b), .FXA(mux_177_Mux_0_1_1_0_f5a), 
    .OFX0(mux_177_Mux_0_1_1_1_f5b), .OFX1(mux_177_Mux_0_1_1_f5b));
  SLICE_580 SLICE_580( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M0(s_end_state_3), .OFX0(mux_177_Mux_1_0_0_0_f5a));
  SLICE_581 SLICE_581( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M1(s_end_state_1), .M0(s_end_state_3), 
    .FXB(mux_177_Mux_1_0_0_1_f5b), .FXA(mux_177_Mux_1_0_0_0_f5a), 
    .OFX0(mux_177_Mux_1_0_0_1_f5b), .OFX1(mux_177_Mux_1_0_0_f5a));
  SLICE_582 SLICE_582( .B1(\shifter/exec_ctrl/s_tap_state_next_0 ), 
    .A1(\shifter/exec_ctrl/n8734 ), .M1(s_end_state_0), 
    .FXB(mux_177_Mux_1_0_1_f5b), .FXA(mux_177_Mux_1_0_0_f5a), 
    .OFX0(mux_177_Mux_1_0_1_0_f5a), .F1(\shifter/exec_ctrl/n8735 ), 
    .OFX1(mux_177_Mux_1_0_f5a));
  SLICE_583 SLICE_583( .C1(n8274), .B1(n8264), .A1(n8279), .A0(s_status_1), 
    .M1(s_status_2), .FXB(mux_177_Mux_1_0_1_1_f5b), 
    .FXA(mux_177_Mux_1_0_1_0_f5a), .OFX0(mux_177_Mux_1_0_1_1_f5b), .F1(n7227), 
    .OFX1(mux_177_Mux_1_0_1_f5b));
  SLICE_584 SLICE_584( .B1(s_status_1), .A1(s_end_state_2), .D0(s_status_3), 
    .C0(s_status_2), .B0(s_status_1), .A0(s_end_state_2), .M1(s_status_0), 
    .M0(s_end_state_3), .FXB(mux_177_Mux_1_1_f5b), .FXA(mux_177_Mux_1_0_f5a), 
    .OFX0(mux_177_Mux_1_1_0_0_f5a), .OFX1(s_goto_state_1));
  SLICE_585 SLICE_585( .D1(\shifter/exec_ctrl/s_insn_r0_3 ), 
    .C1(\shifter/exec_ctrl/n5152 ), .B1(\shifter/exec_ctrl/s_insn_r0_11 ), 
    .A1(\shifter/exec_ctrl/insn_goto_N_1512 ), .D0(s_end_state_3), 
    .C0(s_status_3), .B0(s_status_2), .A0(s_status_1), .M1(s_end_state_1), 
    .FXB(mux_177_Mux_1_1_0_1_f5b), .FXA(mux_177_Mux_1_1_0_0_f5a), 
    .OFX0(mux_177_Mux_1_1_0_1_f5b), .F1(s_end_state_3), 
    .OFX1(mux_177_Mux_1_1_0_f5a));
  SLICE_586 SLICE_586( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M1(s_end_state_0), .M0(s_end_state_3), 
    .FXB(mux_177_Mux_1_1_1_f5b), .FXA(mux_177_Mux_1_1_0_f5a), 
    .OFX0(mux_177_Mux_1_1_1_0_f5a), .OFX1(mux_177_Mux_1_1_f5b));
  SLICE_587 SLICE_587( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M1(s_end_state_1), .M0(s_end_state_3), 
    .FXB(mux_177_Mux_1_1_1_1_f5b), .FXA(mux_177_Mux_1_1_1_0_f5a), 
    .OFX0(mux_177_Mux_1_1_1_1_f5b), .OFX1(mux_177_Mux_1_1_1_f5b));
  SLICE_588 SLICE_588( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M0(s_end_state_3), .OFX0(mux_177_Mux_2_0_0_0_f5a));
  SLICE_589 SLICE_589( .D1(s_status_3), .C1(s_status_2), .B1(s_status_1), 
    .A1(s_end_state_2), .D0(s_status_3), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_end_state_2), .M1(s_end_state_1), .M0(s_end_state_3), 
    .FXB(mux_177_Mux_2_0_0_1_f5b), .FXA(mux_177_Mux_2_0_0_0_f5a), 
    .OFX0(mux_177_Mux_2_0_0_1_f5b), .OFX1(mux_177_Mux_2_0_0_f5a));
  SLICE_590 SLICE_590( .C1(q_15__N_82), .B1(s_desc_hi_0), .A1(s_desc_lo_0), 
    .M1(s_end_state_0), .FXB(mux_177_Mux_2_0_1_f5b), 
    .FXA(mux_177_Mux_2_0_0_f5a), .OFX0(mux_177_Mux_2_0_1_0_f5a), .F1(n9), 
    .OFX1(mux_177_Mux_2_0_f5a));
  SLICE_591 SLICE_591( .B1(s_addr1_1), .A1(s_addr1_0), .M1(s_status_1), 
    .FXB(mux_177_Mux_2_0_1_1_f5b), .FXA(mux_177_Mux_2_0_1_0_f5a), 
    .OFX0(mux_177_Mux_2_0_1_1_f5b), .F1(n11_adj_1656), 
    .OFX1(mux_177_Mux_2_0_1_f5b));
  SLICE_592 SLICE_592( .D1(s_status_3), .C1(s_end_state_1), .B1(s_end_state_2), 
    .A1(s_end_state_0), .D0(s_status_3), .C0(s_end_state_1), 
    .B0(s_end_state_2), .A0(s_end_state_0), .M1(s_status_0), 
    .M0(s_end_state_3), .FXB(mux_177_Mux_2_1_f5b), .FXA(mux_177_Mux_2_0_f5a), 
    .OFX0(mux_177_Mux_2_1_0_0_f5a), .OFX1(s_goto_state_2));
  SLICE_593 SLICE_593( .D1(q_15__N_70), .C1(q_15__N_68), 
    .B1(\cram_bus/addr_r/n8251 ), .A1(q_15__N_72), .M1(s_status_1), 
    .FXB(mux_177_Mux_2_1_0_1_f5b), .FXA(mux_177_Mux_2_1_0_0_f5a), 
    .OFX0(mux_177_Mux_2_1_0_1_f5b), .F1(\cram_bus/addr_r/n8231 ), 
    .OFX1(mux_177_Mux_2_1_0_f5a));
  SLICE_594 SLICE_594( .A1(s_cfg_10), .M1(s_status_2), .M0(fsmc_d_out_4), 
    .FXB(mux_177_Mux_2_1_1_f5b), .FXA(mux_177_Mux_2_1_0_f5a), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), .CLK(fsmc_clk_c), 
    .Q0(\cram_bus/reg_wr_fifo/s_data2_4 ), .F1(tp_trst_c), 
    .OFX1(mux_177_Mux_2_1_f5b));
  SLICE_595 SLICE_595( .D1(s_tmr_12), .C1(s_tmr_13), .B1(\tmr_r/n8210 ), 
    .A1(s_tmr_11), .M1(n8851), .FXB(mux_177_Mux_2_1_1_1_f5b), 
    .OFX0(mux_177_Mux_2_1_1_1_f5b), .F1(\tmr_r/n8197 ), 
    .OFX1(mux_177_Mux_2_1_1_f5b));
  shifter_SLICE_596 \shifter/SLICE_596 ( .D1(\shifter/tx/s_addr_r_3 ), 
    .C1(\shifter/tx/s_addr_r_2 ), .B1(\shifter/tx/n8198 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_1 ), 
    .C0(\shifter/tx/s_addr_r_0 ), .B0(\shifter/tx/n8249 ), 
    .A0(\shifter/s_msbf ), .M1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_2 ), 
    .M0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_1 ), .CE(mclk_c_enable_118), 
    .CLK(mclk_c), .F0(\shifter/tx/n8198 ), 
    .Q0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_2 ), .F1(\shifter/tx/s_sum_3 ), 
    .Q1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_3 ));
  shifter_SLICE_597 \shifter/SLICE_597 ( .D1(\shifter/tx/s_addr_r_6 ), 
    .C1(\shifter/tx/s_addr_r_5 ), .B1(\shifter/tx/n8192 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_8 ), 
    .C0(\shifter/tx/s_addr_r_7 ), .B0(\shifter/tx/n8190 ), 
    .A0(\shifter/s_msbf ), .M1(s_desc_data_7), .M0(s_desc_data_6), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/s_sum_8 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.len_6 ), .F1(\shifter/tx/n8190 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.len_7 ));
  shifter_SLICE_598 \shifter/SLICE_598 ( .D1(\shifter/tx/s_addr_r_0 ), 
    .C1(\shifter/tx/s_pos_3 ), .B1(\shifter/tx/n8260 ), 
    .A1(\shifter/s_msbf_r ), .D0(\shifter/tx/s_pos_2 ), 
    .C0(\shifter/tx/s_pos_1 ), .B0(\shifter/tx/n8290 ), 
    .A0(\shifter/s_msbf_r ), .M1(s_desc_data_9), .M0(s_desc_data_8), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n8260 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.len_8 ), .F1(\shifter/tx/s_sum_0 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.len_9 ));
  shifter_SLICE_599 \shifter/SLICE_599 ( .D1(\shifter/tx/s_addr_r_4 ), 
    .C1(\shifter/tx/s_addr_r_3 ), .B1(\shifter/tx/n8195 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_2 ), 
    .C0(\shifter/tx/s_addr_r_1 ), .B0(\shifter/tx/n8202 ), 
    .A0(\shifter/s_msbf ), .M1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_0 ), 
    .M0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_3 ), .CE(mclk_c_enable_118), 
    .CLK(mclk_c), .F0(\shifter/tx/n8195 ), 
    .Q0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_0 ), .F1(\shifter/tx/n8192 ), 
    .Q1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_1 ));
  shifter_SLICE_600 \shifter/SLICE_600 ( .D1(\shifter/tx/s_addr_r_8 ), 
    .C1(\shifter/tx/n8189 ), .B1(\shifter/s_msbf ), 
    .A1(\shifter/tx/s_addr_r_9 ), .D0(\shifter/tx/s_addr_r_7 ), 
    .C0(\shifter/tx/s_addr_r_6 ), .B0(\shifter/tx/n8191 ), 
    .A0(\shifter/s_msbf ), .M0(\shifter/rx/n8304 ), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n8189 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.pos_3 ), .F1(\shifter/tx/s_sum_9 ));
  shifter_SLICE_601 \shifter/SLICE_601 ( .D1(\shifter/tx/s_pos_3 ), 
    .C1(\shifter/tx/s_pos_2 ), .B1(\shifter/tx/n8271 ), 
    .A1(\shifter/s_msbf_r ), .D0(\shifter/tx/s_pos_1 ), 
    .C0(\shifter/tx/s_pos_0 ), .B0(\shifter/s_tx_shift_stb ), 
    .A0(\shifter/s_msbf_r ), .M1(\shifter/rx/n8324 ), .M0(s_desc_data_31), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n8271 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.msbf ), .F1(\shifter/tx/n8249 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.pos_0 ));
  shifter_SLICE_602 \shifter/SLICE_602 ( .D1(\shifter/tx/s_addr_r_3 ), 
    .C1(\shifter/tx/s_addr_r_2 ), .B1(\shifter/tx/n8198 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_5 ), 
    .C0(\shifter/tx/s_addr_r_4 ), .B0(\shifter/tx/n8193 ), 
    .A0(\shifter/s_msbf ), .CE(mclk_c_enable_118), .LSR(\shifter/rx/n6644 ), 
    .CLK(mclk_c), .F0(\shifter/tx/n8191 ), .Q0(\shifter/rx/s_op_fifo.empty ), 
    .F1(\shifter/tx/n8193 ));
  shifter_SLICE_603 \shifter/SLICE_603 ( .D1(\shifter/rx/bit_pos_2 ), 
    .C1(\shifter/bit_pos_1 ), .B1(\shifter/n8294 ), .A1(\shifter/op_msbf ), 
    .D0(\shifter/op_msbf ), .C0(\shifter/bit_pos_0 ), .B0(\shifter/tckn_stb ), 
    .A0(\shifter/shift_ctrl/s_rx_en_r1 ), .M1(\shifter/rx/s_op0.addr_5 ), 
    .M0(\shifter/rx/s_op0.addr_4 ), .CE(\shifter/mclk_c_enable_243 ), 
    .CLK(mclk_c), .F0(\shifter/n8294 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.addr_4 ), .F1(\shifter/rx/n8266 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.addr_5 ));
  shifter_SLICE_604 \shifter/SLICE_604 ( .D1(\shifter/rx/s_addr_r1_4 ), 
    .C1(\shifter/rx/s_addr_r1_3 ), .B1(\shifter/rx/n8230 ), 
    .A1(\shifter/op_msbf ), .D0(\shifter/rx/s_addr_r1_6 ), 
    .C0(\shifter/rx/s_addr_r1_5 ), .B0(\shifter/rx/n8219 ), 
    .A0(\shifter/op_msbf ), .M1(s_ckgen_div_4), .M0(s_ckgen_div_3), 
    .CLK(mclk_c), .F0(\shifter/rx/n8209 ), .Q0(\shifter/ckgen/s_div_hi_r0_2 ), 
    .F1(\shifter/rx/n8219 ), .Q1(\shifter/ckgen/s_div_hi_r0_3 ));
  shifter_SLICE_605 \shifter/SLICE_605 ( .D1(\shifter/rx/s_addr_r1_7 ), 
    .C1(\shifter/rx/s_addr_r1_6 ), .B1(\shifter/rx/n8215 ), 
    .A1(\shifter/op_msbf ), .D0(\shifter/rx/s_addr_r1_5 ), 
    .C0(\shifter/rx/s_addr_r1_4 ), .B0(\shifter/rx/n8226 ), 
    .A0(\shifter/op_msbf ), .M1(s_ckgen_div_6), .M0(s_ckgen_div_5), 
    .CLK(mclk_c), .F0(\shifter/rx/n8215 ), .Q0(\shifter/ckgen/s_div_hi_r0_4 ), 
    .F1(\shifter/rx/n8205 ), .Q1(\shifter/ckgen/s_div_hi_r0_5 ));
  shifter_SLICE_606 \shifter/SLICE_606 ( .D1(\shifter/rx/s_addr_r1_1 ), 
    .C1(\shifter/rx/s_addr_r1_0 ), .B1(\shifter/rx/n8257 ), 
    .A1(\shifter/op_msbf ), .D0(\shifter/rx/s_addr_r1_3 ), 
    .C0(\shifter/rx/s_addr_r1_2 ), .B0(\shifter/rx/n8234 ), 
    .A0(\shifter/op_msbf ), .M1(s_ckgen_div_8), .M0(s_ckgen_div_7), 
    .CLK(mclk_c), .F0(\shifter/rx/n8226 ), .Q0(\shifter/ckgen/s_div_hi_r0_6 ), 
    .F1(\shifter/rx/n8234 ), .Q1(\shifter/ckgen/s_div_hi_r0_7 ));
  shifter_SLICE_607 \shifter/SLICE_607 ( .D1(\shifter/rx/s_addr_r1_0 ), 
    .C1(\shifter/rx/bit_pos_3 ), .B1(\shifter/rx/n8266 ), 
    .A1(\shifter/op_msbf ), .D0(\shifter/rx/s_addr_r1_2 ), 
    .C0(\shifter/rx/s_addr_r1_1 ), .B0(\shifter/rx/n8241 ), 
    .A0(\shifter/op_msbf ), .M1(s_ckgen_div_2), .M0(s_ckgen_div_15), 
    .CLK(mclk_c), .F0(\shifter/rx/n8230 ), .Q0(\shifter/ckgen/s_div_hi_r0_14 ), 
    .F1(\shifter/rx/n8241 ), .Q1(\shifter/ckgen/s_div_hi_r0_1 ));
  shifter_SLICE_608 \shifter/SLICE_608 ( .D1(\shifter/rx/bit_pos_3 ), 
    .C1(\shifter/rx/bit_pos_2 ), .B1(\shifter/rx/n8275 ), 
    .A1(\shifter/op_msbf ), .D0(\shifter/bit_pos_1 ), .C0(\shifter/bit_pos_0 ), 
    .B0(\shifter/mclk_c_enable_204 ), .A0(\shifter/op_msbf ), 
    .M0(\shifter/io/s_tckn_r0_N_669 ), .CE(s_cfg_6), .CLK(mclk_c), 
    .F0(\shifter/rx/n8275 ), .Q0(\shifter/tckn_stb ), .F1(\shifter/rx/n8257 ));
  SLICE_609 SLICE_609( .C1(s_status_1), .B1(s_status_3), 
    .A1(\shifter/exec_ctrl/n8341 ), .D0(s_status_0), .C0(s_status_2), 
    .B0(s_status_3), .A0(s_end_state_0), .M1(s_reg_din_3), .M0(s_reg_din_2), 
    .CE(s_r3_wr_stb), .CLK(mclk_c), .F0(\shifter/exec_ctrl/n8341 ), 
    .Q0(s_r3_2), .F1(\shifter/exec_ctrl/n8343 ), .Q1(s_r3_3));
  SLICE_610 SLICE_610( .D1(n8279), .C1(\shifter/exec_ctrl/s_irscan_state_1 ), 
    .B1(s_status_0), .A1(\shifter/exec_ctrl/n8268 ), .D0(s_status_3), 
    .C0(s_status_0), .B0(s_status_1), .A0(s_status_2), 
    .M1(\cram_bus/s_cram_adv ), .M0(\cram_bus/s_cram_wr_addr_15 ), 
    .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/s_irscan_state_1 ), 
    .Q0(\cram_bus/s_cram_mem_rd_addr_15 ), .F1(\shifter/exec_ctrl/n508 ), 
    .Q1(\cram_bus/s_start_stb ));
  SLICE_611 SLICE_611( .D1(s_end_state_1), .C1(\shifter/exec_ctrl/n4016 ), 
    .B1(\shifter/exec_ctrl/s_drscan_state_3 ), .A1(\shifter/exec_ctrl/n8343 ), 
    .C0(s_end_state_3), .B0(s_end_state_2), .A0(s_end_state_1), 
    .M1(q_15__N_72), .M0(q_15__N_74), .CE(s_dbg_mem_rd), .CLK(fsmc_clk_c), 
    .F0(\shifter/exec_ctrl/n4016 ), .Q0(s_mem_rd_addr_5), 
    .F1(\shifter/exec_ctrl/n2979 ), .Q1(s_mem_rd_addr_6));
  SLICE_612 SLICE_612( .B1(led_1_c), .A1(s_1khz_stb), .D0(\led_run_drv/n8319 ), 
    .C0(\led_run_drv/n3628 ), .B0(\led_run_drv/s_trip_r1 ), 
    .A0(\led_run_drv/s_trip_r0 ), .M1(fsmc_d_out_1), .M0(fsmc_d_out_0), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), .CLK(fsmc_clk_c), 
    .F0(\led_run_drv/mclk_c_enable_59 ), .Q0(\cram_bus/reg_wr_fifo/s_data2_0 ), 
    .F1(\led_run_drv/n8319 ), .Q1(\cram_bus/reg_wr_fifo/s_data2_1 ));
  SLICE_613 SLICE_613( .D1(s_tmr_8), .C1(s_tmr_9), .B1(\tmr_r/n8233 ), 
    .A1(s_tmr_7), .D0(s_tmr_11), .C0(s_tmr_12), .B0(\tmr_r/n8216 ), 
    .A0(s_tmr_10), .M1(\shifter/rx/n8324 ), .M0(s_desc_data_31), 
    .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), .F0(\tmr_r/n8201 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.msbf ), .F1(\tmr_r/n8216 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.pos_0 ));
  SLICE_614 SLICE_614( .D1(s_tmr_7), .C1(s_tmr_8), .B1(\tmr_r/n8238 ), 
    .A1(s_tmr_6), .D0(s_tmr_10), .C0(s_tmr_11), .B0(\tmr_r/n8220 ), 
    .A0(s_tmr_9), .M1(\shifter/shift_ctrl/s_en_r2 ), .M0(\shifter/s_en_r1 ), 
    .CE(\shifter/tckn_stb ), .CLK(mclk_c), .F0(\tmr_r/n8206 ), 
    .Q0(\shifter/shift_ctrl/s_en_r2 ), .F1(\tmr_r/n8220 ), 
    .Q1(\shifter/shift_ctrl/s_rx_en_r1 ));
  SLICE_615 SLICE_615( .C1(s_tmr_0), .B1(s_tmr_cnt_en), .A1(s_1mhz_stb), 
    .D0(s_tmr_2), .C0(s_tmr_3), .B0(n8295), .A0(s_tmr_1), .M1(s_desc_data_7), 
    .M0(s_desc_data_6), .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), 
    .F0(\tmr_r/n8256 ), .Q0(\shifter/rx/s_op_fifo.buf_3_.len_6 ), .F1(n8295), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.len_7 ));
  SLICE_616 SLICE_616( .D1(s_tmr_6), .C1(s_tmr_7), .B1(\tmr_r/n8247 ), 
    .A1(s_tmr_5), .D0(s_tmr_9), .C0(s_tmr_10), .B0(\tmr_r/n8227 ), 
    .A0(s_tmr_8), .M1(s_pos_0_3_N_670_1), .M0(s_pos_0_3_N_670_0), 
    .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), .F0(\tmr_r/n8210 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.len_0 ), .F1(\tmr_r/n8227 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.len_1 ));
  SLICE_617 SLICE_617( .B1(s_tmr_cnt_en), .A1(s_1mhz_stb), .D0(s_tmr_1), 
    .C0(s_tmr_2), .B0(n8327), .A0(s_tmr_0), .M1(s_desc_data_9), 
    .M0(s_desc_data_8), .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), 
    .F0(\tmr_r/n8267 ), .Q0(\shifter/rx/s_op_fifo.buf_3_.len_8 ), .F1(n8327), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.len_9 ));
  SLICE_618 SLICE_618( .D1(s_tmr_0), .C1(s_tmr_1), .B1(s_tmr_cnt_en), 
    .A1(s_1mhz_stb), .D0(s_tmr_3), .C0(s_tmr_4), .B0(n8276), .A0(s_tmr_2), 
    .M1(s_desc_data_5), .M0(s_desc_data_4), .CE(\shifter/mclk_c_enable_207 ), 
    .CLK(mclk_c), .F0(\tmr_r/n8247 ), .Q0(\shifter/rx/s_op_fifo.buf_3_.len_4 ), 
    .F1(n8276), .Q1(\shifter/rx/s_op_fifo.buf_3_.len_5 ));
  SLICE_619 SLICE_619( .C1(s_addr2_1), .B1(s_addr2_0), .A1(s_addr2_3), 
    .D0(n1544), .C0(n7781), .B0(n24), .A0(n8312), .M1(fsmc_d_out_11), 
    .M0(fsmc_d_out_10), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), 
    .CLK(fsmc_clk_c), .F0(n8180), .Q0(\cram_bus/reg_wr_fifo/s_data2_10 ), 
    .F1(n7781), .Q1(\cram_bus/reg_wr_fifo/s_data2_11 ));
  SLICE_620 SLICE_620( .C1(n4959), .B1(\shifter/exec_ctrl/n8845 ), 
    .A1(\shifter/exec_ctrl/n8844 ), .D0(n8274), .C0(n8279), .B0(n8273), 
    .A0(n8264), .M1(fsmc_d_out_3), .M0(fsmc_d_out_2), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .CLK(fsmc_clk_c), 
    .F0(n4959), .Q0(\cram_bus/reg_wr_fifo/s_data1_2 ), 
    .F1(\shifter/exec_ctrl/n5152 ), .Q1(\cram_bus/reg_wr_fifo/s_data1_3 ));
  SLICE_621 SLICE_621( .C1(s_addr2_1), .B1(s_addr2_0), .A1(s_addr2_3), 
    .D0(n1544), .C0(n7796), .B0(n8312), .A0(n7185), .M1(fsmc_d_out_15), 
    .M0(fsmc_d_out_14), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), 
    .CLK(fsmc_clk_c), .F0(n8177), .Q0(\cram_bus/reg_wr_fifo/s_data2_14 ), 
    .F1(n7796), .Q1(\cram_bus/reg_wr_fifo/s_data2_15 ));
  SLICE_622 SLICE_622( .D1(n11_adj_1656), .C1(n1545), .B1(s_addr0_0), 
    .A1(s_addr0_1), .D0(n1544), .C0(n7790), .B0(n20_adj_1655), .A0(n8312), 
    .M1(fsmc_d_out_13), .M0(fsmc_d_out_12), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), .CLK(fsmc_clk_c), 
    .F0(n8178), .Q0(\cram_bus/reg_wr_fifo/s_data2_12 ), .F1(n20_adj_1655), 
    .Q1(\cram_bus/reg_wr_fifo/s_data2_13 ));
  SLICE_623 SLICE_623( .B1(s_cram_next_st_1__N_24_c_0), 
    .A1(\cram_bus/s_cram_adi ), .D0(q_15__N_52), .C0(q_15__N_56), 
    .B0(\cram_bus/n8325 ), .A0(\cram_bus/s_cram_wr_addr_15 ), 
    .M1(s_reg_din_13), .M0(s_reg_din_12), .CE(s_ckgen_rtdiv_wr_stb), 
    .CLK(mclk_c), .F0(s_ptr_mem_wr_stb), .Q0(s_ckgen_rtdiv_12), 
    .F1(\cram_bus/n8325 ), .Q1(s_ckgen_rtdiv_13));
  SLICE_624 SLICE_624( .C1(\cram_bus/reg_wr_fifo/s_sel_in_1 ), 
    .B1(\cram_bus/n8287 ), .A1(\cram_bus/reg_wr_fifo/s_sel_in_0 ), 
    .D0(\cram_bus/s_cram_wr_addr_15 ), .C0(s_cfg_6), 
    .B0(s_cram_next_st_1__N_24_c_0), .A0(\cram_bus/s_cram_adi ), 
    .M1(s_reg_din_15), .M0(s_reg_din_14), .CE(s_ckgen_rtdiv_wr_stb), 
    .CLK(mclk_c), .F0(\cram_bus/n8287 ), .Q0(s_ckgen_rtdiv_14), 
    .F1(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), .Q1(s_ckgen_rtdiv_15));
  SLICE_625 SLICE_625( .C1(n1544), .B1(s_addr2_2), .A1(n8311), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_addr1_2 ), 
    .A0(\cram_bus/reg_wr_fifo/s_addr0_2 ), .M1(s_reg_din_5), .M0(s_reg_din_4), 
    .CE(s_ckgen_rtdiv_wr_stb), .CLK(mclk_c), .F0(n8311), .Q0(s_ckgen_rtdiv_4), 
    .F1(n8284), .Q1(s_ckgen_rtdiv_5));
  SLICE_626 SLICE_626( .C1(q_15__N_80), .B1(\cram_bus/s_cram_adi ), 
    .A1(q_15__N_82), .D0(q_15__N_76), .C0(q_15__N_74), 
    .B0(\cram_bus/addr_r/n8285 ), .A0(q_15__N_78), .M1(s_reg_din_7), 
    .M0(s_reg_din_6), .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), 
    .F0(\cram_bus/addr_r/n8251 ), .Q0(s_ckgen_div_6), 
    .F1(\cram_bus/addr_r/n8285 ), .Q1(s_ckgen_div_7));
  SLICE_627 SLICE_627( .D1(q_15__N_66), .C1(q_15__N_64), 
    .B1(\cram_bus/addr_r/n8236 ), .A1(q_15__N_68), 
    .D0(\cram_bus/addr_r/q_15__N_60 ), .C0(\cram_bus/addr_r/q_15__N_58 ), 
    .B0(\cram_bus/addr_r/n8218 ), .A0(q_15__N_62), .M1(s_reg_din_11), 
    .M0(s_reg_din_10), .CE(s_ckgen_rtdiv_wr_stb), .CLK(mclk_c), 
    .F0(\cram_bus/addr_r/n8204 ), .Q0(s_ckgen_rtdiv_10), 
    .F1(\cram_bus/addr_r/n8218 ), .Q1(s_ckgen_rtdiv_11));
  SLICE_628 SLICE_628( .D1(q_15__N_68), .C1(q_15__N_66), 
    .B1(\cram_bus/addr_r/n8244 ), .A1(q_15__N_70), .D0(q_15__N_62), 
    .C0(\cram_bus/addr_r/q_15__N_60 ), .B0(\cram_bus/addr_r/n8223 ), 
    .A0(q_15__N_64), .M1(s_reg_din_3), .M0(s_reg_din_2), 
    .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), .F0(\cram_bus/addr_r/n8208 ), 
    .Q0(s_ckgen_div_2), .F1(\cram_bus/addr_r/n8223 ), .Q1(s_ckgen_div_3));
  SLICE_629 SLICE_629( .D1(\cram_bus/addr_r/q_15__N_58 ), .C1(q_15__N_56), 
    .B1(\cram_bus/addr_r/n8213 ), .A1(\cram_bus/addr_r/q_15__N_60 ), 
    .D0(q_15__N_64), .C0(q_15__N_62), .B0(\cram_bus/addr_r/n8231 ), 
    .A0(q_15__N_66), .M1(s_reg_din_5), .M0(s_reg_din_4), 
    .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), .F0(\cram_bus/addr_r/n8213 ), 
    .Q0(s_ckgen_div_4), .F1(\cram_bus/addr_r/n8200 ), .Q1(s_ckgen_div_5));
  SLICE_630 SLICE_630( .D1(q_15__N_72), .C1(q_15__N_70), 
    .B1(\cram_bus/addr_r/n8259 ), .A1(q_15__N_74), .D0(q_15__N_78), 
    .C0(q_15__N_76), .B0(\cram_bus/addr_r/n8313 ), .A0(q_15__N_80), 
    .M1(s_reg_din_9), .M0(s_reg_din_8), .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), 
    .F0(\cram_bus/addr_r/n8259 ), .Q0(s_ckgen_div_8), 
    .F1(\cram_bus/addr_r/n8236 ), .Q1(s_ckgen_div_9));
  SLICE_631 SLICE_631( .D1(q_15__N_74), .C1(q_15__N_72), 
    .B1(\cram_bus/addr_r/n8270 ), .A1(q_15__N_76), .D0(q_15__N_80), 
    .C0(q_15__N_78), .B0(\cram_bus/s_cram_adi ), .A0(q_15__N_82), 
    .M1(s_reg_din_1), .M0(s_reg_din_0), .CE(s_ckgen_rtdiv_wr_stb), 
    .CLK(mclk_c), .F0(\cram_bus/addr_r/n8270 ), .Q0(s_ckgen_rtdiv_0), 
    .F1(\cram_bus/addr_r/n8244 ), .Q1(s_ckgen_rtdiv_1));
  SLICE_632 SLICE_632( .C1(n7217), .B1(out_get_N_312), .A1(s_tap_busy), 
    .D0(n8286), .C0(n1543), .B0(s_addr3_1), .A0(n7215), .M1(fsmc_d_out_13), 
    .M0(fsmc_d_out_12), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), 
    .CLK(fsmc_clk_c), .F0(n7217), .Q0(\cram_bus/reg_wr_fifo/s_data1_12 ), 
    .F1(\shifter/exec_ctrl/busy_N_1509 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data1_13 ));
  SLICE_633 SLICE_633( .D1(\cklgen_1khz/s_count_0 ), 
    .C1(\cklgen_1khz/s_count_3 ), .B1(\cklgen_1khz/s_count_5 ), 
    .A1(\cklgen_1khz/s_count_8 ), .D0(\cklgen_1khz/s_count_9 ), 
    .C0(\cklgen_1khz/s_count_6 ), .B0(\cklgen_1khz/n18 ), 
    .A0(\cklgen_1khz/s_count_7 ), .M1(s_reg_din_13), .M0(s_reg_din_12), 
    .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), .F0(\cklgen_1khz/n20 ), 
    .Q0(s_ckgen_div_12), .F1(\cklgen_1khz/n18 ), .Q1(s_ckgen_div_13));
  SLICE_634 SLICE_634( .D1(\cklgen_1khz/s_count_9 ), .C1(\cklgen_1khz/n7199 ), 
    .B1(\cklgen_1khz/s_count_4 ), .A1(\cklgen_1khz/n7169 ), 
    .D0(\cklgen_1khz/s_count_3 ), .C0(\cklgen_1khz/n8 ), 
    .B0(\cklgen_1khz/s_count_2 ), .A0(s_1mhz_stb), .M1(s_reg_din_1), 
    .M0(s_reg_din_0), .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), 
    .F0(\cklgen_1khz/n4050 ), .Q0(s_ckgen_div_0), .F1(\cklgen_1khz/n8 ), 
    .Q1(s_ckgen_div_1));
  SLICE_635 SLICE_635( .D1(s_addr3_2), .C1(s_addr3_1), .B1(s_addr3_0), 
    .A1(s_addr3_3), .D0(n1543), .C0(n7128), .B0(n7863), .A0(out_get_N_312), 
    .M1(fsmc_d_out_9), .M0(fsmc_d_out_8), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(s_irq_en_wr_stb), .Q0(\cram_bus/reg_wr_fifo/s_data0_8 ), .F1(n7128), 
    .Q1(\cram_bus/reg_wr_fifo/s_data0_9 ));
  SLICE_636 SLICE_636( .D1(n1543), .C1(n7149), .B1(n7860), .A1(out_get_N_312), 
    .D0(s_addr3_1), .C0(s_addr3_2), .B0(s_addr3_0), .A0(s_addr3_3), 
    .M1(fsmc_d_out_11), .M0(fsmc_d_out_10), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(n7149), .Q0(\cram_bus/reg_wr_fifo/s_data0_10 ), .F1(s_r3_wr_stb), 
    .Q1(\cram_bus/reg_wr_fifo/s_data0_11 ));
  SLICE_637 SLICE_637( .B1(\led_con_drv/s_trip_r1 ), 
    .A1(\led_con_drv/s_trip_r0 ), .D0(\led_con_drv/n8321 ), 
    .C0(\led_con_drv/n3627 ), .B0(led_2_c), .A0(s_1khz_stb), .M1(fsmc_d_out_7), 
    .M0(fsmc_d_out_6), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), 
    .CLK(fsmc_clk_c), .F0(\led_con_drv/mclk_c_enable_29 ), 
    .Q0(\cram_bus/reg_wr_fifo/s_data1_6 ), .F1(\led_con_drv/n8321 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data1_7 ));
  SLICE_638 SLICE_638( .C1(\cklgen_1mhz/s_count_0 ), 
    .B1(\cklgen_1mhz/s_count_4 ), .A1(\cklgen_1mhz/s_count_3 ), 
    .D0(\cklgen_1mhz/s_count_2 ), .C0(\cklgen_1mhz/s_count_5 ), 
    .B0(\cklgen_1mhz/n6527 ), .A0(\cklgen_1mhz/s_count_1 ), .M1(s_reg_din_15), 
    .M0(s_reg_din_14), .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), 
    .F0(\cklgen_1mhz/n4033 ), .Q0(s_ckgen_div_14), .F1(\cklgen_1mhz/n6527 ), 
    .Q1(s_ckgen_div_15));
  shifter_SLICE_639 \shifter/SLICE_639 ( .C1(\shifter/s_en_r1 ), 
    .B1(\shifter/tckn_stb ), .A1(\shifter/s_en_r0 ), .C0(\shifter/tx/s_pos_0 ), 
    .B0(\shifter/s_tx_shift_stb ), .A0(\shifter/s_msbf_r ), 
    .M1(\shifter/rx/n8329 ), .M0(\shifter/rx/n8328 ), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n8290 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.pos_1 ), .F1(\shifter/s_tx_shift_stb ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.pos_2 ));
  shifter_SLICE_640 \shifter/SLICE_640 ( .D1(\shifter/shift_ctrl/bit_cnt_9 ), 
    .C1(\shifter/tckn_stb ), .B1(\shifter/shift_ctrl/bit_cnt_8 ), 
    .A1(\shifter/shift_ctrl/n8235 ), .D0(s_cfg_6), 
    .C0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_0 ), .B0(\shifter/s_en_r1 ), 
    .A0(\shifter/n8217 ), .M1(s_desc_data_5), .M0(s_desc_data_4), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .F0(\shifter/mclk_c_enable_243 ), .Q0(\shifter/rx/s_op_fifo.buf_0_.len_4 ), 
    .F1(\shifter/n8217 ), .Q1(\shifter/rx/s_op_fifo.buf_0_.len_5 ));
  shifter_SLICE_641 \shifter/SLICE_641 ( .D1(\shifter/s_offs_r_1 ), 
    .C1(\shifter/shift_ctrl/s_en_r2 ), .B1(\shifter/n8217 ), 
    .A1(\shifter/s_offs_r_0 ), .D0(\shifter/shift_ctrl/s_offs_r_3 ), 
    .C0(\shifter/shift_ctrl/s_offs_r_4 ), .B0(\shifter/shift_ctrl/s_offs_r_2 ), 
    .A0(\shifter/shift_ctrl/n8207 ), .M1(\shifter/rx/n8324 ), 
    .M0(s_desc_data_31), .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/n8196 ), .Q0(\shifter/rx/s_op_fifo.buf_1_.msbf ), 
    .F1(\shifter/shift_ctrl/n8207 ), .Q1(\shifter/rx/s_op_fifo.buf_1_.pos_0 ));
  shifter_SLICE_642 \shifter/SLICE_642 ( .C1(\shifter/shift_ctrl/bit_cnt_2 ), 
    .B1(\shifter/shift_ctrl/bit_cnt_1 ), .A1(\shifter/shift_ctrl/bit_cnt_0 ), 
    .D0(\shifter/shift_ctrl/bit_cnt_4 ), .C0(\shifter/shift_ctrl/bit_cnt_5 ), 
    .B0(\shifter/shift_ctrl/bit_cnt_3 ), .A0(\shifter/shift_ctrl/n8281 ), 
    .M1(\shifter/rx/s_op0.addr_5 ), .M0(\shifter/rx/s_op0.addr_4 ), 
    .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/n8250 ), .Q0(\shifter/rx/s_op_fifo.buf_1_.addr_4 ), 
    .F1(\shifter/shift_ctrl/n8281 ), .Q1(\shifter/rx/s_op_fifo.buf_1_.addr_5 ));
  shifter_SLICE_643 \shifter/SLICE_643 ( .D1(\shifter/shift_ctrl/s_offs_r_2 ), 
    .C1(\shifter/shift_ctrl/s_offs_r_3 ), .B1(\shifter/s_offs_r_1 ), 
    .A1(\shifter/n8212 ), .D0(\shifter/s_offs_r_0 ), 
    .C0(\shifter/shift_ctrl/s_en_r2 ), .B0(\shifter/shift_ctrl/n8222 ), 
    .A0(\shifter/tckn_stb ), .M1(\shifter/rx/s_op0.addr_9 ), 
    .M0(\shifter/rx/s_op0.addr_8 ), .CE(\shifter/mclk_c_enable_231 ), 
    .CLK(mclk_c), .F0(\shifter/n8212 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.addr_8 ), .F1(\shifter/shift_ctrl/n8199 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.addr_9 ));
  shifter_SLICE_644 \shifter/SLICE_644 ( .D1(\shifter/shift_ctrl/bit_cnt_6 ), 
    .C1(\shifter/shift_ctrl/bit_cnt_7 ), .B1(\shifter/shift_ctrl/bit_cnt_5 ), 
    .A1(\shifter/shift_ctrl/n8258 ), .D0(\shifter/shift_ctrl/bit_cnt_3 ), 
    .C0(\shifter/shift_ctrl/bit_cnt_4 ), .B0(\shifter/shift_ctrl/bit_cnt_2 ), 
    .A0(\shifter/shift_ctrl/n8305 ), .M1(\shifter/rx/s_op0.addr_3 ), 
    .M0(\shifter/rx/s_op0.addr_2 ), .CE(\shifter/mclk_c_enable_231 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/n8258 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.addr_2 ), .F1(\shifter/shift_ctrl/n8235 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.addr_3 ));
  shifter_SLICE_645 \shifter/SLICE_645 ( .D1(\shifter/shift_ctrl/bit_cnt_5 ), 
    .C1(\shifter/shift_ctrl/bit_cnt_6 ), .B1(\shifter/shift_ctrl/bit_cnt_4 ), 
    .A1(\shifter/shift_ctrl/n8269 ), .D0(\shifter/shift_ctrl/bit_cnt_8 ), 
    .C0(\shifter/shift_ctrl/bit_cnt_9 ), .B0(\shifter/shift_ctrl/bit_cnt_7 ), 
    .A0(\shifter/shift_ctrl/n8243 ), .M1(\shifter/rx/s_op0.addr_7 ), 
    .M0(\shifter/rx/s_op0.addr_6 ), .CE(\shifter/mclk_c_enable_231 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/n8222 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.addr_6 ), .F1(\shifter/shift_ctrl/n8243 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.addr_7 ));
  shifter_SLICE_646 \shifter/SLICE_646 ( .D1(\shifter/shift_ctrl/s_offs_r_4 ), 
    .C1(\shifter/shift_ctrl/s_offs_r_5 ), .B1(\shifter/shift_ctrl/s_offs_r_3 ), 
    .A1(\shifter/shift_ctrl/n8203 ), .C0(\shifter/shift_ctrl/s_offs_r_2 ), 
    .B0(\shifter/s_offs_r_1 ), .A0(\shifter/n8212 ), .M1(\shifter/rx/n8329 ), 
    .M0(\shifter/rx/n8328 ), .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/n8203 ), .Q0(\shifter/rx/s_op_fifo.buf_1_.pos_1 ), 
    .F1(\shifter/shift_ctrl/n8194 ), .Q1(\shifter/rx/s_op_fifo.buf_1_.pos_2 ));
  shifter_SLICE_647 \shifter/SLICE_647 ( .D1(\shifter/rx/s_count_r_2 ), 
    .C1(\shifter/rx/s_count_r_3 ), .B1(\shifter/s_count_r_1 ), 
    .A1(\shifter/n8289 ), .C0(\shifter/s_count_r_0 ), .B0(\shifter/tckn_stb ), 
    .A0(\shifter/shift_ctrl/s_rx_en_r1 ), .M0(\shifter/rx/n8304 ), 
    .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), .F0(\shifter/n8289 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.pos_3 ), .F1(\shifter/rx/n8253 ));
  shifter_SLICE_648 \shifter/SLICE_648 ( .D1(\shifter/s_offs_r_1 ), 
    .C1(\shifter/shift_ctrl/s_offs_r_3 ), .B1(\shifter/shift_ctrl/s_offs_r_5 ), 
    .A1(\shifter/shift_ctrl/s_offs_r_2 ), .D0(\shifter/shift_ctrl/n14 ), 
    .C0(\shifter/shift_ctrl/n13 ), .B0(\shifter/shift_ctrl/s_en_r2 ), 
    .A0(\shifter/n8217 ), .M1(s_pos_0_3_N_670_3), .M0(s_pos_0_3_N_670_2), 
    .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), .F0(\shifter/s_offs_inc ), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.len_2 ), .F1(\shifter/shift_ctrl/n14 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.len_3 ));
  shifter_SLICE_649 \shifter/SLICE_649 ( .B1(\shifter/bit_pos_0 ), 
    .A1(\shifter/bit_pos_1 ), .D0(\shifter/rx/n8296 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/n8300 ), .A0(\shifter/mclk_c_enable_204 ), 
    .M1(\shifter/ckgen/s_div_hi_r0_12 ), .M0(\shifter/ckgen/s_div_hi_r0_11 ), 
    .CLK(mclk_c), .F0(\shifter/rx/mclk_c_enable_258 ), 
    .Q0(\shifter/ckgen/s_div_hi_11 ), .F1(\shifter/rx/n8300 ), 
    .Q1(\shifter/ckgen/s_div_hi_12 ));
  shifter_SLICE_650 \shifter/SLICE_650 ( .B1(\shifter/rx/bit_pos_3 ), 
    .A1(\shifter/rx/bit_pos_2 ), .D0(\shifter/rx/n8297 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/n8300 ), .A0(\shifter/mclk_c_enable_204 ), 
    .M1(\shifter/ckgen/s_div_hi_r0_14 ), .M0(\shifter/ckgen/s_div_hi_r0_13 ), 
    .CLK(mclk_c), .F0(\shifter/rx/mclk_c_enable_254 ), 
    .Q0(\shifter/ckgen/s_div_hi_13 ), .F1(\shifter/rx/n8297 ), 
    .Q1(\shifter/ckgen/s_div_hi_14 ));
  shifter_SLICE_651 \shifter/SLICE_651 ( .B1(\shifter/rx/bit_pos_3 ), 
    .A1(\shifter/rx/bit_pos_2 ), .D0(\shifter/rx/n8299 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/n8300 ), .A0(\shifter/mclk_c_enable_204 ), 
    .M1(\shifter/ckgen/s_div_hi_r0_3 ), .M0(\shifter/ckgen/s_div_hi_r0_2 ), 
    .CLK(mclk_c), .F0(\shifter/rx/mclk_c_enable_250 ), 
    .Q0(\shifter/ckgen/s_div_hi_2 ), .F1(\shifter/rx/n8299 ), 
    .Q1(\shifter/ckgen/s_div_hi_3 ));
  shifter_SLICE_652 \shifter/SLICE_652 ( .B1(\shifter/bit_pos_1 ), 
    .A1(\shifter/bit_pos_0 ), .D0(\shifter/rx/n8296 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/n8301 ), .A0(\shifter/mclk_c_enable_204 ), 
    .M1(\shifter/ckgen/s_div_hi_r0_5 ), .M0(\shifter/ckgen/s_div_hi_r0_4 ), 
    .CLK(mclk_c), .F0(\shifter/rx/mclk_c_enable_257 ), 
    .Q0(\shifter/ckgen/s_div_hi_4 ), .F1(\shifter/rx/n8301 ), 
    .Q1(\shifter/ckgen/s_div_hi_5 ));
  shifter_SLICE_653 \shifter/SLICE_653 ( .B1(\shifter/bit_pos_1 ), 
    .A1(\shifter/bit_pos_0 ), .D0(\shifter/rx/n8296 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/n8302 ), .A0(\shifter/mclk_c_enable_204 ), 
    .M1(\shifter/ckgen/s_div_hi_r0_7 ), .M0(\shifter/ckgen/s_div_hi_r0_6 ), 
    .CLK(mclk_c), .F0(\shifter/rx/mclk_c_enable_256 ), 
    .Q0(\shifter/ckgen/s_div_hi_6 ), .F1(\shifter/rx/n8302 ), 
    .Q1(\shifter/ckgen/s_div_hi_7 ));
  shifter_SLICE_654 \shifter/SLICE_654 ( .B1(\shifter/rx/bit_pos_3 ), 
    .A1(\shifter/rx/bit_pos_2 ), .D0(\shifter/rx/n8300 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/n8306 ), .A0(\shifter/mclk_c_enable_204 ), 
    .M1(\shifter/ckgen/s_div_hi_r0_9 ), .M0(\shifter/ckgen/s_div_hi_r0_8 ), 
    .CLK(mclk_c), .F0(\shifter/rx/mclk_c_enable_246 ), 
    .Q0(\shifter/ckgen/s_div_hi_8 ), .F1(\shifter/rx/n8306 ), 
    .Q1(\shifter/ckgen/s_div_hi_9 ));
  shifter_rx_SLICE_655 \shifter/rx/SLICE_655 ( .D1(\shifter/rx/s_count_r_4 ), 
    .C1(\shifter/rx/s_count_r_5 ), .B1(\shifter/rx/s_count_r_3 ), 
    .A1(\shifter/rx/n8261 ), .D0(\shifter/s_count_r_1 ), 
    .C0(\shifter/rx/s_count_r_2 ), .B0(\shifter/s_count_r_0 ), 
    .A0(\shifter/mclk_c_enable_204 ), .M1(\shifter/rx/s_addr_r1_3 ), 
    .M0(\shifter/rx/s_addr_r1_2 ), .CE(\shifter/mclk_c_enable_204 ), 
    .CLK(mclk_c), .F0(\shifter/rx/n8261 ), .Q0(s_rx_mem_addr_2), 
    .F1(\shifter/rx/n8237 ), .Q1(s_rx_mem_addr_3));
  shifter_SLICE_656 \shifter/SLICE_656 ( 
    .C1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_3 ), 
    .B1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_2 ), 
    .A1(\shifter/rx/s_op_fifo.tail_1 ), .D0(\shifter/rx/n4_adj_1591 ), 
    .C0(\shifter/rx/s_op_fifo.head_0 ), .B0(\shifter/rx/s_op_fifo.tail_0 ), 
    .A0(\shifter/rx/fifo_get ), .M1(s_ckgen_div_14), .M0(s_ckgen_div_13), 
    .CLK(mclk_c), .F0(\shifter/rx/n6644 ), .Q0(\shifter/ckgen/s_div_hi_r0_12 ), 
    .F1(\shifter/rx/n4_adj_1591 ), .Q1(\shifter/ckgen/s_div_hi_r0_13 ));
  SLICE_657 SLICE_657( .C1(\shifter/exec_ctrl/n2159 ), 
    .B1(\shifter/exec_ctrl/n8331 ), .A1(\shifter/exec_ctrl/n182 ), 
    .D0(\shifter/exec_ctrl/n8845 ), .C0(s_status_2), .B0(s_status_1), 
    .A0(s_status_0), .M1(s_desc_data_11), .M0(s_desc_data_10), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .F0(\shifter/exec_ctrl/n3540 ), 
    .Q0(s_desc_lo_10), .F1(\shifter/exec_ctrl/n8845 ), .Q1(s_desc_lo_11));
  SLICE_658 SLICE_658( .D1(\shifter/exec_ctrl/mtms_N_1486_8 ), 
    .C1(\shifter/exec_ctrl/s_tap_state_next_0 ), 
    .B1(\shifter/exec_ctrl/s_tap_state_next_1 ), 
    .A1(\shifter/exec_ctrl/n4_adj_1590 ), .D0(s_status_3), .C0(s_status_2), 
    .B0(s_status_1), .A0(s_status_0), .M1(s_reg_din_15), .M0(s_reg_din_14), 
    .CE(s_r3_wr_stb), .CLK(mclk_c), .F0(\shifter/exec_ctrl/mtms_N_1486_8 ), 
    .Q0(s_r3_14), .F1(\shifter/exec_ctrl/n8052 ), .Q1(s_r3_15));
  shifter_SLICE_659 \shifter/SLICE_659 ( .D1(\shifter/exec_ctrl/n5 ), 
    .C1(\shifter/exec_ctrl/n8246 ), .B1(\shifter/exec_ctrl/n8262 ), 
    .A1(\shifter/exec_ctrl/n8240 ), .D0(\shifter/exec_ctrl/s_insn_r0_15 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_13 ), 
    .B0(\shifter/exec_ctrl/s_insn_r0_14 ), 
    .A0(\shifter/exec_ctrl/s_insn_r0_12 ), .M0(\shifter/ckgen/s_tcken_r1 ), 
    .CE(\shifter/ckgen/mclk_c_enable_95 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/n8262 ), .Q0(\shifter/ckgen/s_enabled ), 
    .F1(\shifter/exec_ctrl/n4012 ));
  SLICE_660 SLICE_660( .D1(\shifter/exec_ctrl/n182 ), 
    .C1(\shifter/exec_ctrl/n2159 ), .B1(\shifter/exec_ctrl/n8331 ), 
    .A1(\shifter/exec_ctrl/n8330 ), .C0(\shifter/exec_ctrl/n20 ), 
    .B0(\shifter/exec_ctrl/n19 ), .A0(\shifter/exec_ctrl/n7550 ), 
    .M1(q_15__N_72), .M0(q_15__N_74), .CE(s_dbg_mem_wr), .CLK(fsmc_clk_c), 
    .F0(\shifter/exec_ctrl/n182 ), .Q0(s_mem_wr_addr_5), .F1(n8274), 
    .Q1(s_mem_wr_addr_6));
  SLICE_661 SLICE_661( .D1(\shifter/exec_ctrl/n8849 ), 
    .C1(\shifter/exec_ctrl/n8331 ), .B1(\shifter/exec_ctrl/n2159 ), 
    .A1(\shifter/exec_ctrl/n8330 ), .C0(\shifter/exec_ctrl/s_insn_r0_14 ), 
    .B0(\shifter/exec_ctrl/s_insn_r0_13 ), 
    .A0(\shifter/exec_ctrl/s_insn_r0_12 ), .M1(s_reg_din_7), .M0(s_reg_din_6), 
    .CE(s_r3_wr_stb), .CLK(mclk_c), .F0(\shifter/exec_ctrl/n8849 ), 
    .Q0(s_r3_6), .F1(\shifter/exec_ctrl/n8332 ), .Q1(s_r3_7));
  SLICE_662 SLICE_662( .C1(n8279), .B1(\shifter/exec_ctrl/n8845 ), 
    .A1(\shifter/exec_ctrl/n8844 ), .C0(\shifter/exec_ctrl/n2159 ), 
    .B0(\shifter/exec_ctrl/n8330 ), .A0(\shifter/exec_ctrl/n182 ), 
    .M0(q_15__N_64), .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n8844 ), 
    .Q0(n2578), .F1(\shifter/exec_ctrl/n8239 ));
  SLICE_663 SLICE_663( .D1(s_status_3), .C1(s_status_2), .B1(s_end_state_3), 
    .A1(s_end_state_2), .D0(\shifter/exec_ctrl/insn_goto_N_1512 ), 
    .C0(\shifter/exec_ctrl/n5152 ), .B0(\shifter/exec_ctrl/s_insn_r0_10 ), 
    .A0(\shifter/exec_ctrl/s_insn_r0_2 ), .M1(\cram_bus/addr_r/q_1__N_137 ), 
    .M0(\cram_bus/addr_r/q_1__N_137 ), .CLK(fsmc_clk_c), .F0(s_end_state_2), 
    .Q0(n8856), .F1(\shifter/exec_ctrl/n7161 ), .Q1(n8857));
  SLICE_664 SLICE_664( .D1(\shifter/exec_ctrl/n7189 ), .C1(s_status_3), 
    .B1(\shifter/exec_ctrl/n8298 ), .A1(s_status_0), .B0(s_end_state_1), 
    .A0(s_end_state_0), .M1(q_15__N_76), .M0(q_15__N_78), .CE(s_dbg_mem_wr), 
    .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n7189 ), .Q0(s_mem_wr_addr_3), 
    .F1(\shifter/exec_ctrl/n126 ), .Q1(s_mem_wr_addr_4));
  shifter_SLICE_665 \shifter/SLICE_665 ( .D1(s_status_1), .C1(s_status_0), 
    .B1(s_end_state_1), .A1(s_end_state_0), 
    .D0(\shifter/exec_ctrl/insn_goto_N_1512 ), .C0(\shifter/exec_ctrl/n5152 ), 
    .B0(\shifter/exec_ctrl/s_insn_r0_8 ), .A0(\shifter/exec_ctrl/s_insn_r0_0 ), 
    .M0(\shifter/ckgen/s_tcki_r0 ), .LSR(\shifter/ckgen/s_enabled ), 
    .CLK(mclk_c), .F0(s_end_state_0), .Q0(\shifter/ckgen/s_tcki_r1 ), 
    .F1(\shifter/exec_ctrl/n7191 ));
  SLICE_666 SLICE_666( .D1(n8274), .C1(\shifter/exec_ctrl/s_drpause_state_1 ), 
    .B1(\shifter/exec_ctrl/s_irpause_state_1 ), .A1(n8279), .D0(s_status_3), 
    .C0(s_status_0), .B0(s_status_1), .A0(s_status_2), .M1(q_15__N_52), 
    .M0(q_15__N_56), .CLK(fsmc_clk_c), 
    .F0(\shifter/exec_ctrl/s_drpause_state_1 ), .Q0(s_mem_rd_sel_0), 
    .F1(\shifter/exec_ctrl/n517 ), .Q1(s_mem_rd_sel_1));
  shifter_exec_ctrl_SLICE_667 \shifter/exec_ctrl/SLICE_667 ( .D1(n8264), 
    .C1(\shifter/exec_ctrl/n8268 ), .B1(n8274), .A1(n8279), 
    .C0(\shifter/exec_ctrl/n8331 ), .B0(\shifter/exec_ctrl/n2159 ), 
    .A0(\shifter/exec_ctrl/n8330 ), .M1(s_reg_din_13), .M0(s_reg_din_12), 
    .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), .F0(n8264), 
    .Q0(\shifter/exec_ctrl/s_insn_r0_12 ), .F1(\shifter/exec_ctrl/n7231 ), 
    .Q1(\shifter/exec_ctrl/s_insn_r0_13 ));
  shifter_exec_ctrl_SLICE_668 \shifter/exec_ctrl/SLICE_668 ( .D1(n8264), 
    .C1(\shifter/exec_ctrl/n8268 ), .B1(n8274), .A1(n8279), 
    .C0(\shifter/exec_ctrl/n8331 ), .B0(\shifter/exec_ctrl/n2159 ), 
    .A0(\shifter/exec_ctrl/n8330 ), .M1(s_reg_din_11), .M0(s_reg_din_10), 
    .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/n8268 ), .Q0(\shifter/exec_ctrl/s_insn_r0_10 ), 
    .F1(\shifter/exec_ctrl/n7250 ), .Q1(\shifter/exec_ctrl/s_insn_r0_11 ));
  SLICE_669 SLICE_669( .C1(n8279), .B1(\shifter/exec_ctrl/n8845 ), 
    .A1(\shifter/exec_ctrl/n8844 ), .C0(\shifter/exec_ctrl/n2159 ), 
    .B0(\shifter/exec_ctrl/n8849 ), .A0(\shifter/exec_ctrl/n182 ), 
    .M1(s_reg_din_9), .M0(s_reg_din_8), .CE(s_r3_wr_stb), .CLK(mclk_c), 
    .F0(n8279), .Q0(s_r3_8), .F1(\shifter/exec_ctrl/n7258 ), .Q1(s_r3_9));
  SLICE_670 SLICE_670( .C1(\shifter/exec_ctrl/s_insn_r0_14 ), 
    .B1(\shifter/exec_ctrl/s_insn_r0_13 ), 
    .A1(\shifter/exec_ctrl/s_insn_r0_12 ), .C0(\shifter/exec_ctrl/n8330 ), 
    .B0(\shifter/exec_ctrl/n2159 ), .A0(\shifter/exec_ctrl/n8849 ), 
    .M1(s_reg_din_3), .M0(s_reg_din_2), .CE(s_irq_en_wr_stb), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/n2099 ), .Q0(s_irq_en_2), 
    .F1(\shifter/exec_ctrl/n8330 ), .Q1(s_irq_en_3));
  SLICE_671 SLICE_671( .B1(\shifter/exec_ctrl/s_pos_goto_en ), 
    .A1(\shifter/exec_ctrl/insn_goto_N_1512 ), .D0(\shifter/exec_ctrl/n8252 ), 
    .C0(\shifter/exec_ctrl/n7161 ), .B0(\shifter/exec_ctrl/n7191 ), 
    .A0(\shifter/exec_ctrl/n8263 ), .M1(q_15__N_68), .M0(q_15__N_70), 
    .CE(s_dbg_mem_rd), .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n4856 ), 
    .Q0(s_mem_rd_addr_7), .F1(\shifter/exec_ctrl/n8263 ), .Q1(s_mem_rd_addr_8));
  SLICE_672 SLICE_672( .C1(\shifter/exec_ctrl/s_insn_r0_12 ), 
    .B1(\shifter/exec_ctrl/s_insn_r0_14 ), 
    .A1(\shifter/exec_ctrl/s_insn_r0_13 ), .D0(\shifter/exec_ctrl/n182 ), 
    .C0(\shifter/exec_ctrl/n2159 ), .B0(\shifter/exec_ctrl/n8331 ), 
    .A0(\shifter/exec_ctrl/n8330 ), .M1(s_pos_0_3_N_670_1), 
    .M0(s_pos_0_3_N_670_0), .CE(mclk_c_enable_118), .CLK(mclk_c), .F0(n8273), 
    .Q0(s_desc_lo_0), .F1(\shifter/exec_ctrl/n8331 ), .Q1(s_desc_lo_1));
  SLICE_673 SLICE_673( .C1(n8279), .B1(\shifter/exec_ctrl/n8845 ), 
    .A1(\shifter/exec_ctrl/n8844 ), .D0(\shifter/exec_ctrl/n8263 ), 
    .C0(\shifter/exec_ctrl/n8246 ), .B0(\shifter/exec_ctrl/n8262 ), 
    .A0(\shifter/exec_ctrl/n8239 ), .M1(q_15__N_68), .M0(q_15__N_70), 
    .CE(s_dbg_mem_wr), .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n7245 ), 
    .Q0(s_mem_wr_addr_7), .F1(\shifter/exec_ctrl/n8246 ), .Q1(s_mem_wr_addr_8));
  SLICE_674 SLICE_674( .D1(\shifter/ckgen/mclk_c_enable_135 ), 
    .C1(\shifter/ckgen/s_rtck_r2 ), .B1(\shifter/ckgen/rtcktmo_N_629 ), 
    .A1(\shifter/ckgen/s_rtck_r1 ), .B0(\shifter/ckgen/s_enabled ), 
    .A0(\shifter/ckgen/s_tck_r0 ), .M1(fsmc_d_out_3), .M0(fsmc_d_out_2), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), .CLK(fsmc_clk_c), 
    .F0(\shifter/ckgen/mclk_c_enable_135 ), 
    .Q0(\cram_bus/reg_wr_fifo/s_data3_2 ), .F1(\shifter/ckgen/n4077 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data3_3 ));
  SLICE_675 SLICE_675( .B1(\shifter/ckgen/s_enabled ), 
    .A1(\shifter/ckgen/s_tck_r0 ), .D0(\shifter/ckgen/s_rtck_r1 ), 
    .C0(\shifter/ckgen/s_tck_r0_N_638 ), .B0(\shifter/ckgen/s_rtck_r2 ), 
    .A0(\shifter/ckgen/mclk_c_enable_159 ), .M1(fsmc_d_out_7), 
    .M0(fsmc_d_out_6), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), 
    .CLK(fsmc_clk_c), .F0(\shifter/ckgen/n4036 ), 
    .Q0(\cram_bus/reg_wr_fifo/s_data3_6 ), 
    .F1(\shifter/ckgen/mclk_c_enable_159 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data3_7 ));
  SLICE_676 SLICE_676( .C1(\shifter/ckgen/s_rtck_r2 ), 
    .B1(\shifter/ckgen/rtcktmo_N_629 ), .A1(\shifter/ckgen/s_rtck_r1 ), 
    .C0(\shifter/ckgen/s_tck_r0 ), .B0(\shifter/ckgen/n8248 ), 
    .A0(\shifter/ckgen/s_enabled ), .M1(fsmc_d_out_5), .M0(fsmc_d_out_4), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), .CLK(fsmc_clk_c), 
    .F0(\shifter/ckgen/mclk_c_enable_95 ), 
    .Q0(\cram_bus/reg_wr_fifo/s_data3_4 ), .F1(\shifter/ckgen/n8248 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data3_5 ));
  SLICE_677 SLICE_677( .D1(q_15__N_64), .C1(q_15__N_52), .B1(q_15__N_56), 
    .A1(n8288), .D0(q_15__N_64), .C0(q_15__N_52), .B0(q_15__N_56), .A0(n8288), 
    .M1(fsmc_d_out_15), .M0(fsmc_d_out_14), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(fsmc_clk_c_enable_1), .Q0(\cram_bus/reg_wr_fifo/s_data0_14 ), 
    .F1(fsmc_clk_c_enable_2), .Q1(\cram_bus/reg_wr_fifo/s_data0_15 ));
  shifter_SLICE_678 \shifter/SLICE_678 ( 
    .D1(\shifter/shift_ctrl/s_stop_N_1312 ), .C1(\shifter/s_en_r0 ), 
    .B1(\shifter/shift_ctrl/bit_cnt_9 ), .A1(\shifter/shift_ctrl/n8229 ), 
    .D0(\shifter/shift_ctrl/s_stop_N_1312 ), .C0(\shifter/s_en_r0 ), 
    .B0(\shifter/shift_ctrl/bit_cnt_9 ), .A0(\shifter/shift_ctrl/n8229 ), 
    .M0(s_desc_data_31), .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .F0(\shifter/shift_ctrl/mclk_c_enable_89 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_0_.msbf ), .F1(\shifter/shift_ctrl/n4071 ));
  shifter_SLICE_679 \shifter/SLICE_679 ( .D1(\shifter/n8282 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/bit_pos_3 ), 
    .A1(\shifter/rx/bit_pos_2 ), .D0(\shifter/n8282 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/bit_pos_3 ), .A0(\shifter/rx/bit_pos_2 ), 
    .M1(s_ckgen_div_10), .M0(s_ckgen_div_1), .CLK(mclk_c), 
    .F0(\shifter/rx/mclk_c_enable_255 ), .Q0(\shifter/ckgen/s_div_hi_r0_0 ), 
    .F1(\shifter/rx/mclk_c_enable_92 ), .Q1(\shifter/ckgen/s_div_hi_r0_9 ));
  shifter_SLICE_680 \shifter/SLICE_680 ( .D1(\shifter/n8282 ), 
    .C1(s_rx_mem_wr_stb), .B1(\shifter/rx/bit_pos_3 ), 
    .A1(\shifter/rx/bit_pos_2 ), .D0(\shifter/n8282 ), .C0(s_rx_mem_wr_stb), 
    .B0(\shifter/rx/bit_pos_3 ), .A0(\shifter/rx/bit_pos_2 ), 
    .M1(s_ckgen_div_12), .M0(s_ckgen_div_11), .CLK(mclk_c), 
    .F0(\shifter/rx/mclk_c_enable_251 ), .Q0(\shifter/ckgen/s_div_hi_r0_10 ), 
    .F1(\shifter/rx/mclk_c_enable_247 ), .Q1(\shifter/ckgen/s_div_hi_r0_11 ));
  shifter_SLICE_681 \shifter/SLICE_681 ( .D1(s_status_1), .C1(s_status_2), 
    .B1(s_status_0), .A1(s_status_3), .D0(s_status_3), .C0(s_status_2), 
    .B0(s_status_1), .A0(s_status_0), .M1(\shifter/rx/n8329 ), 
    .M0(\shifter/rx/n8328 ), .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_irpause_state_0 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.pos_1 ), 
    .F1(\shifter/exec_ctrl/s_irpause_state_1 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.pos_2 ));
  shifter_exec_ctrl_SLICE_682 \shifter/exec_ctrl/SLICE_682 ( .D1(s_status_1), 
    .C1(s_status_0), .B1(s_status_2), .A1(s_status_3), .D0(s_status_0), 
    .C0(s_status_1), .B0(s_status_3), .A0(s_status_2), .M1(s_reg_din_5), 
    .M0(s_reg_din_4), .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_drscan_state_1 ), 
    .Q0(\shifter/exec_ctrl/s_insn_r0_4 ), 
    .F1(\shifter/exec_ctrl/s_reset_state_0 ), 
    .Q1(\shifter/exec_ctrl/s_insn_r0_5 ));
  shifter_exec_ctrl_SLICE_683 \shifter/exec_ctrl/SLICE_683 ( .D1(s_status_2), 
    .C1(s_status_1), .B1(s_status_3), .A1(s_status_0), .D0(s_status_0), 
    .C0(s_status_1), .B0(s_status_2), .A0(s_status_3), .M1(s_reg_din_7), 
    .M0(s_reg_din_6), .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_irpause_state_2 ), 
    .Q0(\shifter/exec_ctrl/s_insn_r0_6 ), 
    .F1(\shifter/exec_ctrl/s_irscan_state_0 ), 
    .Q1(\shifter/exec_ctrl/s_insn_r0_7 ));
  shifter_exec_ctrl_SLICE_684 \shifter/exec_ctrl/SLICE_684 ( .D1(s_status_1), 
    .C1(s_status_0), .B1(s_status_3), .A1(s_status_2), .D0(s_status_1), 
    .C0(s_status_2), .B0(s_status_3), .A0(s_status_0), .M1(s_reg_din_3), 
    .M0(s_reg_din_2), .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_drscan_state_2 ), 
    .Q0(\shifter/exec_ctrl/s_insn_r0_2 ), 
    .F1(\shifter/exec_ctrl/s_drpause_cnt_en ), 
    .Q1(\shifter/exec_ctrl/s_insn_r0_3 ));
  shifter_exec_ctrl_SLICE_685 \shifter/exec_ctrl/SLICE_685 ( .D1(s_status_3), 
    .C1(s_status_2), .B1(s_status_1), .A1(s_status_0), .D0(s_status_1), 
    .C0(s_status_2), .B0(s_status_0), .A0(s_status_3), .M1(s_reg_din_9), 
    .M0(s_reg_din_8), .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_runtest_state_0 ), 
    .Q0(\shifter/exec_ctrl/s_insn_r0_8 ), 
    .F1(\shifter/exec_ctrl/mtms_N_1486_7 ), 
    .Q1(\shifter/exec_ctrl/s_insn_r0_9 ));
  SLICE_686 SLICE_686( .D1(n20), .C1(n1545), 
    .B1(\cram_bus/reg_wr_fifo/s_addr1_3 ), 
    .A1(\cram_bus/reg_wr_fifo/s_addr0_3 ), .C0(n1545), 
    .B0(\cram_bus/reg_wr_fifo/s_addr1_3 ), 
    .A0(\cram_bus/reg_wr_fifo/s_addr0_3 ), .M1(s_reg_din_7), .M0(s_reg_din_6), 
    .CE(s_ckgen_rtdiv_wr_stb), .CLK(mclk_c), .F0(n8312), .Q0(s_ckgen_rtdiv_6), 
    .F1(n22), .Q1(s_ckgen_rtdiv_7));
  SLICE_687 SLICE_687( .C1(\cram_bus/reg_wr_fifo/s_sel_in_1 ), 
    .B1(\cram_bus/n8287 ), .A1(\cram_bus/reg_wr_fifo/s_sel_in_0 ), 
    .C0(\cram_bus/reg_wr_fifo/s_sel_in_1 ), .B0(\cram_bus/n8287 ), 
    .A0(\cram_bus/reg_wr_fifo/s_sel_in_0 ), .M1(s_reg_din_3), .M0(s_reg_din_2), 
    .CE(s_ckgen_rtdiv_wr_stb), .CLK(mclk_c), 
    .F0(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .Q0(s_ckgen_rtdiv_2), 
    .F1(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .Q1(s_ckgen_rtdiv_3));
  SLICE_688 SLICE_688( .C1(s_addr2_1), .B1(s_addr2_0), .A1(s_addr2_3), 
    .C0(s_addr2_1), .B0(s_addr2_0), .A0(s_addr2_3), .M1(fsmc_d_out_7), 
    .M0(fsmc_d_out_6), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), 
    .CLK(fsmc_clk_c), .F0(n8283), .Q0(\cram_bus/reg_wr_fifo/s_data0_6 ), 
    .F1(n7790), .Q1(\cram_bus/reg_wr_fifo/s_data0_7 ));
  shifter_SLICE_689 \shifter/SLICE_689 ( .D1(s_cfg_6), 
    .C1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_1 ), .B1(\shifter/s_en_r1 ), 
    .A1(\shifter/n8217 ), .D0(s_cfg_6), 
    .C0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_2 ), .B0(\shifter/s_en_r1 ), 
    .A0(\shifter/n8217 ), .M1(s_desc_data_7), .M0(s_desc_data_6), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .F0(\shifter/mclk_c_enable_219 ), .Q0(\shifter/rx/s_op_fifo.buf_0_.len_6 ), 
    .F1(\shifter/mclk_c_enable_231 ), .Q1(\shifter/rx/s_op_fifo.buf_0_.len_7 ));
  SLICE_690 SLICE_690( .D1(\shifter/exec_ctrl/n8263 ), 
    .C1(\shifter/exec_ctrl/n8246 ), .B1(\shifter/exec_ctrl/n7231 ), 
    .A1(\shifter/exec_ctrl/n8239 ), .D0(\shifter/exec_ctrl/n8263 ), 
    .C0(\shifter/exec_ctrl/n8246 ), .B0(\shifter/exec_ctrl/n7250 ), 
    .A0(\shifter/exec_ctrl/n8239 ), .M0(q_15__N_66), .CE(s_dbg_mem_wr), 
    .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n7256 ), .Q0(s_mem_wr_addr_9), 
    .F1(\shifter/exec_ctrl/n7241 ));
  SLICE_691 SLICE_691( .C1(s_status_3), .B1(s_status_1), .A1(s_status_0), 
    .D0(s_status_0), .C0(s_status_3), .B0(s_status_2), .A0(s_status_1), 
    .M1(s_reg_din_5), .M0(s_reg_din_4), .CE(s_r3_wr_stb), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_drscan_state_3 ), .Q0(s_r3_4), 
    .F1(\shifter/exec_ctrl/n3000 ), .Q1(s_r3_5));
  SLICE_692 SLICE_692( .D1(\shifter/exec_ctrl/s_tap_state_next_0 ), 
    .C1(s_status_2), .B1(s_status_1), .A1(s_status_0), .C0(s_status_0), 
    .B0(s_status_2), .A0(s_status_1), .M1(q_15__N_80), .M0(q_15__N_62), 
    .CE(s_dbg_mem_rd), .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n8291 ), 
    .Q0(s_mem_rd_addr_11), .F1(\shifter/exec_ctrl/n7167 ), 
    .Q1(s_mem_rd_addr_2));
  SLICE_693 SLICE_693( .D1(n4959), .C1(\shifter/exec_ctrl/s_insn_r0_6 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), .D0(n4959), 
    .C0(\shifter/exec_ctrl/s_insn_r0_0 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M0(q_15__N_66), .CE(s_dbg_mem_rd), 
    .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/s_cnt_top_0 ), 
    .Q0(s_mem_rd_addr_9), .F1(\shifter/exec_ctrl/s_cnt_top_6 ));
  SLICE_694 SLICE_694( .D1(n4959), .C1(\shifter/exec_ctrl/s_insn_r0_7 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), .D0(n4959), 
    .C0(\shifter/exec_ctrl/s_insn_r0_3 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(s_pos_0_3_N_670_3), 
    .M0(s_pos_0_3_N_670_2), .CE(mclk_c_enable_118), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/s_cnt_top_3 ), .Q0(s_desc_lo_2), 
    .F1(\shifter/exec_ctrl/s_cnt_top_7 ), .Q1(s_desc_lo_3));
  SLICE_695 SLICE_695( .D1(n4959), .C1(\shifter/exec_ctrl/s_insn_r0_2 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), .D0(n4959), 
    .C0(\shifter/exec_ctrl/s_insn_r0_5 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(s_desc_data_5), .M0(s_desc_data_4), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .F0(\shifter/exec_ctrl/s_cnt_top_5 ), 
    .Q0(s_desc_lo_4), .F1(\shifter/exec_ctrl/s_cnt_top_2 ), .Q1(s_desc_lo_5));
  SLICE_696 SLICE_696( .D1(n4959), .C1(\shifter/exec_ctrl/s_insn_r0_1 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), .D0(n4959), 
    .C0(\shifter/exec_ctrl/s_insn_r0_4 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(s_desc_data_7), .M0(s_desc_data_6), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .F0(\shifter/exec_ctrl/s_cnt_top_4 ), 
    .Q0(s_desc_lo_6), .F1(\shifter/exec_ctrl/s_cnt_top_1 ), .Q1(s_desc_lo_7));
  shifter_exec_ctrl_SLICE_697 \shifter/exec_ctrl/SLICE_697 ( .C1(n8279), 
    .B1(\shifter/exec_ctrl/n8845 ), .A1(\shifter/exec_ctrl/n8844 ), .C0(n8279), 
    .B0(\shifter/exec_ctrl/n8845 ), .A0(\shifter/exec_ctrl/n8844 ), 
    .M1(s_reg_din_15), .M0(s_reg_din_14), .CE(\shifter/exec_ctrl/busy_N_1509 ), 
    .CLK(mclk_c), .F0(\shifter/exec_ctrl/n8254 ), 
    .Q0(\shifter/exec_ctrl/s_insn_r0_14 ), .F1(\shifter/exec_ctrl/n8240 ), 
    .Q1(\shifter/exec_ctrl/s_insn_r0_15 ));
  SLICE_698 SLICE_698( .C1(n8279), .B1(\shifter/exec_ctrl/n8845 ), 
    .A1(\shifter/exec_ctrl/n8844 ), .C0(n8279), .B0(\shifter/exec_ctrl/n8845 ), 
    .A0(\shifter/exec_ctrl/n8844 ), .M1(s_desc_data_15), .M0(s_desc_data_14), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .F0(\shifter/exec_ctrl/n5 ), 
    .Q0(s_desc_lo_14), .F1(\shifter/exec_ctrl/n8038 ), .Q1(s_desc_lo_15));
  SLICE_699 SLICE_699( .D1(\shifter/s_tdien ), .C1(\shifter/ckgen/s_enabled ), 
    .B1(\shifter/ckgen/s_tcki_r1 ), .A1(\shifter/ckgen/s_tcki_r0 ), 
    .C0(\shifter/ckgen/s_enabled ), .B0(\shifter/ckgen/s_tcki_r1 ), 
    .A0(\shifter/ckgen/s_tcki_r0 ), .M1(fsmc_d_out_9), .M0(fsmc_d_out_8), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), .CLK(fsmc_clk_c), 
    .F0(mclk_c_enable_115), .Q0(\cram_bus/reg_wr_fifo/s_data3_8 ), 
    .F1(\shifter/n7090 ), .Q1(\cram_bus/reg_wr_fifo/s_data3_9 ));
  SLICE_700 SLICE_700( .B1(n7785), .A1(out_get_N_312), .B0(n7785), 
    .A0(out_get_N_312), .M1(fsmc_d_out_1), .M0(fsmc_d_out_0), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .CLK(fsmc_clk_c), 
    .F0(n4048), .Q0(\cram_bus/reg_wr_fifo/s_data1_0 ), .F1(s_cfg_wr_stb), 
    .Q1(\cram_bus/reg_wr_fifo/s_data1_1 ));
  SLICE_701 SLICE_701( .D1(s_tmr_4), .C1(s_tmr_5), .B1(\tmr_r/n8267 ), 
    .A1(s_tmr_3), .D0(s_tmr_5), .C0(s_tmr_6), .B0(\tmr_r/n8256 ), .A0(s_tmr_4), 
    .M1(s_pos_0_3_N_670_3), .M0(s_pos_0_3_N_670_2), 
    .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), .F0(\tmr_r/n8233 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.len_2 ), .F1(\tmr_r/n8238 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_3_.len_3 ));
  SLICE_702 SLICE_702( .D1(q_15__N_52), .C1(q_15__N_56), .B1(\cram_bus/n8325 ), 
    .A1(\cram_bus/s_cram_wr_addr_15 ), .D0(q_15__N_82), .C0(q_15__N_52), 
    .B0(q_15__N_56), .A0(n8288), .M1(fsmc_d_out_13), .M0(fsmc_d_out_12), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(s_we_lo), .Q0(\cram_bus/reg_wr_fifo/s_data0_12 ), 
    .F1(s_aux_mem_wr_stb), .Q1(\cram_bus/reg_wr_fifo/s_data0_13 ));
  SLICE_703 SLICE_703( .C1(q_15__N_80), .B1(q_15__N_78), .A1(q_15__N_76), 
    .B0(q_15__N_78), .A0(q_15__N_80), .M1(fsmc_d_out_1), .M0(fsmc_d_out_0), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(n2977), .Q0(\cram_bus/reg_wr_fifo/s_data0_0 ), .F1(n7225), 
    .Q1(\cram_bus/reg_wr_fifo/s_data0_1 ));
  shifter_SLICE_704 \shifter/SLICE_704 ( .D1(\shifter/tx/s_addr_r_2 ), 
    .C1(\shifter/tx/s_addr_r_1 ), .B1(\shifter/tx/n8202 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_1 ), 
    .C0(\shifter/tx/s_addr_r_0 ), .B0(\shifter/tx/n8249 ), 
    .A0(\shifter/s_msbf ), .M1(s_pos_0_3_N_670_1), .M0(s_pos_0_3_N_670_0), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/s_sum_1 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.len_0 ), .F1(\shifter/tx/s_sum_2 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.len_1 ));
  shifter_SLICE_705 \shifter/SLICE_705 ( .D1(\shifter/tx/s_addr_r_5 ), 
    .C1(\shifter/tx/s_addr_r_4 ), .B1(\shifter/tx/n8193 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_4 ), 
    .C0(\shifter/tx/s_addr_r_3 ), .B0(\shifter/tx/n8195 ), 
    .A0(\shifter/s_msbf ), .M1(s_pos_0_3_N_670_3), .M0(s_pos_0_3_N_670_2), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/s_sum_4 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.len_2 ), .F1(\shifter/tx/s_sum_5 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.len_3 ));
  shifter_SLICE_706 \shifter/SLICE_706 ( .D1(\shifter/tx/s_addr_r_7 ), 
    .C1(\shifter/tx/s_addr_r_6 ), .B1(\shifter/tx/n8191 ), 
    .A1(\shifter/s_msbf ), .D0(\shifter/tx/s_addr_r_6 ), 
    .C0(\shifter/tx/s_addr_r_5 ), .B0(\shifter/tx/n8192 ), 
    .A0(\shifter/s_msbf ), .M1(s_desc_data_5), .M0(s_desc_data_4), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/s_sum_6 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.len_4 ), .F1(\shifter/tx/s_sum_7 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.len_5 ));
  shifter_SLICE_707 \shifter/SLICE_707 ( .D1(\shifter/shift_ctrl/bit_cnt_2 ), 
    .C1(\shifter/shift_ctrl/bit_cnt_3 ), .B1(\shifter/shift_ctrl/bit_cnt_1 ), 
    .A1(\shifter/shift_ctrl/bit_cnt_0 ), .B0(\shifter/shift_ctrl/bit_cnt_1 ), 
    .A0(\shifter/shift_ctrl/bit_cnt_0 ), .M1(\shifter/rx/s_op0.addr_1 ), 
    .M0(\shifter/rx/s_op0.addr_0 ), .CE(\shifter/mclk_c_enable_231 ), 
    .CLK(mclk_c), .F0(\shifter/shift_ctrl/n8305 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.addr_0 ), .F1(\shifter/shift_ctrl/n8269 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.addr_1 ));
  SLICE_708 SLICE_708( .D1(\shifter/exec_ctrl/s_insn_r0_12 ), 
    .C1(\shifter/exec_ctrl/s_insn_r0_13 ), 
    .B1(\shifter/exec_ctrl/s_insn_r0_14 ), 
    .A1(\shifter/exec_ctrl/s_insn_r0_15 ), 
    .D0(\shifter/exec_ctrl/s_insn_r0_12 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_4 ), .B0(\shifter/exec_ctrl/s_insn_r0_9 ), 
    .A0(\shifter/exec_ctrl/s_insn_r0_14 ), .M1(s_reg_din_1), .M0(s_reg_din_0), 
    .CE(s_r3_wr_stb), .CLK(mclk_c), .F0(\shifter/exec_ctrl/n19 ), .Q0(s_r3_0), 
    .F1(\shifter/exec_ctrl/n8265 ), .Q1(s_r3_1));
  SLICE_709 SLICE_709( .D1(\shifter/exec_ctrl/n7191 ), 
    .C1(\shifter/exec_ctrl/n7161 ), .B1(\shifter/exec_ctrl/s_pos_goto_en ), 
    .A1(\shifter/exec_ctrl/insn_goto_N_1512 ), .D0(s_cfg_6), 
    .C0(\shifter/exec_ctrl/n7161 ), .B0(\shifter/exec_ctrl/n7191 ), 
    .A0(\shifter/exec_ctrl/n8263 ), .M1(s_reg_din_11), .M0(s_reg_din_10), 
    .CE(s_r3_wr_stb), .CLK(mclk_c), .F0(\shifter/exec_ctrl/n2463 ), 
    .Q0(s_r3_10), .F1(\shifter/exec_ctrl/n8224 ), .Q1(s_r3_11));
  shifter_SLICE_710 \shifter/SLICE_710 ( .D1(\shifter/exec_ctrl/s_exec_en ), 
    .C1(\shifter/exec_ctrl/s_pos_goto_en ), .B1(s_cfg_6), 
    .A1(\shifter/exec_ctrl/n4856 ), .B0(\shifter/exec_ctrl/s_exec_en ), 
    .A0(\shifter/exec_ctrl/s_pos_goto_en ), .M0(\shifter/rx/n8304 ), 
    .CE(\shifter/mclk_c_enable_207 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/tdi_en_N_1474 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_3_.pos_3 ), 
    .F1(\shifter/exec_ctrl/mclk_c_enable_45 ));
  SLICE_711 SLICE_711( .D1(n8279), .C1(n8273), .B1(s_status_2), 
    .A1(s_status_1), .B0(s_status_2), .A0(s_status_1), .M1(q_15__N_76), 
    .M0(q_15__N_78), .CE(s_dbg_mem_rd), .CLK(fsmc_clk_c), 
    .F0(\shifter/exec_ctrl/n8298 ), .Q0(s_mem_rd_addr_3), 
    .F1(\shifter/exec_ctrl/n5106 ), .Q1(s_mem_rd_addr_4));
  SLICE_712 SLICE_712( .C1(s_status_1), .B1(s_status_0), .A1(s_status_3), 
    .C0(s_status_0), .B0(s_status_2), .A0(s_status_1), .M1(s_desc_data_13), 
    .M0(s_desc_data_12), .CE(mclk_c_enable_118), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/n4 ), .Q0(s_desc_lo_12), 
    .F1(\shifter/exec_ctrl/n5022 ), .Q1(s_desc_lo_13));
  shifter_exec_ctrl_SLICE_713 \shifter/exec_ctrl/SLICE_713 ( 
    .D1(\shifter/s_en_r1 ), .C1(s_status_2), .B1(s_status_3), .A1(n8279), 
    .D0(s_status_2), .C0(s_status_3), .B0(s_status_0), 
    .A0(\shifter/exec_ctrl/n8844 ), .M1(s_reg_din_1), .M0(s_reg_din_0), 
    .CE(\shifter/exec_ctrl/busy_N_1509 ), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/n8040 ), .Q0(\shifter/exec_ctrl/s_insn_r0_0 ), 
    .F1(\shifter/exec_ctrl/n8042 ), .Q1(\shifter/exec_ctrl/s_insn_r0_1 ));
  SLICE_714 SLICE_714( .C1(s_cfg_6), .B1(\shifter/exec_ctrl/n7105 ), 
    .A1(\shifter/exec_ctrl/s_exec_en ), .B0(\shifter/exec_ctrl/n7105 ), 
    .A0(\shifter/exec_ctrl/s_exec_en ), .M1(q_15__N_64), .M0(q_15__N_82), 
    .CE(s_dbg_mem_rd), .CLK(fsmc_clk_c), .F0(\shifter/exec_ctrl/n8252 ), 
    .Q0(s_mem_rd_addr_1), .F1(\shifter/exec_ctrl/mclk_c_enable_25 ), 
    .Q1(s_mem_rd_addr_10));
  SLICE_715 SLICE_715( .C1(\shifter/exec_ctrl/s_insn_r0_1 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_4 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(s_desc_data_9), .M0(s_desc_data_8), 
    .CE(mclk_c_enable_118), .CLK(mclk_c), .F0(s_ptr_addr_5), .Q0(s_desc_lo_8), 
    .F1(s_ptr_addr_2), .Q1(s_desc_lo_9));
  SLICE_716 SLICE_716( .C1(\shifter/exec_ctrl/s_insn_r0_5 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_3 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(s_reg_din_1), .M0(s_reg_din_0), 
    .CE(s_irq_en_wr_stb), .CLK(mclk_c), .F0(s_ptr_addr_4), .Q0(s_irq_en_0), 
    .F1(s_ptr_addr_6), .Q1(s_irq_en_1));
  SLICE_717 SLICE_717( .C1(\shifter/exec_ctrl/s_insn_r0_6 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_2 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(q_15__N_80), .M0(q_15__N_62), 
    .CE(s_dbg_mem_wr), .CLK(fsmc_clk_c), .F0(s_ptr_addr_3), 
    .Q0(s_mem_wr_addr_11), .F1(s_ptr_addr_7), .Q1(s_mem_wr_addr_2));
  SLICE_718 SLICE_718( .C1(\shifter/exec_ctrl/s_insn_r0_7 ), 
    .B1(\shifter/exec_ctrl/n8844 ), .A1(\shifter/exec_ctrl/n8845 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_0 ), .B0(\shifter/exec_ctrl/n8844 ), 
    .A0(\shifter/exec_ctrl/n8845 ), .M1(q_15__N_64), .M0(q_15__N_82), 
    .CE(s_dbg_mem_wr), .CLK(fsmc_clk_c), .F0(s_ptr_addr_1), 
    .Q0(s_mem_wr_addr_1), .F1(s_ptr_addr_8), .Q1(s_mem_wr_addr_10));
  SLICE_719 SLICE_719( .B1(s_rx_mem_addr_9), .A1(s_rx_mem_wr_stb), 
    .B0(s_rx_mem_addr_9), .A0(s_rx_mem_wr_stb), .M1(fsmc_d_out_3), 
    .M0(fsmc_d_out_2), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), 
    .CLK(fsmc_clk_c), .F0(\rx_mem/mclk_c_enable_28 ), 
    .Q0(\cram_bus/reg_wr_fifo/s_data2_2 ), .F1(\rx_mem/mclk_c_enable_34 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data2_3 ));
  SLICE_720 SLICE_720( .B1(\led_run_drv/s_count_0 ), 
    .A1(\led_run_drv/s_count_1 ), .B0(\led_run_drv/s_count_4 ), 
    .A0(\led_run_drv/s_count_1 ), .M1(fsmc_d_out_9), .M0(fsmc_d_out_8), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .CLK(fsmc_clk_c), 
    .F0(\led_run_drv/n6 ), .Q0(\cram_bus/reg_wr_fifo/s_data1_8 ), 
    .F1(\led_run_drv/n8316 ), .Q1(\cram_bus/reg_wr_fifo/s_data1_9 ));
  SLICE_721 SLICE_721( .C1(s_desc_hi_11), .B1(q_15__N_82), .A1(s_desc_lo_11), 
    .C0(q_15__N_82), .B0(s_mem_rd_addr_10), .A0(s_mem_wr_addr_10), 
    .M1(fsmc_d_out_6), .M0(fsmc_d_out_5), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), .CLK(fsmc_clk_c), 
    .F0(n7824), .Q0(\cram_bus/reg_wr_fifo/s_data2_5 ), .F1(n7820), 
    .Q1(\cram_bus/reg_wr_fifo/s_data2_6 ));
  SLICE_722 SLICE_722( .C1(q_15__N_82), .B1(s_mem_rd_addr_11), 
    .A1(s_mem_wr_addr_11), .C0(q_15__N_82), .B0(s_mem_rd_addr_7), 
    .A0(s_mem_wr_addr_7), .M1(fsmc_d_out_13), .M0(fsmc_d_out_12), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), .CLK(fsmc_clk_c), 
    .F0(n7830), .Q0(\cram_bus/reg_wr_fifo/s_data3_12 ), .F1(n7821), 
    .Q1(\cram_bus/reg_wr_fifo/s_data3_13 ));
  SLICE_723 SLICE_723( .C1(q_15__N_82), .B1(s_mem_rd_addr_9), 
    .A1(s_mem_wr_addr_9), .C0(s_desc_hi_7), .B0(q_15__N_82), .A0(s_desc_lo_7), 
    .M1(fsmc_d_out_15), .M0(fsmc_d_out_14), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), .CLK(fsmc_clk_c), 
    .F0(n7829), .Q0(\cram_bus/reg_wr_fifo/s_data3_14 ), .F1(n7805), 
    .Q1(\cram_bus/reg_wr_fifo/s_data3_15 ));
  SLICE_724 SLICE_724( .C1(s_desc_hi_9), .B1(q_15__N_82), .A1(s_desc_lo_9), 
    .C0(q_15__N_82), .B0(s_mem_rd_addr_4), .A0(s_mem_wr_addr_4), 
    .M1(fsmc_d_out_8), .M0(fsmc_d_out_7), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), .CLK(fsmc_clk_c), 
    .F0(n7836), .Q0(\cram_bus/reg_wr_fifo/s_data2_7 ), .F1(n7804), 
    .Q1(\cram_bus/reg_wr_fifo/s_data2_8 ));
  SLICE_725 SLICE_725( .C1(q_15__N_82), .B1(s_mem_rd_addr_8), 
    .A1(s_mem_wr_addr_8), .C0(s_desc_hi_4), .B0(q_15__N_82), .A0(s_desc_lo_4), 
    .M0(fsmc_d_out_9), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), 
    .CLK(fsmc_clk_c), .F0(n7835), .Q0(\cram_bus/reg_wr_fifo/s_data2_9 ), 
    .F1(n7802));
  SLICE_726 SLICE_726( .B1(s_cfg_7), .A1(tp_dbgack_c), .B0(s_cfg_7), 
    .A0(uart_tx_c), .M1(fsmc_d_out_11), .M0(fsmc_d_out_10), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .CLK(fsmc_clk_c), 
    .F0(tp_dbgrq_c), .Q0(\cram_bus/reg_wr_fifo/s_data1_10 ), .F1(uart_rx_c), 
    .Q1(\cram_bus/reg_wr_fifo/s_data1_11 ));
  cram_bus_SLICE_727 \cram_bus/SLICE_727 ( .B1(\cram_bus/s_op_mem_wr ), 
    .A1(\cram_bus/s_start_stb ), .B0(\cram_bus/s_op_mem_rd ), 
    .A0(\cram_bus/s_start_stb ), .M1(q_15__N_76), .M0(q_15__N_78), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), .CLK(fsmc_clk_c), 
    .F0(s_dbg_mem_rd), .Q0(s_addr3_2), .F1(s_dbg_mem_wr), .Q1(s_addr3_3));
  SLICE_728 SLICE_728( .C1(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B1(\cram_bus/s_reg_rd_data_15 ), .A1(s_mem_dout_15), 
    .C0(\cram_bus/s_cram_mem_rd_addr_15 ), .B0(\cram_bus/s_reg_rd_data_0 ), 
    .A0(s_mem_dout_0), .M1(s_reg_din_9), .M0(s_reg_din_8), 
    .CE(s_ckgen_rtdiv_wr_stb), .CLK(mclk_c), .F0(s_cram_dout_0), 
    .Q0(s_ckgen_rtdiv_8), .F1(s_cram_dout_15), .Q1(s_ckgen_rtdiv_9));
  cram_bus_SLICE_729 \cram_bus/SLICE_729 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_14 ), 
    .A1(s_mem_dout_14), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_1 ), .A0(s_mem_dout_1), .M1(q_15__N_80), 
    .M0(q_15__N_82), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_1), .Q0(s_addr0_0), .F1(s_cram_dout_14), 
    .Q1(s_addr0_1));
  cram_bus_SLICE_730 \cram_bus/SLICE_730 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_13 ), 
    .A1(s_mem_dout_13), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_2 ), .A0(s_mem_dout_2), .M1(q_15__N_76), 
    .M0(q_15__N_78), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_2), 
    .Q0(\cram_bus/reg_wr_fifo/s_addr0_2 ), .F1(s_cram_dout_13), 
    .Q1(\cram_bus/reg_wr_fifo/s_addr0_3 ));
  cram_bus_SLICE_731 \cram_bus/SLICE_731 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_12 ), 
    .A1(s_mem_dout_12), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_3 ), .A0(s_mem_dout_3), .M1(q_15__N_80), 
    .M0(q_15__N_82), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_3), .Q0(s_addr1_0), .F1(s_cram_dout_12), 
    .Q1(s_addr1_1));
  cram_bus_SLICE_732 \cram_bus/SLICE_732 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_11 ), 
    .A1(s_mem_dout_11), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_4 ), .A0(s_mem_dout_4), .M1(q_15__N_76), 
    .M0(q_15__N_78), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_4), 
    .Q0(\cram_bus/reg_wr_fifo/s_addr1_2 ), .F1(s_cram_dout_11), 
    .Q1(\cram_bus/reg_wr_fifo/s_addr1_3 ));
  cram_bus_SLICE_733 \cram_bus/SLICE_733 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_10 ), 
    .A1(s_mem_dout_10), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_5 ), .A0(s_mem_dout_5), .M1(q_15__N_80), 
    .M0(q_15__N_82), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_5), .Q0(s_addr2_0), .F1(s_cram_dout_10), 
    .Q1(s_addr2_1));
  cram_bus_SLICE_734 \cram_bus/SLICE_734 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_9 ), 
    .A1(s_mem_dout_9), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_6 ), .A0(s_mem_dout_6), .M1(q_15__N_76), 
    .M0(q_15__N_78), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_67 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_6), .Q0(s_addr2_2), .F1(s_cram_dout_9), 
    .Q1(s_addr2_3));
  cram_bus_SLICE_735 \cram_bus/SLICE_735 ( 
    .C1(\cram_bus/s_cram_mem_rd_addr_15 ), .B1(\cram_bus/s_reg_rd_data_8 ), 
    .A1(s_mem_dout_8), .C0(\cram_bus/s_cram_mem_rd_addr_15 ), 
    .B0(\cram_bus/s_reg_rd_data_7 ), .A0(s_mem_dout_7), .M1(q_15__N_80), 
    .M0(q_15__N_82), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), 
    .CLK(fsmc_clk_c), .F0(s_cram_dout_7), .Q0(s_addr3_0), .F1(s_cram_dout_8), 
    .Q1(s_addr3_1));
  SLICE_736 SLICE_736( .B1(n19), .A1(out_get_N_312), .B0(n7800), 
    .A0(out_get_N_312), .M1(fsmc_d_out_3), .M0(fsmc_d_out_2), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(s_ckgen_div_wr_stb), .Q0(\cram_bus/reg_wr_fifo/s_data0_2 ), 
    .F1(s_tmr_cnt_en_N_2), .Q1(\cram_bus/reg_wr_fifo/s_data0_3 ));
  SLICE_737 SLICE_737( .C1(s_desc_hi_8), .B1(q_15__N_82), .A1(s_desc_lo_8), 
    .C0(s_desc_hi_5), .B0(q_15__N_82), .A0(s_desc_lo_5), .M1(fsmc_d_out_11), 
    .M0(fsmc_d_out_10), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), 
    .CLK(fsmc_clk_c), .F0(n7786), .Q0(\cram_bus/reg_wr_fifo/s_data3_10 ), 
    .F1(n7801), .Q1(\cram_bus/reg_wr_fifo/s_data3_11 ));
  SLICE_738 SLICE_738( .B1(q_15__N_80), .A1(q_15__N_82), .C0(q_15__N_82), 
    .B0(s_mem_rd_addr_5), .A0(s_mem_wr_addr_5), .M1(fsmc_d_out_1), 
    .M0(fsmc_d_out_0), .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_82 ), 
    .CLK(fsmc_clk_c), .F0(n7787), .Q0(\cram_bus/reg_wr_fifo/s_data3_0 ), 
    .F1(n3064), .Q1(\cram_bus/reg_wr_fifo/s_data3_1 ));
  SLICE_739 SLICE_739( .B1(\led_con_drv/s_count_0 ), 
    .A1(\led_con_drv/s_count_1 ), .B0(\led_con_drv/s_count_4 ), 
    .A0(\led_con_drv/s_count_1 ), .M1(fsmc_d_out_5), .M0(fsmc_d_out_4), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .CLK(fsmc_clk_c), 
    .F0(\led_con_drv/n6 ), .Q0(\cram_bus/reg_wr_fifo/s_data1_4 ), 
    .F1(\led_con_drv/n8320 ), .Q1(\cram_bus/reg_wr_fifo/s_data1_5 ));
  shifter_SLICE_740 \shifter/SLICE_740 ( .B1(s_desc_data_30), 
    .A1(s_pos_0_3_N_670_1), .B0(s_desc_data_30), .A0(s_desc_data_8), 
    .M1(\shifter/rx/s_op0.addr_7 ), .M0(\shifter/rx/s_op0.addr_6 ), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n2223 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.addr_6 ), .F1(\shifter/tx/s_pos_0_1 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.addr_7 ));
  shifter_SLICE_741 \shifter/SLICE_741 ( .B1(s_desc_data_30), 
    .A1(s_pos_0_3_N_670_0), .B0(s_desc_data_30), .A0(s_desc_data_9), 
    .M1(\shifter/rx/s_op0.addr_9 ), .M0(\shifter/rx/s_op0.addr_8 ), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n2222 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.addr_8 ), .F1(\shifter/tx/s_pos_0_0 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.addr_9 ));
  shifter_SLICE_742 \shifter/SLICE_742 ( .B1(s_desc_data_30), 
    .A1(s_desc_data_5), .B0(s_desc_data_30), .A0(s_desc_data_6), 
    .M1(\shifter/rx/s_op0.addr_3 ), .M0(\shifter/rx/s_op0.addr_2 ), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n2225 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.addr_2 ), .F1(\shifter/tx/n2226 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.addr_3 ));
  shifter_SLICE_743 \shifter/SLICE_743 ( .B1(s_desc_data_30), 
    .A1(s_desc_data_4), .B0(s_desc_data_30), .A0(s_desc_data_7), 
    .M1(\shifter/rx/s_op0.addr_5 ), .M0(\shifter/rx/s_op0.addr_4 ), 
    .CE(\shifter/mclk_c_enable_219 ), .CLK(mclk_c), .F0(\shifter/tx/n2224 ), 
    .Q0(\shifter/rx/s_op_fifo.buf_2_.addr_4 ), .F1(\shifter/tx/n2227 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_2_.addr_5 ));
  shifter_SLICE_744 \shifter/SLICE_744 ( 
    .B1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_3 ), 
    .A1(\shifter/s_op_fifo.buf_3_.msbf_N_1174_1 ), .D0(s_cfg_6), 
    .C0(\shifter/s_op_fifo.buf_3_.msbf_N_1174_3 ), .B0(\shifter/s_en_r1 ), 
    .A0(\shifter/n8217 ), .M1(s_desc_data_9), .M0(s_desc_data_8), 
    .CE(\shifter/mclk_c_enable_243 ), .CLK(mclk_c), 
    .F0(\shifter/mclk_c_enable_207 ), .Q0(\shifter/rx/s_op_fifo.buf_0_.len_8 ), 
    .F1(\shifter/rx/s_op_fifo.head_0 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_0_.len_9 ));
  shifter_SLICE_745 \shifter/SLICE_745 ( .D1(\shifter/shift_ctrl/s_offs_r_7 ), 
    .C1(\shifter/shift_ctrl/s_offs_r_4 ), .B1(\shifter/shift_ctrl/s_offs_r_6 ), 
    .A1(\shifter/s_offs_r_0 ), .B0(\shifter/s_offs_r_0 ), .A0(s_ptr_data_8), 
    .M1(s_pos_0_3_N_670_1), .M0(s_pos_0_3_N_670_0), 
    .CE(\shifter/mclk_c_enable_231 ), .CLK(mclk_c), .F0(s_desc_addr_1), 
    .Q0(\shifter/rx/s_op_fifo.buf_1_.len_0 ), .F1(\shifter/shift_ctrl/n13 ), 
    .Q1(\shifter/rx/s_op_fifo.buf_1_.len_1 ));
  shifter_rx_SLICE_746 \shifter/rx/SLICE_746 ( .D1(\shifter/rx/s_count_r_3 ), 
    .C1(\shifter/rx/s_count_r_4 ), .B1(\shifter/rx/s_count_r_2 ), 
    .A1(\shifter/n8272 ), .D0(\shifter/rx/s_count_r_5 ), 
    .C0(\shifter/rx/s_count_r_6 ), .B0(\shifter/rx/s_count_r_4 ), 
    .A0(\shifter/rx/n8253 ), .M1(\shifter/rx/s_addr_r1_1 ), 
    .M0(\shifter/rx/s_addr_r1_0 ), .CE(\shifter/mclk_c_enable_204 ), 
    .CLK(mclk_c), .F0(\shifter/rx/n8232 ), .Q0(s_rx_mem_addr_0), 
    .F1(\shifter/rx/n8245 ), .Q1(s_rx_mem_addr_1));
  SLICE_747 SLICE_747( .B1(n1544), .A1(n1543), .C0(s_addr3_2), .B0(s_addr3_0), 
    .A0(s_addr3_3), .M1(fsmc_d_out_15), .M0(fsmc_d_out_14), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_52 ), .CLK(fsmc_clk_c), 
    .F0(n8286), .Q0(\cram_bus/reg_wr_fifo/s_data1_14 ), 
    .F1(\cram_bus/reg_wr_fifo/n7307 ), .Q1(\cram_bus/reg_wr_fifo/s_data1_15 ));
  SLICE_748 SLICE_748( .D1(\cklgen_1khz/s_count_1 ), 
    .C1(\cklgen_1khz/s_count_0 ), .B1(\cklgen_1khz/s_count_8 ), 
    .A1(\cklgen_1khz/s_count_6 ), .B0(\cklgen_1khz/s_count_7 ), 
    .A0(\cklgen_1khz/s_count_5 ), .M1(s_reg_din_11), .M0(s_reg_din_10), 
    .CE(s_ckgen_div_wr_stb), .CLK(mclk_c), .F0(\cklgen_1khz/n7169 ), 
    .Q0(s_ckgen_div_10), .F1(\cklgen_1khz/n7199 ), .Q1(s_ckgen_div_11));
  SLICE_749 SLICE_749( .D1(\shifter/exec_ctrl/s_insn_r0_6 ), 
    .C1(\shifter/exec_ctrl/s_insn_r0_11 ), 
    .B1(\shifter/exec_ctrl/s_insn_r0_5 ), .A1(\shifter/exec_ctrl/s_insn_r0_8 ), 
    .D0(\shifter/exec_ctrl/s_insn_r0_15 ), 
    .C0(\shifter/exec_ctrl/s_insn_r0_7 ), 
    .B0(\shifter/exec_ctrl/s_insn_r0_10 ), 
    .A0(\shifter/exec_ctrl/s_insn_r0_13 ), .M1(s_reg_din_13), 
    .M0(s_reg_din_12), .CE(s_r3_wr_stb), .CLK(mclk_c), 
    .F0(\shifter/exec_ctrl/n20 ), .Q0(s_r3_12), .F1(\shifter/exec_ctrl/n7550 ), 
    .Q1(s_r3_13));
  SLICE_750 SLICE_750( .C1(n2_adj_1633), .B1(\shifter/tckn_stb ), 
    .A1(\shifter/exec_ctrl/busy_N_1509 ), .B0(n7794), .A0(out_get_N_312), 
    .M1(fsmc_d_out_5), .M0(fsmc_d_out_4), 
    .CE(\cram_bus/reg_wr_fifo/fsmc_clk_c_enable_37 ), .CLK(fsmc_clk_c), 
    .F0(s_ckgen_rtdiv_wr_stb), .Q0(\cram_bus/reg_wr_fifo/s_data0_4 ), 
    .F1(\shifter/exec_ctrl/mclk_c_enable_114 ), 
    .Q1(\cram_bus/reg_wr_fifo/s_data0_5 ));
  shifter_ckgen_SLICE_870 \shifter/ckgen/SLICE_870 ( 
    .M1(\shifter/ckgen/s_div_lo_r0_2 ), .M0(\shifter/ckgen/s_div_lo_r0_3 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_div_lo_3 ), 
    .Q1(\shifter/ckgen/s_div_lo_2 ));
  shifter_ckgen_SLICE_871 \shifter/ckgen/SLICE_871 ( 
    .M1(\shifter/ckgen/s_div_lo_r0_4 ), .M0(\shifter/ckgen/s_div_lo_r0_5 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_div_lo_5 ), 
    .Q1(\shifter/ckgen/s_div_lo_4 ));
  shifter_ckgen_SLICE_872 \shifter/ckgen/SLICE_872 ( 
    .M1(\shifter/ckgen/s_div_lo_r0_6 ), .M0(\shifter/ckgen/s_div_lo_r0_7 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_div_lo_7 ), 
    .Q1(\shifter/ckgen/s_div_lo_6 ));
  shifter_ckgen_SLICE_873 \shifter/ckgen/SLICE_873 ( 
    .M1(\shifter/ckgen/s_div_lo_r0_8 ), .M0(\shifter/ckgen/s_div_lo_r0_9 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_div_lo_9 ), 
    .Q1(\shifter/ckgen/s_div_lo_8 ));
  shifter_ckgen_SLICE_878 \shifter/ckgen/SLICE_878 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_2 ), .M0(\shifter/ckgen/s_rtdiv_hi_r0_3 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_3 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_2 ));
  shifter_ckgen_SLICE_879 \shifter/ckgen/SLICE_879 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_4 ), .M0(\shifter/ckgen/s_rtdiv_hi_r0_5 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_5 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_4 ));
  shifter_ckgen_SLICE_880 \shifter/ckgen/SLICE_880 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_6 ), .M0(\shifter/ckgen/s_rtdiv_hi_r0_7 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_7 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_6 ));
  shifter_ckgen_SLICE_881 \shifter/ckgen/SLICE_881 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_8 ), .M0(\shifter/ckgen/s_rtdiv_hi_r0_9 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_9 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_8 ));
  shifter_ckgen_SLICE_884 \shifter/ckgen/SLICE_884 ( .M1(s_ckgen_rtdiv_15), 
    .M0(s_ckgen_rtdiv_2), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_1 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_14 ));
  shifter_ckgen_SLICE_885 \shifter/ckgen/SLICE_885 ( .M1(s_ckgen_rtdiv_3), 
    .M0(s_ckgen_rtdiv_4), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_3 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_2 ));
  shifter_ckgen_SLICE_886 \shifter/ckgen/SLICE_886 ( .M1(s_ckgen_rtdiv_5), 
    .M0(s_ckgen_rtdiv_6), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_5 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_4 ));
  shifter_ckgen_SLICE_887 \shifter/ckgen/SLICE_887 ( .M1(s_ckgen_rtdiv_7), 
    .M0(s_ckgen_rtdiv_8), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_7 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_6 ));
  shifter_ckgen_SLICE_888 \shifter/ckgen/SLICE_888 ( .M1(s_ckgen_rtdiv_1), 
    .M0(s_ckgen_rtdiv_10), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_9 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_0 ));
  shifter_ckgen_SLICE_889 \shifter/ckgen/SLICE_889 ( .M1(s_ckgen_rtdiv_11), 
    .M0(s_ckgen_rtdiv_12), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_11 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_10 ));
  shifter_ckgen_SLICE_890 \shifter/ckgen/SLICE_890 ( .M1(s_ckgen_rtdiv_13), 
    .M0(s_ckgen_rtdiv_14), .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_hi_r0_13 ), 
    .Q1(\shifter/ckgen/s_rtdiv_hi_r0_12 ));
  shifter_ckgen_SLICE_891 \shifter/ckgen/SLICE_891 ( 
    .M1(\shifter/ckgen/s_rtdiv_hi_r0_13 ), 
    .M0(\shifter/ckgen/s_rtdiv_hi_r0_14 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_rtdiv_hi_14 ), .Q1(\shifter/ckgen/s_rtdiv_hi_13 ));
  shifter_ckgen_SLICE_893 \shifter/ckgen/SLICE_893 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_2 ), .M0(\shifter/ckgen/s_rtdiv_lo_r0_3 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_lo_3 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_2 ));
  shifter_ckgen_SLICE_894 \shifter/ckgen/SLICE_894 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_4 ), .M0(\shifter/ckgen/s_rtdiv_lo_r0_5 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_lo_5 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_4 ));
  shifter_ckgen_SLICE_895 \shifter/ckgen/SLICE_895 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_6 ), .M0(\shifter/ckgen/s_rtdiv_lo_r0_7 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_lo_7 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_6 ));
  shifter_ckgen_SLICE_896 \shifter/ckgen/SLICE_896 ( 
    .M1(\shifter/ckgen/s_rtdiv_lo_r0_8 ), .M0(\shifter/ckgen/s_rtdiv_lo_r0_9 ), 
    .CLK(mclk_c), .Q0(\shifter/ckgen/s_rtdiv_lo_9 ), 
    .Q1(\shifter/ckgen/s_rtdiv_lo_8 ));
  shifter_ckgen_SLICE_899 \shifter/ckgen/SLICE_899 ( .M1(\shifter/s_tcken ), 
    .M0(\shifter/ckgen/s_tcken_r0 ), .CLK(mclk_c), 
    .Q0(\shifter/ckgen/s_tcken_r1 ), .Q1(\shifter/ckgen/s_tcken_r0 ));
  tp_rtck tp_rtck_I( .PADDI(tp_rtck_c), .tp_rtck(tp_rtck));
  tp_tdo tp_tdo_I( .PADDI(tp_tdo_c), .tp_tdo(tp_tdo));
  tp_dbgack tp_dbgack_I( .PADDI(tp_dbgack_c), .tp_dbgack(tp_dbgack));
  uart_tx uart_tx_I( .PADDI(uart_tx_c), .uart_tx(uart_tx));
  fsmc_nce fsmc_nce_I( .PADDI(fsmc_nce_c), .fsmc_nce(fsmc_nce));
  fsmc_nwe fsmc_nwe_I( .PADDI(s_cram_next_st_1__N_24_c_0), .fsmc_nwe(fsmc_nwe));
  fsmc_noe fsmc_noe_I( .PADDI(fsmc_noe_c), .fsmc_noe(fsmc_noe));
  fsmc_clk fsmc_clk_I( .PADDI(fsmc_clk_c), .fsmc_clk(fsmc_clk));
  mclk mclk_I( .PADDI(mclk_c), .mclk(mclk));
  led_2 led_2_I( .PADDO(led_2_c), .led_2(led_2));
  led_1 led_1_I( .PADDO(led_1_c), .led_1(led_1));
  tp_rst tp_rst_I( .PADDT(s_cfg_11), .PADDO(GND_net), .tp_rst(tp_rst));
  tp_trst tp_trst_I( .PADDO(tp_trst_c), .tp_trst(tp_trst));
  tp_tms tp_tms_I( .PADDO(tp_tms_c), .tp_tms(tp_tms));
  tp_tdi tp_tdi_I( .PADDO(tp_tdi_c), .tp_tdi(tp_tdi));
  tp_tck tp_tck_I( .PADDO(tp_tck_c), .tp_tck(tp_tck));
  tp_dbgrq tp_dbgrq_I( .PADDO(tp_dbgrq_c), .tp_dbgrq(tp_dbgrq));
  uart_rx uart_rx_I( .PADDO(uart_rx_c), .uart_rx(uart_rx));
  irq irq_I( .PADDO(irq_c), .irq(irq));
  fsmc_d_0_ \fsmc_d[0]_I ( .PADDI(fsmc_d_out_0), .PADDT(n2844), 
    .PADDO(s_cram_dout_0), .fsmcd0(fsmc_d[0]));
  fsmc_d_1_ \fsmc_d[1]_I ( .PADDI(fsmc_d_out_1), .PADDT(n2844), 
    .PADDO(s_cram_dout_1), .fsmcd1(fsmc_d[1]));
  fsmc_d_2_ \fsmc_d[2]_I ( .PADDI(fsmc_d_out_2), .PADDT(n2844), 
    .PADDO(s_cram_dout_2), .fsmcd2(fsmc_d[2]));
  fsmc_d_3_ \fsmc_d[3]_I ( .PADDI(fsmc_d_out_3), .PADDT(n2844), 
    .PADDO(s_cram_dout_3), .fsmcd3(fsmc_d[3]));
  fsmc_d_4_ \fsmc_d[4]_I ( .PADDI(fsmc_d_out_4), .PADDT(n2844), 
    .PADDO(s_cram_dout_4), .fsmcd4(fsmc_d[4]));
  fsmc_d_5_ \fsmc_d[5]_I ( .PADDI(fsmc_d_out_5), .PADDT(n2844), 
    .PADDO(s_cram_dout_5), .fsmcd5(fsmc_d[5]));
  fsmc_d_6_ \fsmc_d[6]_I ( .PADDI(fsmc_d_out_6), .PADDT(n2844), 
    .PADDO(s_cram_dout_6), .fsmcd6(fsmc_d[6]));
  fsmc_d_7_ \fsmc_d[7]_I ( .PADDI(fsmc_d_out_7), .PADDT(n2844), 
    .PADDO(s_cram_dout_7), .fsmcd7(fsmc_d[7]));
  fsmc_d_8_ \fsmc_d[8]_I ( .PADDI(fsmc_d_out_8), .PADDT(n2844), 
    .PADDO(s_cram_dout_8), .fsmcd8(fsmc_d[8]));
  fsmc_d_9_ \fsmc_d[9]_I ( .PADDI(fsmc_d_out_9), .PADDT(n2844), 
    .PADDO(s_cram_dout_9), .fsmcd9(fsmc_d[9]));
  fsmc_d_10_ \fsmc_d[10]_I ( .PADDI(fsmc_d_out_10), .PADDT(n2844), 
    .PADDO(s_cram_dout_10), .fsmcd10(fsmc_d[10]));
  fsmc_d_11_ \fsmc_d[11]_I ( .PADDI(fsmc_d_out_11), .PADDT(n2844), 
    .PADDO(s_cram_dout_11), .fsmcd11(fsmc_d[11]));
  fsmc_d_12_ \fsmc_d[12]_I ( .PADDI(fsmc_d_out_12), .PADDT(n2844), 
    .PADDO(s_cram_dout_12), .fsmcd12(fsmc_d[12]));
  fsmc_d_13_ \fsmc_d[13]_I ( .PADDI(fsmc_d_out_13), .PADDT(n2844), 
    .PADDO(s_cram_dout_13), .fsmcd13(fsmc_d[13]));
  fsmc_d_14_ \fsmc_d[14]_I ( .PADDI(fsmc_d_out_14), .PADDT(n2844), 
    .PADDO(s_cram_dout_14), .fsmcd14(fsmc_d[14]));
  fsmc_d_15_ \fsmc_d[15]_I ( .PADDI(fsmc_d_out_15), .PADDT(n2844), 
    .PADDO(s_cram_dout_15), .fsmcd15(fsmc_d[15]));
  GSR_INST GSR_INST( .GSRNET(~s_cfg_6));
  desc_mem_n25380 \desc_mem/n25380 ( .DIA8(fsmc_d_out_8), .DIA7(fsmc_d_out_7), 
    .DIA6(fsmc_d_out_6), .DIA5(fsmc_d_out_5), .DIA4(fsmc_d_out_4), 
    .DIA3(fsmc_d_out_3), .DIA2(fsmc_d_out_2), .DIA1(fsmc_d_out_1), 
    .DIA0(fsmc_d_out_0), .ADA11(q_15__N_66), .ADA10(q_15__N_68), 
    .ADA9(q_15__N_70), .ADA8(q_15__N_72), .ADA7(q_15__N_74), .ADA6(q_15__N_76), 
    .ADA5(q_15__N_78), .ADA4(n8856), .DOA8(s_desc_data_24), 
    .DOA7(s_desc_data_23), .DOA6(s_desc_data_22), .DOA5(s_desc_data_21), 
    .DOA4(s_desc_data_20), .DOA3(s_desc_data_19), .DOA2(s_desc_data_18), 
    .DOA1(s_desc_data_17), .DOA0(s_desc_data_16), .CEA(s_we_hi), 
    .CLKA(fsmc_clk_c), .CLKB(mclk_c), .DOB0(s_desc_data_25), 
    .DOB1(s_desc_data_26), .DOB2(s_desc_data_27), .DOB3(s_desc_data_28), 
    .DOB4(s_desc_data_29), .DOB5(s_desc_data_30), .DOB6(s_desc_data_31), 
    .ADB4(s_desc_addr_1), .ADB5(s_desc_addr_2), .ADB6(s_desc_addr_3), 
    .ADB7(s_desc_addr_4), .ADB8(s_desc_addr_5), .ADB9(s_desc_addr_6), 
    .ADB10(s_desc_addr_7), .ADB11(s_desc_addr_8), .DIB0(fsmc_d_out_9), 
    .DIB1(fsmc_d_out_10), .DIB2(fsmc_d_out_11), .DIB3(fsmc_d_out_12), 
    .DIB4(fsmc_d_out_13), .DIB5(fsmc_d_out_14), .DIB6(fsmc_d_out_15));
  desc_mem_n25370 \desc_mem/n25370 ( .DIA8(fsmc_d_out_8), .DIA7(fsmc_d_out_7), 
    .DIA6(fsmc_d_out_6), .DIA5(fsmc_d_out_5), .DIA4(fsmc_d_out_4), 
    .DIA3(fsmc_d_out_3), .DIA2(fsmc_d_out_2), .DIA1(fsmc_d_out_1), 
    .DIA0(fsmc_d_out_0), .ADA11(q_15__N_66), .ADA10(q_15__N_68), 
    .ADA9(q_15__N_70), .ADA8(q_15__N_72), .ADA7(q_15__N_74), .ADA6(q_15__N_76), 
    .ADA5(q_15__N_78), .ADA4(n8854), .DOA8(s_desc_data_8), 
    .DOA7(s_desc_data_7), .DOA6(s_desc_data_6), .DOA5(s_desc_data_5), 
    .DOA4(s_desc_data_4), .DOA3(s_pos_0_3_N_670_3), .DOA2(s_pos_0_3_N_670_2), 
    .DOA1(s_pos_0_3_N_670_1), .DOA0(s_pos_0_3_N_670_0), .CEA(s_we_lo), 
    .CLKA(fsmc_clk_c), .CLKB(mclk_c), .DOB0(s_desc_data_9), 
    .DOB1(s_desc_data_10), .DOB2(s_desc_data_11), .DOB3(s_desc_data_12), 
    .DOB4(s_desc_data_13), .DOB5(s_desc_data_14), .DOB6(s_desc_data_15), 
    .ADB4(s_desc_addr_1), .ADB5(s_desc_addr_2), .ADB6(s_desc_addr_3), 
    .ADB7(s_desc_addr_4), .ADB8(s_desc_addr_5), .ADB9(s_desc_addr_6), 
    .ADB10(s_desc_addr_7), .ADB11(s_desc_addr_8), .DIB0(fsmc_d_out_9), 
    .DIB1(fsmc_d_out_10), .DIB2(fsmc_d_out_11), .DIB3(fsmc_d_out_12), 
    .DIB4(fsmc_d_out_13), .DIB5(fsmc_d_out_14), .DIB6(fsmc_d_out_15));
  ptr_mem_mem0 \ptr_mem/mem0 ( .DIA8(fsmc_d_out_8), .DIA7(fsmc_d_out_7), 
    .DIA6(fsmc_d_out_6), .DIA5(fsmc_d_out_5), .DIA4(fsmc_d_out_4), 
    .DIA3(fsmc_d_out_3), .DIA2(fsmc_d_out_2), .DIA1(fsmc_d_out_1), 
    .DIA0(fsmc_d_out_0), .ADA11(q_15__N_68), .ADA10(q_15__N_70), 
    .ADA9(q_15__N_72), .ADA8(q_15__N_74), .ADA7(q_15__N_76), .ADA6(q_15__N_78), 
    .ADA5(q_15__N_80), .ADA4(q_15__N_82), .DOA8(s_ptr_data_8), 
    .DOA7(s_ptr_data_7), .DOA6(s_ptr_data_6), .DOA5(s_ptr_data_5), 
    .DOA4(s_ptr_data_4), .DOA3(s_ptr_data_3), .DOA2(s_ptr_data_2), 
    .DOA1(s_ptr_data_1), .DOA0(s_ptr_data_0), .CEA(s_ptr_mem_wr_stb), 
    .CLKA(fsmc_clk_c), .CLKB(mclk_c), .DOB0(s_ptr_data_9), 
    .DOB1(s_ptr_data_10), .DOB2(s_ptr_data_11), .DOB3(s_ptr_data_12), 
    .DOB4(s_ptr_data_13), .DOB5(s_ptr_data_14), .DOB6(s_ptr_data_15), 
    .ADB4(s_ptr_addr_1), .ADB5(s_ptr_addr_2), .ADB6(s_ptr_addr_3), 
    .ADB7(s_ptr_addr_4), .ADB8(s_ptr_addr_5), .ADB9(s_ptr_addr_6), 
    .ADB10(s_ptr_addr_7), .ADB11(s_ptr_addr_8), .DIB0(fsmc_d_out_9), 
    .DIB1(fsmc_d_out_10), .DIB2(fsmc_d_out_11), .DIB3(fsmc_d_out_12), 
    .DIB4(fsmc_d_out_13), .DIB5(fsmc_d_out_14), .DIB6(fsmc_d_out_15));
  aux_mem_mem0 \aux_mem/mem0 ( .DIA8(fsmc_d_out_8), .DIA7(fsmc_d_out_7), 
    .DIA6(fsmc_d_out_6), .DIA5(fsmc_d_out_5), .DIA4(fsmc_d_out_4), 
    .DIA3(fsmc_d_out_3), .DIA2(fsmc_d_out_2), .DIA1(fsmc_d_out_1), 
    .DIA0(fsmc_d_out_0), .ADA10(q_15__N_68), .ADA9(q_15__N_70), 
    .ADA8(q_15__N_72), .ADA7(q_15__N_74), .ADA6(q_15__N_76), .ADA5(q_15__N_78), 
    .ADA4(n8855), .ADA3(n8852), .DOA8(s_aux_mem_dout_8), 
    .DOA7(s_aux_mem_dout_7), .DOA6(s_aux_mem_dout_6), .DOA5(s_aux_mem_dout_5), 
    .DOA4(s_aux_mem_dout_4), .DOA3(s_aux_mem_dout_3), .DOA2(s_aux_mem_dout_2), 
    .DOA1(s_aux_mem_dout_1), .DOA0(s_aux_mem_dout_0), .WEA(s_aux_mem_wr_stb), 
    .CLKA(fsmc_clk_c), .CLKB(fsmc_clk_c), .WEB(s_aux_mem_wr_stb), 
    .DOB0(s_aux_mem_dout_9), .DOB1(s_aux_mem_dout_10), 
    .DOB2(s_aux_mem_dout_11), .DOB3(s_aux_mem_dout_12), 
    .DOB4(s_aux_mem_dout_13), .DOB5(s_aux_mem_dout_14), 
    .DOB6(s_aux_mem_dout_15), .ADB1(VCC_net), .ADB3(n8852), .ADB4(n8855), 
    .ADB5(q_15__N_78), .ADB6(q_15__N_76), .ADB7(q_15__N_74), .ADB8(q_15__N_72), 
    .ADB9(q_15__N_70), .ADB10(q_15__N_68), .ADB12(VCC_net), 
    .DIB0(fsmc_d_out_9), .DIB1(fsmc_d_out_10), .DIB2(fsmc_d_out_11), 
    .DIB3(fsmc_d_out_12), .DIB4(fsmc_d_out_13), .DIB5(fsmc_d_out_14), 
    .DIB6(fsmc_d_out_15));
  rx_mem_mem1 \rx_mem/mem1 ( .DIA8(s_rx_mem_din_8), .DIA7(s_rx_mem_din_7), 
    .DIA6(s_rx_mem_din_6), .DIA5(s_rx_mem_din_5), .DIA4(s_rx_mem_din_4), 
    .DIA3(s_rx_mem_din_3), .DIA2(s_rx_mem_din_2), .DIA1(s_rx_mem_din_1), 
    .DIA0(s_rx_mem_din_0), .ADA12(s_rx_mem_addr_8), .ADA11(s_rx_mem_addr_7), 
    .ADA10(s_rx_mem_addr_6), .ADA9(s_rx_mem_addr_5), .ADA8(s_rx_mem_addr_4), 
    .ADA7(s_rx_mem_addr_3), .ADA6(s_rx_mem_addr_2), .ADA5(s_rx_mem_addr_1), 
    .ADA4(s_rx_mem_addr_0), .DOA8(n2570), .DOA7(n2569), .DOA6(n2568), 
    .DOA5(n2567), .DOA4(n2566), .DOA3(n2565), .DOA2(n2564), .DOA1(n2563), 
    .DOA0(n2562), .CEA(\rx_mem/mclk_c_enable_28 ), .CLKA(mclk_c), 
    .CLKB(fsmc_clk_c), .DOB0(n2571), .DOB1(n2572), .DOB2(n2573), .DOB3(n2574), 
    .DOB4(n2575), .DOB5(n2576), .DOB6(n2577), .ADB4(q_15__N_82), 
    .ADB5(q_15__N_80), .ADB6(q_15__N_78), .ADB7(q_15__N_76), .ADB8(q_15__N_74), 
    .ADB9(q_15__N_72), .ADB10(q_15__N_70), .ADB11(q_15__N_68), 
    .ADB12(q_15__N_66), .DIB0(s_rx_mem_din_9), .DIB1(s_rx_mem_din_10), 
    .DIB2(s_rx_mem_din_11), .DIB3(s_rx_mem_din_12), .DIB4(s_rx_mem_din_13), 
    .DIB5(s_rx_mem_din_14), .DIB6(s_rx_mem_din_15));
  rx_mem_mem0 \rx_mem/mem0 ( .DIA8(s_rx_mem_din_8), .DIA7(s_rx_mem_din_7), 
    .DIA6(s_rx_mem_din_6), .DIA5(s_rx_mem_din_5), .DIA4(s_rx_mem_din_4), 
    .DIA3(s_rx_mem_din_3), .DIA2(s_rx_mem_din_2), .DIA1(s_rx_mem_din_1), 
    .DIA0(s_rx_mem_din_0), .ADA12(s_rx_mem_addr_8), .ADA11(s_rx_mem_addr_7), 
    .ADA10(s_rx_mem_addr_6), .ADA9(s_rx_mem_addr_5), .ADA8(s_rx_mem_addr_4), 
    .ADA7(s_rx_mem_addr_3), .ADA6(s_rx_mem_addr_2), .ADA5(s_rx_mem_addr_1), 
    .ADA4(s_rx_mem_addr_0), .DOA8(n2554), .DOA7(n2553), .DOA6(n2552), 
    .DOA5(n2551), .DOA4(n2550), .DOA3(n2549), .DOA2(n2548), .DOA1(n2547), 
    .DOA0(n2546), .CEA(\rx_mem/mclk_c_enable_34 ), .CLKA(mclk_c), 
    .CLKB(fsmc_clk_c), .DOB0(n2555), .DOB1(n2556), .DOB2(n2557), .DOB3(n2558), 
    .DOB4(n2559), .DOB5(n2560), .DOB6(n2561), .ADB4(q_15__N_82), 
    .ADB5(q_15__N_80), .ADB6(q_15__N_78), .ADB7(q_15__N_76), .ADB8(q_15__N_74), 
    .ADB9(q_15__N_72), .ADB10(q_15__N_70), .ADB11(q_15__N_68), 
    .ADB12(q_15__N_66), .DIB0(s_rx_mem_din_9), .DIB1(s_rx_mem_din_10), 
    .DIB2(s_rx_mem_din_11), .DIB3(s_rx_mem_din_12), .DIB4(s_rx_mem_din_13), 
    .DIB5(s_rx_mem_din_14), .DIB6(s_rx_mem_din_15));
  tx_mem_mem0 \tx_mem/mem0 ( .DIA8(fsmc_d_out_8), .DIA7(fsmc_d_out_7), 
    .DIA6(fsmc_d_out_6), .DIA5(fsmc_d_out_5), .DIA4(fsmc_d_out_4), 
    .DIA3(fsmc_d_out_3), .DIA2(fsmc_d_out_2), .DIA1(fsmc_d_out_1), 
    .DIA0(fsmc_d_out_0), .ADA12(q_15__N_66), .ADA11(q_15__N_68), 
    .ADA10(q_15__N_70), .ADA9(q_15__N_72), .ADA8(q_15__N_74), 
    .ADA7(q_15__N_76), .ADA6(q_15__N_78), .ADA5(q_15__N_80), .ADA4(q_15__N_82), 
    .DOA8(n2591), .DOA7(n2590), .DOA6(n2589), .DOA5(n2588), .DOA4(n2587), 
    .DOA3(n2586), .DOA2(n2585), .DOA1(n2584), .DOA0(n2583), 
    .CEA(fsmc_clk_c_enable_1), .CLKA(fsmc_clk_c), .CLKB(mclk_c), .DOB0(n2592), 
    .DOB1(n2593), .DOB2(n2594), .DOB3(n2595), .DOB4(n2596), .DOB5(n2597), 
    .DOB6(n2598), .ADB4(s_addr_0_0), .ADB5(s_addr_0_1), .ADB6(s_addr_0_2), 
    .ADB7(s_addr_0_3), .ADB8(s_addr_0_4), .ADB9(s_addr_0_5), 
    .ADB10(s_addr_0_6), .ADB11(s_addr_0_7), .ADB12(s_addr_0_8), 
    .DIB0(fsmc_d_out_9), .DIB1(fsmc_d_out_10), .DIB2(fsmc_d_out_11), 
    .DIB3(fsmc_d_out_12), .DIB4(fsmc_d_out_13), .DIB5(fsmc_d_out_14), 
    .DIB6(fsmc_d_out_15));
  tx_mem_mem1 \tx_mem/mem1 ( .DIA8(fsmc_d_out_8), .DIA7(fsmc_d_out_7), 
    .DIA6(fsmc_d_out_6), .DIA5(fsmc_d_out_5), .DIA4(fsmc_d_out_4), 
    .DIA3(fsmc_d_out_3), .DIA2(fsmc_d_out_2), .DIA1(fsmc_d_out_1), 
    .DIA0(fsmc_d_out_0), .ADA12(q_15__N_66), .ADA11(q_15__N_68), 
    .ADA10(q_15__N_70), .ADA9(q_15__N_72), .ADA8(q_15__N_74), 
    .ADA7(q_15__N_76), .ADA6(q_15__N_78), .ADA5(n8857), .ADA4(n8853), 
    .DOA8(n2607), .DOA7(n2606), .DOA6(n2605), .DOA5(n2604), .DOA4(n2603), 
    .DOA3(n2602), .DOA2(n2601), .DOA1(n2600), .DOA0(n2599), 
    .CEA(fsmc_clk_c_enable_2), .CLKA(fsmc_clk_c), .CLKB(mclk_c), .DOB0(n2608), 
    .DOB1(n2609), .DOB2(n2610), .DOB3(n2611), .DOB4(n2612), .DOB5(n2613), 
    .DOB6(n2614), .ADB4(s_addr_0_0), .ADB5(s_addr_0_1), .ADB6(s_addr_0_2), 
    .ADB7(s_addr_0_3), .ADB8(s_addr_0_4), .ADB9(s_addr_0_5), 
    .ADB10(s_addr_0_6), .ADB11(s_addr_0_7), .ADB12(s_addr_0_8), 
    .DIB0(fsmc_d_out_9), .DIB1(fsmc_d_out_10), .DIB2(fsmc_d_out_11), 
    .DIB3(fsmc_d_out_12), .DIB4(fsmc_d_out_13), .DIB5(fsmc_d_out_14), 
    .DIB6(fsmc_d_out_15));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module cklgen_1khz_SLICE_0 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \cklgen_1khz/s_count_753__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \cklgen_1khz/s_count_753__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \cklgen_1khz/s_count_753_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module cklgen_1khz_SLICE_1 ( input A0, DI0, CE, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \cklgen_1khz/s_count_753__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \cklgen_1khz/s_count_753_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module cklgen_1khz_SLICE_2 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \cklgen_1khz/s_count_753__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \cklgen_1khz/s_count_753__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \cklgen_1khz/s_count_753_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cklgen_1khz_SLICE_3 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \cklgen_1khz/s_count_753__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \cklgen_1khz/s_count_753__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \cklgen_1khz/s_count_753_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cklgen_1khz_SLICE_4 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \cklgen_1khz/s_count_753__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \cklgen_1khz/s_count_753_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module cklgen_1khz_SLICE_5 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \cklgen_1khz/s_count_753__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \cklgen_1khz/s_count_753__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \cklgen_1khz/s_count_753_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cklgen_1mhz_SLICE_6 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \cklgen_1mhz/s_count_752__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \cklgen_1mhz/s_count_752_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cklgen_1mhz_SLICE_7 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \cklgen_1mhz/s_count_752__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \cklgen_1mhz/s_count_752_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cklgen_1mhz_SLICE_8 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \cklgen_1mhz/s_count_752__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \cklgen_1mhz/s_count_752__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \cklgen_1mhz/s_count_752_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cklgen_1mhz_SLICE_9 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \cklgen_1mhz/s_count_752__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \cklgen_1mhz/s_count_752__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \cklgen_1mhz/s_count_752_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_tx_SLICE_10 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/tx/s_addr_r_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/tx/s_addr_r_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \shifter/tx/add_516_11 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1());

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0003 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h569a;
  defparam inst1.INIT1 = 16'h569a;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_tx_SLICE_11 ( input D1, C1, B1, D0, C0, B0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/tx/s_addr_r_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/tx/s_addr_r_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20004 \shifter/tx/add_516_9 ( .A0(GNDI), .B0(B0), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_tx_SLICE_12 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/tx/s_addr_r_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/tx/s_addr_r_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \shifter/tx/add_516_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h74b8;
  defparam inst1.INIT1 = 16'h74b8;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_tx_SLICE_13 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/tx/s_addr_r_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/tx/s_addr_r_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \shifter/tx/add_516_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_tx_SLICE_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/tx/s_addr_r_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/tx/s_addr_r_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20005 \shifter/tx/add_516_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_15 ( input B1, A1, M1, M0, CE, CLK, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20007 \shifter/tx/add_516_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0006 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'hffff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_16 ( input A0, M1, M0, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20008 \shifter/shift_ctrl/add_191_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_17 ( input A1, A0, M1, M0, CE, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \shifter/shift_ctrl/add_191_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_18 ( input A1, A0, M1, M0, CE, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \shifter/shift_ctrl/add_191_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_19 ( input A1, A0, M1, M0, CE, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \shifter/shift_ctrl/add_191_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_20 ( input A1, M1, M0, CE, CLK, output Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20010 \shifter/shift_ctrl/add_191_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_21 ( input D0, C0, B0, A0, M1, M0, CE, CLK, FCI, output 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20011 \shifter/shift_ctrl/s_offs_r_7__I_0_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'hFFFF;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_22 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, FCI, output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/shift_ctrl/s_offs_r_7__I_0_7 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9009;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "YES";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module shifter_SLICE_23 ( input D1, C1, B1, A1, M1, M0, CE, CLK, output Q0, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20013 \shifter/shift_ctrl/s_offs_r_7__I_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module shifter_SLICE_24 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 \shifter/shift_ctrl/desc_base_7__I_0_8 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_25 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 \shifter/shift_ctrl/desc_base_7__I_0_6 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_26 ( input B1, A1, B0, A0, M1, M0, CE, CLK, FCI, output 
    F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20014 \shifter/shift_ctrl/desc_base_7__I_0_4 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_27 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20015 \shifter/shift_ctrl/desc_base_7__I_0_2 ( .A0(A0), .B0(B0), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5666;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_rx_SLICE_28 ( input A0, DI0, CE, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 \shifter/rx/add_518_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_29 ( input A1, A0, DI1, DI0, CE, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i8 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20009 \shifter/rx/add_518_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_30 ( input A1, C0, B0, A0, DI1, DI0, CE, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i6 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20016 \shifter/rx/add_518_7 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7878;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_rx_SLICE_31 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i4 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i3 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20017 \shifter/rx/add_518_5 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7878;
  defparam inst1.INIT1 = 16'h7878;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_rx_SLICE_32 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i2 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20017 \shifter/rx/add_518_3 ( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_33 ( input C1, B1, A1, DI1, CE, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..addr_i0_i0 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20018 \shifter/rx/add_518_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h7878;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_SLICE_34 ( input D0, C0, B0, A0, M1, M0, LSR, CLK, FCI, output 
    Q0, F1, Q1 );
  wire   VCCI, GNDI, LSR_NOTIN, M1_dly, CLK_dly, M0_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_tck_r1_114 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre \shifter/ckgen/s_rtcken_reg_116 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  ccu20011 \shifter/exec_ctrl/s_cnt_reg_7__I_0_8 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), 
    .S1(F1), .CO1());

  specify
    (D0 => F1) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module shifter_SLICE_35 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, LSR, 
    CLK, FCI, output Q0, FCO );
  wire   VCCI, GNDI, LSR_NOTIN, M0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_rtck_tmo_117 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  ccu20012 \shifter/exec_ctrl/s_cnt_reg_7__I_0_7 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_36 ( input D1, C1, B1, A1, M0, LSR, CLK, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_rtck_r1_111 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20013 \shifter/exec_ctrl/s_cnt_reg_7__I_0_0 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_37 ( input A0, DI0, CE, LSR, CLK, FCI, output 
    F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20008 \shifter/exec_ctrl/add_108_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_38 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20009 \shifter/exec_ctrl/add_108_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_39 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20009 \shifter/exec_ctrl/add_108_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_40 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20009 \shifter/exec_ctrl/add_108_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_41 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/exec_ctrl/s_cnt_reg__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20010 \shifter/exec_ctrl/add_108_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_42 ( input M1, M0, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20019 \shifter/ckgen/s_cnt_hi_r_14__I_0_15 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hFFFF;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_43 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/ckgen/s_cnt_lo_r_14__I_0_13 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_44 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_45 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/ckgen/s_cnt_hi_r_14__I_0_15_4815 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_46 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_47 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_48 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_49 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/ckgen/s_cnt_hi_r_14__I_0_13 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_50 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \shifter/ckgen/s_cnt_lo_r_755_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/ckgen/s_cnt_lo_r_14__I_0_11 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_52 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_53 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \shifter/ckgen/s_cnt_hi_r_756_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_54 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_55 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_56 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_57 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_58 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_lo_r_755__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_lo_r_755_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_59 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_15 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_ckgen_SLICE_60 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_13 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_61 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_11 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_62 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_9 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_63 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_64 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_sel_out_FSM_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_sel_out_FSM_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/ckgen/s_cnt_hi_r_14__I_0_11 ( .A0(A0), .B0(B0), .C0(C0), 
    .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_65 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_66 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/ckgen/s_rtdiv_lo_r0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_92_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0021 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module shifter_ckgen_SLICE_67 ( input B1, A1, DI1, M0, CLK, output Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_r0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \shifter/ckgen/sub_92_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module shifter_ckgen_SLICE_68 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i15 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_15 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_69 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output Q0, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_sel_out_FSM_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \cram_bus/reg_wr_fifo/s_sel_out_FSM_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20023 \shifter/ckgen/s_cnt_hi_r_14__I_0_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9000;
  defparam inst1.INIT1 = 16'h9009;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "YES";
endmodule

module shifter_ckgen_SLICE_70 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_13 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_71 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_11 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_72 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_9 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_73 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_7 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_74 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_5 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_75 ( input B1, A1, B0, A0, DI1, DI0, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/ckgen/s_div_lo_r0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20020 \shifter/ckgen/sub_91_add_2_3 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_76 ( input M1, M0, CE, CLK, FCI, output F0, Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20019 \shifter/ckgen/s_cnt_lo_r_14__I_0_15 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_77 ( input B1, A1, DI1, M0, CLK, output Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_r0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_syn_sel1_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20022 \shifter/ckgen/sub_91_add_2_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_78 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output Q0, Q1, 
    FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20023 \shifter/ckgen/s_cnt_lo_r_14__I_0_0 ( .A0(A0), .B0(B0), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(GNDI), .S0(), .S1(), 
    .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_79 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_80 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_81 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_82 ( input A1, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/ckgen/s_cnt_hi_r_756__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \shifter/ckgen/s_cnt_hi_r_756_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_83 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, FCI, 
    output Q0, Q1, FCO );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  vmuxregsre0003 \desc_hi/s_reg_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_hi/s_reg_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu20012 \shifter/ckgen/s_cnt_lo_r_14__I_0_15_4814 ( .A0(A0), .B0(B0), 
    .C0(C0), .D0(D0), .A1(A1), .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(), 
    .S1(), .CO1(FCO));

  specify
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_addr_r_SLICE_84 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \cram_bus/addr_r/q_11__I_29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \cram_bus/addr_r/q_12__I_27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_11__191 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_12__192 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_SLICE_85 ( input B0, A0, DI0, LSR, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40024 \cram_bus/i136_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0025 \cram_bus/s_cram_st_FSM_i0 ( .D0(GNDI), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/s_cram_st_FSM_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0025 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module cram_bus_reg_wr_fifo_SLICE_121 ( input B1, A1, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40026 \cram_bus/reg_wr_fifo/i4847_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 \cram_bus/reg_wr_fifo/i4845_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_sel_in_754__i1 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_sel_in_754__i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_SLICE_124 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, LSR_dly;

  lut40028 \cram_bus/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \cram_bus/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/s_cram_st_FSM_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/s_cram_st_FSM_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_addr_r_SLICE_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    M1, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40030 \cram_bus/addr_r/q_15__I_7_2_lut_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut4 \cram_bus/addr_r/q_15__I_6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_0__180 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_15__195 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_SLICE_128 ( input C1, B1, A1, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40031 \cram_bus/reg_wr_fifo/i1_2_lut_3_lut_adj_201 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \cram_bus/cram_nwe_I_0_149_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \cram_bus/s_op_mem_rd_133 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_SLICE_129 ( input B1, A1, B0, A0, DI0, CE, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40033 \cram_bus/i1146_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40034 \cram_bus/i6080_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre \cram_bus/s_op_mem_wr_132 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40035 \cram_bus/addr_r/s_reg_rd_sel_3__I_0_Mux_1_i15_4_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 s_reg_rd_sel_3__I_0_Mux_0_i15_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7340) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_SLICE_131 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40035 \cram_bus/addr_r/s_reg_rd_sel_3__I_0_Mux_3_i15_4_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 \cram_bus/addr_r/s_reg_rd_sel_3__I_0_Mux_2_i15_4_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_132 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_132/SLICE_132_K1_H1 , 
         \SLICE_132/s_reg_rd_sel_3__I_0_Mux_4_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_132_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_132/SLICE_132_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_4_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_132/s_reg_rd_sel_3__I_0_Mux_4_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_132_K0K1MUX( 
    .D0(\SLICE_132/s_reg_rd_sel_3__I_0_Mux_4_i15/GATE_H0 ), 
    .D1(\SLICE_132/SLICE_132_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5140) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_133 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_133/SLICE_133_K1_H1 , 
         \SLICE_133/s_reg_rd_sel_3__I_0_Mux_5_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_133_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_133/SLICE_133_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_5_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_133/s_reg_rd_sel_3__I_0_Mux_5_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_133_K0K1MUX( 
    .D0(\SLICE_133/s_reg_rd_sel_3__I_0_Mux_5_i15/GATE_H0 ), 
    .D1(\SLICE_133/SLICE_133_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_134 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CLK, output OFX0, 
    Q0 );
  wire   \SLICE_134/SLICE_134_K1_H1 , GNDI, 
         \SLICE_134/s_reg_rd_sel_3__I_0_Mux_6_i15/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40039 SLICE_134_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_134/SLICE_134_K1_H1 ));
  lut40040 \s_reg_rd_sel_3__I_0_Mux_6_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(\SLICE_134/s_reg_rd_sel_3__I_0_Mux_6_i15/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_134_K0K1MUX( 
    .D0(\SLICE_134/s_reg_rd_sel_3__I_0_Mux_6_i15/GATE_H0 ), 
    .D1(\SLICE_134/SLICE_134_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7340) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_135 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_135/SLICE_135_K1_H1 , 
         \SLICE_135/s_reg_rd_sel_3__I_0_Mux_7_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_135_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_135/SLICE_135_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_7_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_135/s_reg_rd_sel_3__I_0_Mux_7_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_135_K0K1MUX( 
    .D0(\SLICE_135/s_reg_rd_sel_3__I_0_Mux_7_i15/GATE_H0 ), 
    .D1(\SLICE_135/SLICE_135_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_136 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_136/SLICE_136_K1_H1 , 
         \SLICE_136/s_reg_rd_sel_3__I_0_Mux_8_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_136_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_136/SLICE_136_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_8_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_136/s_reg_rd_sel_3__I_0_Mux_8_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_136_K0K1MUX( 
    .D0(\SLICE_136/s_reg_rd_sel_3__I_0_Mux_8_i15/GATE_H0 ), 
    .D1(\SLICE_136/SLICE_136_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_137 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_137/SLICE_137_K1_H1 , 
         \SLICE_137/s_reg_rd_sel_3__I_0_Mux_9_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_137_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_137/SLICE_137_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_9_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_137/s_reg_rd_sel_3__I_0_Mux_9_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_137_K0K1MUX( 
    .D0(\SLICE_137/s_reg_rd_sel_3__I_0_Mux_9_i15/GATE_H0 ), 
    .D1(\SLICE_137/SLICE_137_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_138 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_138/SLICE_138_K1_H1 , 
         \SLICE_138/s_reg_rd_sel_3__I_0_Mux_10_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_138_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_138/SLICE_138_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_10_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_138/s_reg_rd_sel_3__I_0_Mux_10_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_138_K0K1MUX( 
    .D0(\SLICE_138/s_reg_rd_sel_3__I_0_Mux_10_i15/GATE_H0 ), 
    .D1(\SLICE_138/SLICE_138_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_139 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_139/SLICE_139_K1_H1 , 
         \SLICE_139/s_reg_rd_sel_3__I_0_Mux_11_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40037 SLICE_139_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_139/SLICE_139_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_11_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_139/s_reg_rd_sel_3__I_0_Mux_11_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_139_K0K1MUX( 
    .D0(\SLICE_139/s_reg_rd_sel_3__I_0_Mux_11_i15/GATE_H0 ), 
    .D1(\SLICE_139/SLICE_139_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_140 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_140/SLICE_140_K1_H1 , 
         \SLICE_140/s_reg_rd_sel_3__I_0_Mux_12_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40041 SLICE_140_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_140/SLICE_140_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_12_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_140/s_reg_rd_sel_3__I_0_Mux_12_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_140_K0K1MUX( 
    .D0(\SLICE_140/s_reg_rd_sel_3__I_0_Mux_12_i15/GATE_H0 ), 
    .D1(\SLICE_140/SLICE_140_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_141/SLICE_141_K1_H1 , 
         \SLICE_141/s_reg_rd_sel_3__I_0_Mux_13_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40041 SLICE_141_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_141/SLICE_141_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_13_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_141/s_reg_rd_sel_3__I_0_Mux_13_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_141_K0K1MUX( 
    .D0(\SLICE_141/s_reg_rd_sel_3__I_0_Mux_13_i15/GATE_H0 ), 
    .D1(\SLICE_141/SLICE_141_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_142/SLICE_142_K1_H1 , 
         \SLICE_142/s_reg_rd_sel_3__I_0_Mux_14_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40041 SLICE_142_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_142/SLICE_142_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_14_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_142/s_reg_rd_sel_3__I_0_Mux_14_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_142_K0K1MUX( 
    .D0(\SLICE_142/s_reg_rd_sel_3__I_0_Mux_14_i15/GATE_H0 ), 
    .D1(\SLICE_142/SLICE_142_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, output 
    OFX0, Q0 );
  wire   \SLICE_143/SLICE_143_K1_H1 , 
         \SLICE_143/s_reg_rd_sel_3__I_0_Mux_15_i15/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40041 SLICE_143_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_143/SLICE_143_K1_H1 ));
  lut40038 \s_reg_rd_sel_3__I_0_Mux_15_i15/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(\SLICE_143/s_reg_rd_sel_3__I_0_Mux_15_i15/GATE_H0 ));
  vmuxregsre0003 \cram_bus/s_reg_rd_data_i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_143_K0K1MUX( 
    .D0(\SLICE_143/s_reg_rd_sel_3__I_0_Mux_15_i15/GATE_H0 ), 
    .D1(\SLICE_143/SLICE_143_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_145 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40042 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \tx_mem/_1103 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 s_irq_out_65( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCE0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40044 \led_run_drv/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \led_run_drv/i2318_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_syn_sel0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \led_run_drv/s_drv_ff_32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_147 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40044 \led_con_drv/i4_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \led_con_drv/i2320_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_syn_sel0_i0 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \led_con_drv/s_drv_ff_32 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module led_con_drv_SLICE_148 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40046 \led_con_drv/z_I_0_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \led_con_drv/i1809_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0048 \led_con_drv/s_count_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F2F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0048 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3JY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module led_con_drv_SLICE_149 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40049 \led_con_drv/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \led_con_drv/i1_2_lut_adj_200 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0048 \led_con_drv/s_count_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0048 \led_con_drv/s_count_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE1E1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module led_con_drv_SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40051 \led_con_drv/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \led_con_drv/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0048 \led_con_drv/s_count_i0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0048 \led_con_drv/s_count_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40053 i1_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 \cram_bus/i1_2_lut_rep_174_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \led_con_drv/s_trip_r1_31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \led_con_drv/s_trip_r0_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module led_run_drv_SLICE_152 ( input C1, B1, A1, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40046 \led_run_drv/z_I_0_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \led_run_drv/i1814_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0048 \led_run_drv/s_count_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module led_run_drv_SLICE_153 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40049 \led_run_drv/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 \led_run_drv/i1_2_lut_adj_203 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0048 \led_run_drv/s_count_i0_i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0048 \led_run_drv/s_count_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module led_run_drv_SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40051 \led_run_drv/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \led_run_drv/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0048 \led_run_drv/s_count_i0_i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0048 \led_run_drv/s_count_i0_i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_155 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40055 \cram_bus/reg_wr_fifo/s_syn_sel1_1__I_0_i2_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \cram_bus/reg_wr_fifo/s_syn_sel1_1__I_0_i3_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \led_run_drv/s_trip_r1_31 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \led_run_drv/s_trip_r0_30 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5656) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_160 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40057 s_desc_lo_10__bdd_3_lut_6234( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \cram_bus/addr_r/q_0__I_51_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_0__180_rep_224 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_0__180_rep_223 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_addr_r_SLICE_161 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40058 \cram_bus/addr_r/q_15__I_21_2_lut_rep_199 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \cram_bus/addr_r/q_1__I_49_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_1__181_rep_226 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_1__181_rep_225 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_addr_r_SLICE_163 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \cram_bus/addr_r/q_13__I_25_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \cram_bus/addr_r/q_14__I_23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_13__193 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_14__194 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_addr_r_SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \cram_bus/addr_r/q_9__I_33_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \cram_bus/addr_r/q_10__I_31_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_9__189 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_10__190 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_addr_r_SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \cram_bus/addr_r/q_7__I_37_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \cram_bus/addr_r/q_8__I_35_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_7__187 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_8__188 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_addr_r_SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \cram_bus/addr_r/q_5__I_41_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \cram_bus/addr_r/q_6__I_39_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_5__185 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_6__186 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_addr_r_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \cram_bus/addr_r/q_3__I_45_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut4 \cram_bus/addr_r/q_4__I_43_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_3__183 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_4__184 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_168 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40058 \cram_bus/i804_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \cram_bus/addr_r/q_2__I_47_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_1__181 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_2__182 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_170 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40058 \cklgen_1khz/i4_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40053 \cklgen_1khz/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \cklgen_1khz/p_stb_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_171 ( input D0, C0, B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40059 \cklgen_1mhz/i6069_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i14 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cklgen_1mhz/p_stb_26 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_178 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_178/SLICE_178_K1_H1 , 
         \SLICE_178/cram_bus/reg_wr_fifo/i1449/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_178_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_178/SLICE_178_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1449/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_178/cram_bus/reg_wr_fifo/i1449/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_178_K0K1MUX( 
    .D0(\SLICE_178/cram_bus/reg_wr_fifo/i1449/GATE_H0 ), 
    .D1(\SLICE_178/SLICE_178_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_179 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_179/SLICE_179_K1_H1 , 
         \SLICE_179/cram_bus/reg_wr_fifo/i1753/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_179_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_179/SLICE_179_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1753/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_179/cram_bus/reg_wr_fifo/i1753/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_179_K0K1MUX( 
    .D0(\SLICE_179/cram_bus/reg_wr_fifo/i1753/GATE_H0 ), 
    .D1(\SLICE_179/SLICE_179_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_180 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_180/SLICE_180_K1_H1 , 
         \SLICE_180/cram_bus/reg_wr_fifo/i1755/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_180_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_180/SLICE_180_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1755/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_180/cram_bus/reg_wr_fifo/i1755/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_180_K0K1MUX( 
    .D0(\SLICE_180/cram_bus/reg_wr_fifo/i1755/GATE_H0 ), 
    .D1(\SLICE_180/SLICE_180_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_181 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_181/SLICE_181_K1_H1 , 
         \SLICE_181/cram_bus/reg_wr_fifo/i1757/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_181_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_181/SLICE_181_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1757/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_181/cram_bus/reg_wr_fifo/i1757/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_181_K0K1MUX( 
    .D0(\SLICE_181/cram_bus/reg_wr_fifo/i1757/GATE_H0 ), 
    .D1(\SLICE_181/SLICE_181_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_182 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_182/SLICE_182_K1_H1 , 
         \SLICE_182/cram_bus/reg_wr_fifo/i1759/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_182_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_182/SLICE_182_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1759/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_182/cram_bus/reg_wr_fifo/i1759/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_182_K0K1MUX( 
    .D0(\SLICE_182/cram_bus/reg_wr_fifo/i1759/GATE_H0 ), 
    .D1(\SLICE_182/SLICE_182_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_183 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_183/SLICE_183_K1_H1 , 
         \SLICE_183/cram_bus/reg_wr_fifo/i1761/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_183_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_183/SLICE_183_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1761/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_183/cram_bus/reg_wr_fifo/i1761/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_183_K0K1MUX( 
    .D0(\SLICE_183/cram_bus/reg_wr_fifo/i1761/GATE_H0 ), 
    .D1(\SLICE_183/SLICE_183_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_184 ( input C1, B1, A1, C0, B0, A0, DI0, M0, LSR, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \SLICE_184/SLICE_184_K1_H1 , 
         \SLICE_184/cram_bus/reg_wr_fifo/i1763/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, LSR_dly;

  lut40040 SLICE_184_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_184/SLICE_184_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1763/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_184/cram_bus/reg_wr_fifo/i1763/GATE_H0 ));
  vmuxregsre \cfg_r/s_reg_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_184_K0K1MUX( 
    .D0(\SLICE_184/cram_bus/reg_wr_fifo/i1763/GATE_H0 ), 
    .D1(\SLICE_184/SLICE_184_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_185 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_185/SLICE_185_K1_H1 , 
         \SLICE_185/cram_bus/reg_wr_fifo/i1765/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_185_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_185/SLICE_185_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1765/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_185/cram_bus/reg_wr_fifo/i1765/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_185_K0K1MUX( 
    .D0(\SLICE_185/cram_bus/reg_wr_fifo/i1765/GATE_H0 ), 
    .D1(\SLICE_185/SLICE_185_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_186 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_186/SLICE_186_K1_H1 , 
         \SLICE_186/cram_bus/reg_wr_fifo/i1767/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_186_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_186/SLICE_186_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1767/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_186/cram_bus/reg_wr_fifo/i1767/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_186_K0K1MUX( 
    .D0(\SLICE_186/cram_bus/reg_wr_fifo/i1767/GATE_H0 ), 
    .D1(\SLICE_186/SLICE_186_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_187 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_187/SLICE_187_K1_H1 , 
         \SLICE_187/cram_bus/reg_wr_fifo/i1769/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_187_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_187/SLICE_187_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1769/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_187/cram_bus/reg_wr_fifo/i1769/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_187_K0K1MUX( 
    .D0(\SLICE_187/cram_bus/reg_wr_fifo/i1769/GATE_H0 ), 
    .D1(\SLICE_187/SLICE_187_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_188 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_188/SLICE_188_K1_H1 , 
         \SLICE_188/cram_bus/reg_wr_fifo/i1771/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_188_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_188/SLICE_188_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1771/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_188/cram_bus/reg_wr_fifo/i1771/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_188_K0K1MUX( 
    .D0(\SLICE_188/cram_bus/reg_wr_fifo/i1771/GATE_H0 ), 
    .D1(\SLICE_188/SLICE_188_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_189 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_189/SLICE_189_K1_H1 , 
         \SLICE_189/cram_bus/reg_wr_fifo/i1773/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_189_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_189/SLICE_189_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1773/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_189/cram_bus/reg_wr_fifo/i1773/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_189_K0K1MUX( 
    .D0(\SLICE_189/cram_bus/reg_wr_fifo/i1773/GATE_H0 ), 
    .D1(\SLICE_189/SLICE_189_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_190 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_190/SLICE_190_K1_H1 , 
         \SLICE_190/cram_bus/reg_wr_fifo/i1775/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_190_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_190/SLICE_190_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1775/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_190/cram_bus/reg_wr_fifo/i1775/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_190_K0K1MUX( 
    .D0(\SLICE_190/cram_bus/reg_wr_fifo/i1775/GATE_H0 ), 
    .D1(\SLICE_190/SLICE_190_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_191 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_191/SLICE_191_K1_H1 , 
         \SLICE_191/cram_bus/reg_wr_fifo/i1777/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_191_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_191/SLICE_191_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1777/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_191/cram_bus/reg_wr_fifo/i1777/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_191_K0K1MUX( 
    .D0(\SLICE_191/cram_bus/reg_wr_fifo/i1777/GATE_H0 ), 
    .D1(\SLICE_191/SLICE_191_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_192 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_192/SLICE_192_K1_H1 , 
         \SLICE_192/cram_bus/reg_wr_fifo/i1779/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_192_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_192/SLICE_192_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1779/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_192/cram_bus/reg_wr_fifo/i1779/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_192_K0K1MUX( 
    .D0(\SLICE_192/cram_bus/reg_wr_fifo/i1779/GATE_H0 ), 
    .D1(\SLICE_192/SLICE_192_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_193 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_193/SLICE_193_K1_H1 , 
         \SLICE_193/cram_bus/reg_wr_fifo/i1781/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40040 SLICE_193_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_193/SLICE_193_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \cram_bus/reg_wr_fifo/i1781/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_193/cram_bus/reg_wr_fifo/i1781/GATE_H0 ));
  vmuxregsre0003 \cfg_r/s_reg_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_193_K0K1MUX( 
    .D0(\SLICE_193/cram_bus/reg_wr_fifo/i1781/GATE_H0 ), 
    .D1(\SLICE_193/SLICE_193_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_229 ( input C1, B1, A1, A0, DI0, M1, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40060 \shifter/exec_ctrl/i1370_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40027 \shifter/exec_ctrl/s_tap_busy_I_0_1_lut_rep_203 ( .A(A0), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 s_irq_reg_i2( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 s_irq_reg_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_231 ( input A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40027 s_tmr_cnt_en_I_0_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 s_irq_reg_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 s_irq_reg_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_258 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40061 \shifter/rx/i3266_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_191 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \shifter/rx/i3267_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_260 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_190 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \shifter/rx/i3268_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_261 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40064 \shifter/rx/i3269_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_262 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40064 \shifter/rx/i3270_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_263 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_188 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \shifter/rx/i3271_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_264 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_185 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \shifter/rx/i3272_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_265 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40065 \shifter/rx/i3273_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_266 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40066 \shifter/rx/i3274_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_187 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \shifter/rx/i3275_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_268 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_184 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40063 \shifter/rx/i3276_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_269 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40065 \shifter/rx/i3277_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_270 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40067 \shifter/shift_ctrl/i2_3_lut_rep_168_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40030 \shifter/rx/i3278_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_271 ( input D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40064 \shifter/rx/i3279_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_272 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40058 \shifter/rx/i3241_2_lut_rep_182 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \shifter/rx/i3280_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_273 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40058 \shifter/shift_ctrl/s_rx_en_r1_I_0_273_2_lut_rep_212 ( .A(A1), 
    .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 \shifter/rx/i3281_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rxbuf_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40068 \shifter/rx/s_count_r_9__I_104_2_lut_rep_111_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \shifter/rx/s_wrap_stb_I_0_2_lut_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \shifter/rx/s_store_stb_441 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_275 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    M1, M0, FXB, FXA, CE, CLK, output OFX0, Q1, OFX1 );
  wire   
         \shifter/exec_ctrl/SLICE_275/shifter/exec_ctrl/s_tap_state_next_3__I_154_i1/GATE_H1 
         , \shifter/exec_ctrl/SLICE_275/shifter/exec_ctrl/SLICE_275_K0_H0 , 
         VCCI, GNDI, DI1_dly, CLK_dly, CE_dly;

  lut40069 \shifter/exec_ctrl/s_tap_state_next_3__I_154_i1/GATE ( .A(A1), 
    .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/exec_ctrl/SLICE_275/shifter/exec_ctrl/s_tap_state_next_3__I_154_i1/GATE_H1 )
    );
  lut40070 \shifter/exec_ctrl/SLICE_275_K0 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/SLICE_275/shifter/exec_ctrl/SLICE_275_K0_H0 ));
  vmuxregsre0021 \shifter/exec_ctrl/s_tap_state__i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \shifter/exec_ctrl/SLICE_275_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/SLICE_275/shifter/exec_ctrl/SLICE_275_K0_H0 ), 
    .D1(\shifter/exec_ctrl/SLICE_275/shifter/exec_ctrl/s_tap_state_next_3__I_154_i1/GATE_H1 )
    , .SD(M0), .Z(OFX0));
  selmux2 \shifter/exec_ctrl/SLICE_275_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_276 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    M0, CE, CLK, output OFX0, Q0 );
  wire   \shifter/exec_ctrl/SLICE_276/shifter/exec_ctrl/SLICE_276_K1_H1 , 
         \shifter/exec_ctrl/SLICE_276/shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i2/GATE_H0 
         , VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40069 \shifter/exec_ctrl/SLICE_276_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/exec_ctrl/SLICE_276/shifter/exec_ctrl/SLICE_276_K1_H1 ));
  lut40070 \shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i2/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/SLICE_276/shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i2/GATE_H0 )
    );
  vmuxregsre0021 \shifter/exec_ctrl/s_tap_state__i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \shifter/exec_ctrl/SLICE_276_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/SLICE_276/shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i2/GATE_H0 )
    , .D1(\shifter/exec_ctrl/SLICE_276/shifter/exec_ctrl/SLICE_276_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    CE, CLK, output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40071 \shifter/exec_ctrl/n182_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40072 \shifter/exec_ctrl/n7739_bdd_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0021 \shifter/exec_ctrl/s_tap_state__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h02AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_278 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, 
    M0, CE, CLK, output OFX0, Q0 );
  wire   \shifter/exec_ctrl/SLICE_278/shifter/exec_ctrl/SLICE_278_K1_H1 , 
         \shifter/exec_ctrl/SLICE_278/shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i4/GATE_H0 
         , VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40073 \shifter/exec_ctrl/SLICE_278_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/exec_ctrl/SLICE_278/shifter/exec_ctrl/SLICE_278_K1_H1 ));
  lut40074 \shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i4/GATE ( .A(A0), 
    .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/SLICE_278/shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i4/GATE_H0 )
    );
  vmuxregsre0021 \shifter/exec_ctrl/s_tap_state__i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \shifter/exec_ctrl/SLICE_278_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/SLICE_278/shifter/exec_ctrl/s_tap_state_next_3__I_0_225_i4/GATE_H0 )
    , .D1(\shifter/exec_ctrl/SLICE_278/shifter/exec_ctrl/SLICE_278_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCCA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_279 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40075 \shifter/exec_ctrl/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40076 \shifter/exec_ctrl/i2323_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/ckgen/s_div_hi_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/exec_ctrl/s_exec_r0_188 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_280 ( input C0, B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40077 \shifter/tx/i5774_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \shifter/io/s_tdi_r0_40 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tmr_r_SLICE_281 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_1__I_49_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_0__I_51_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_1__181 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_0__180 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_3__I_45_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_2__I_47_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_3__183 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_2__182 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_283 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_5__I_41_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_4__I_43_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_5__185 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_4__184 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_284 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_7__I_37_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_6__I_39_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_7__187 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_6__186 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_285 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_9__I_33_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_8__I_35_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_9__189 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_8__188 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_286 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_11__I_29_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_10__I_31_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_11__191 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_10__190 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_287 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_13__I_25_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_12__I_27_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_13__193 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_12__192 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tmr_r_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut4 \tmr_r/q_15__I_6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 \tmr_r/q_14__I_23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \tmr_r/s_count_reg_15__195 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \tmr_r/s_count_reg_14__194 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_289 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40078 \tmr_r/q_15__I_7_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40079 i2315_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \cram_bus/reg_wr_fifo/s_syn_sel1_i0 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 s_tmr_cnt_en_66( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_290 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \shifter/rx/SLICE_290/shifter/rx/SLICE_290_K1_H1 , GNDI, 
         \shifter/rx/SLICE_290/shifter/rx/mux_512_i1/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40080 \shifter/rx/SLICE_290_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/rx/SLICE_290/shifter/rx/SLICE_290_K1_H1 ));
  lut40081 \shifter/rx/mux_512_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/SLICE_290/shifter/rx/mux_512_i1/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_pos_r1_0__426 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_290_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_290/shifter/rx/mux_512_i1/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_290/shifter/rx/SLICE_290_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_291 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, 
    CLK, output OFX0, Q0 );
  wire   \shifter/rx/SLICE_291/shifter/rx/SLICE_291_K1_H1 , 
         \shifter/rx/SLICE_291/shifter/rx/mux_512_i2/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40080 \shifter/rx/SLICE_291_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/rx/SLICE_291/shifter/rx/SLICE_291_K1_H1 ));
  lut40082 \shifter/rx/mux_512_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_291/shifter/rx/mux_512_i2/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_pos_r1_1__427 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \shifter/rx/SLICE_291_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_291/shifter/rx/mux_512_i2/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_291/shifter/rx/SLICE_291_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB748) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_ckgen_SLICE_292 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i1_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_293 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i4_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i3_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_294 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i6_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_295 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i8_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i7_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_296 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i10_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i9_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_297 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i12_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i11_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_298 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \shifter/ckgen/mux_37_i14_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i13_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_299 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40058 \shifter/ckgen/i1_2_lut_adj_171 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/ckgen/mux_37_i15_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_hi_i0_i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_300 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i2_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i1_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_ckgen_SLICE_301 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i4_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i3_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i3 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i2 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_302 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i6_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i5_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i5 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i4 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_303 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i8_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i7 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i6 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_304 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i10_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i9_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i9 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i8 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i12_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i11_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i11 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i10 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_306 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, 
    DI0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i14_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i13_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i13 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i12 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_307 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40084 \shifter/ckgen/i1_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40083 \shifter/ckgen/s_div_lo_14__I_0_i15_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_cmp_lo_i14 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D5D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_ckgen_SLICE_335 ( input B1, A1, B0, A0, DI0, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40085 \shifter/ckgen/i1_2_lut_rep_193 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \shifter/ckgen/i4752_1_lut_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre \shifter/ckgen/s_rtck_r2_112 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_ckgen_SLICE_336 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtck_r0_110 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtcken_r0_108 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_338 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtcken_r1_109 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_343 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0021 \shifter/ckgen/s_rtdiv_hi_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_344 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_354 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_359 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0021 \shifter/ckgen/s_rtdiv_lo_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_360 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_361 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_362 ( input B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40024 \shifter/ckgen/i4750_1_lut_rep_166_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_tck_r0_113 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_364 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40086 \shifter/ckgen/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \shifter/ckgen/i1_2_lut_3_lut_adj_172 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_tcki_r0_118 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_375 ( input B0, A0, DI0, CE, LSR, CLK, output 
    F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40058 \shifter/exec_ctrl/i3248_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \shifter/exec_ctrl/s_pos_goto_en_193 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_376 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40087 \shifter/exec_ctrl/i1_2_lut_rep_107_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \shifter/exec_ctrl/i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i10 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/exec_ctrl/s_shift_en_r0_197 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4480) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_377 ( input DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40089 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/io/s_tckn_r0_36 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_378 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40077 \shifter/rx/vec_len_9__I_0_i3_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/rx/vec_msbf_I_0_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0003 \shifter/rx/s_rx_msbf_415 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_379 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40090 \shifter/rx/s_op0.pos_3__I_0_i3_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40091 \shifter/rx/bit_pos_2__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i10 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_pos_r1_2__428 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF066) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_380 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M0, 
    CLK, output OFX0, Q0 );
  wire   \shifter/rx/SLICE_380/shifter/rx/SLICE_380_K1_H1 , 
         \shifter/rx/SLICE_380/shifter/rx/mux_512_i4/GATE_H0 , VCCI, GNDI, 
         DI0_dly, CLK_dly;

  lut40080 \shifter/rx/SLICE_380_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/rx/SLICE_380/shifter/rx/SLICE_380_K1_H1 ));
  lut40082 \shifter/rx/mux_512_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_380/shifter/rx/mux_512_i4/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_pos_r1_3__429 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \shifter/rx/SLICE_380_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_380/shifter/rx/mux_512_i4/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_380/shifter/rx/SLICE_380_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_381 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40068 \shifter/rx/s_count_r_9__N_881_I_0_2_lut_rep_100_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \shifter/rx/i6114_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_busy_r_393 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_382 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_382/shifter/rx/SLICE_382_K1_H1 , 
         \shifter/rx/SLICE_382/shifter/rx/mux_511_i1/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_382_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_382/shifter/rx/SLICE_382_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_382/shifter/rx/mux_511_i1/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_0__430 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_382_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_382/shifter/rx/mux_511_i1/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_382/shifter/rx/SLICE_382_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_383 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_383/shifter/rx/SLICE_383_K1_H1 , 
         \shifter/rx/SLICE_383/shifter/rx/mux_511_i2/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_383_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_383/shifter/rx/SLICE_383_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_383/shifter/rx/mux_511_i2/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_1__431 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_383_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_383/shifter/rx/mux_511_i2/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_383/shifter/rx/SLICE_383_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_384 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_384/shifter/rx/SLICE_384_K1_H1 , 
         \shifter/rx/SLICE_384/shifter/rx/mux_511_i3/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_384_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_384/shifter/rx/SLICE_384_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_384/shifter/rx/mux_511_i3/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_2__432 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_384_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_384/shifter/rx/mux_511_i3/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_384/shifter/rx/SLICE_384_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_385 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_385/shifter/rx/SLICE_385_K1_H1 , 
         \shifter/rx/SLICE_385/shifter/rx/mux_511_i4/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_385_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_385/shifter/rx/SLICE_385_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_385/shifter/rx/mux_511_i4/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_3__433 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_385_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_385/shifter/rx/mux_511_i4/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_385/shifter/rx/SLICE_385_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_386 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_386/shifter/rx/SLICE_386_K1_H1 , 
         \shifter/rx/SLICE_386/shifter/rx/mux_511_i5/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_386_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_386/shifter/rx/SLICE_386_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_386/shifter/rx/mux_511_i5/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_4__434 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_386_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_386/shifter/rx/mux_511_i5/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_386/shifter/rx/SLICE_386_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_387 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_387/shifter/rx/SLICE_387_K1_H1 , 
         \shifter/rx/SLICE_387/shifter/rx/mux_511_i6/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_387_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_387/shifter/rx/SLICE_387_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i6/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_387/shifter/rx/mux_511_i6/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_5__435 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_387_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_387/shifter/rx/mux_511_i6/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_387/shifter/rx/SLICE_387_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_388 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_388/shifter/rx/SLICE_388_K1_H1 , 
         \shifter/rx/SLICE_388/shifter/rx/mux_511_i7/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_388_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_388/shifter/rx/SLICE_388_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i7/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_388/shifter/rx/mux_511_i7/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_6__436 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_388_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_388/shifter/rx/mux_511_i7/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_388/shifter/rx/SLICE_388_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_389 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_389/shifter/rx/SLICE_389_K1_H1 , 
         \shifter/rx/SLICE_389/shifter/rx/mux_511_i8/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_389_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_389/shifter/rx/SLICE_389_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i8/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_389/shifter/rx/mux_511_i8/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_7__437 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_389_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_389/shifter/rx/mux_511_i8/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_389/shifter/rx/SLICE_389_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_390 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_390/shifter/rx/SLICE_390_K1_H1 , 
         \shifter/rx/SLICE_390/shifter/rx/mux_511_i9/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_390_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_390/shifter/rx/SLICE_390_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/rx/mux_511_i9/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_390/shifter/rx/mux_511_i9/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_8__438 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_390_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_390/shifter/rx/mux_511_i9/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_390/shifter/rx/SLICE_390_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_391 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_391/shifter/rx/SLICE_391_K1_H1 , 
         \shifter/rx/SLICE_391/shifter/rx/mux_511_i10/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_391_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_391/shifter/rx/SLICE_391_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40093 \shifter/rx/mux_511_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_391/shifter/rx/mux_511_i10/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_addr_r1_9__439 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_391_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_391/shifter/rx/mux_511_i10/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_391/shifter/rx/SLICE_391_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_392 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40067 \shifter/shift_ctrl/s_count_r_9__I_110_2_lut_rep_158_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40091 \shifter/rx/s_count_r_2__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i0 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_count_r_2__418 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_393 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_393/shifter/rx/SLICE_393_K1_H1 , 
         \shifter/rx/SLICE_393/shifter/rx/mux_510_i4/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_393_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_393/shifter/rx/SLICE_393_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_393/shifter/rx/mux_510_i4/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_3__419 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_393_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_393/shifter/rx/mux_510_i4/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_393/shifter/rx/SLICE_393_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_394 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_394/shifter/rx/SLICE_394_K1_H1 , 
         \shifter/rx/SLICE_394/shifter/rx/mux_510_i5/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_394_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_394/shifter/rx/SLICE_394_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i5/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_394/shifter/rx/mux_510_i5/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_4__420 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_394_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_394/shifter/rx/mux_510_i5/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_394/shifter/rx/SLICE_394_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_395 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_395/shifter/rx/SLICE_395_K1_H1 , 
         \shifter/rx/SLICE_395/shifter/rx/mux_510_i6/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_395_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_395/shifter/rx/SLICE_395_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i6/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_395/shifter/rx/mux_510_i6/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_5__421 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_395_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_395/shifter/rx/mux_510_i6/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_395/shifter/rx/SLICE_395_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_396 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_396/shifter/rx/SLICE_396_K1_H1 , 
         \shifter/rx/SLICE_396/shifter/rx/mux_510_i7/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_396_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_396/shifter/rx/SLICE_396_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i7/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_396/shifter/rx/mux_510_i7/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_6__422 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_396_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_396/shifter/rx/mux_510_i7/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_396/shifter/rx/SLICE_396_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_397 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_397/shifter/rx/SLICE_397_K1_H1 , 
         \shifter/rx/SLICE_397/shifter/rx/mux_510_i8/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_397_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_397/shifter/rx/SLICE_397_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i8/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_397/shifter/rx/mux_510_i8/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_7__423 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_397_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_397/shifter/rx/mux_510_i8/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_397/shifter/rx/SLICE_397_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_398 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_398/shifter/rx/SLICE_398_K1_H1 , 
         \shifter/rx/SLICE_398/shifter/rx/mux_510_i9/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_398_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_398/shifter/rx/SLICE_398_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i9/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_398/shifter/rx/mux_510_i9/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_8__424 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_398_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_398/shifter/rx/mux_510_i9/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_398/shifter/rx/SLICE_398_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_399 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_399/shifter/rx/SLICE_399_K1_H1 , 
         \shifter/rx/SLICE_399/shifter/rx/mux_510_i10/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_399_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_399/shifter/rx/SLICE_399_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \shifter/rx/mux_510_i10/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_399/shifter/rx/mux_510_i10/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_9__425 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_399_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_399/shifter/rx/mux_510_i10/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_399/shifter/rx/SLICE_399_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_411 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40058 \shifter/rx/i3371_2_lut_rep_214 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \shifter/rx/i3251_2_lut_rep_210 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..pos_i0_i1 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..pos_i0_i0 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_412 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40058 \shifter/rx/i3373_2_lut_rep_190 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \shifter/rx/i3372_2_lut_rep_215 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..pos_i0_i3 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..pos_i0_i2 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_448 ( input D1, C1, B1, A1, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40095 \shifter/rx/start_I_0_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40026 \shifter/rx/i1170_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/ckgen/s_div_lo_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/rx/s_op_fifo.tail_i0_i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_rx_SLICE_449 ( input B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40026 \shifter/rx/i1024_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_op_fifo.tail_i0_i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_450 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40044 \shifter/shift_ctrl/i3296_2_lut_rep_115_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 \shifter/shift_ctrl/desc_rd_stb_I_0_2_lut_rep_97_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \shifter/rx/s_start_r_394 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_451 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_451/shifter/rx/SLICE_451_K1_H1 , 
         \shifter/rx/SLICE_451/shifter/rx/mux_510_i1/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_451_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_451/shifter/rx/SLICE_451_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40081 \shifter/rx/mux_510_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/SLICE_451/shifter/rx/mux_510_i1/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_0__416 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_451_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_451/shifter/rx/mux_510_i1/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_451/shifter/rx/SLICE_451_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_452 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/rx/SLICE_452/shifter/rx/SLICE_452_K1_H1 , 
         \shifter/rx/SLICE_452/shifter/rx/mux_510_i2/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40040 \shifter/rx/SLICE_452_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/SLICE_452/shifter/rx/SLICE_452_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40096 \shifter/rx/mux_510_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/rx/SLICE_452/shifter/rx/mux_510_i2/GATE_H0 ));
  vmuxregsre0003 \shifter/rx/s_count_r_1__417 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/rx/SLICE_452_K0K1MUX ( 
    .D0(\shifter/rx/SLICE_452/shifter/rx/mux_510_i2/GATE_H0 ), 
    .D1(\shifter/rx/SLICE_452/shifter/rx/SLICE_452_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF078) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_453 ( input D1, C1, B1, A1, B0, A0, DI0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40097 \shifter/exec_ctrl/i2_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \shifter/exec_ctrl/i1_2_lut_rep_114 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \shifter/shift_ctrl/s_en_r0_211 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_454 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/exec_ctrl/s_exec_r1_189 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/shift_ctrl/s_en_r1_212 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_455 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40098 \shifter/tx/s_sum_9__I_73_3_lut_rep_88 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \shifter/shift_ctrl/s_msbf_r_I_0_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/tx/s_msbf_r_90 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4848) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF780) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_456 ( input B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40032 i3165_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 tp_tdo_I_0_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \shifter/io/s_tdo_r0_42 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_457 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40100 \shifter/exec_ctrl/i3259_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40100 \shifter/exec_ctrl/i3236_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_1__226 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_0__225 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0BB0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_460 ( input DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40089 \shifter/exec_ctrl/n8851\000/BUF1/BUF1 ( .A(GNDI), .B(GNDI), 
    .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0101 \shifter/exec_ctrl/s_tck_en_194 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0101 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module shifter_exec_ctrl_SLICE_461 ( input C1, B1, A1, C0, B0, A0, DI0, CE, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40102 \shifter/exec_ctrl/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 
    \shifter/exec_ctrl/i6105_3_lut_3_lut_4_lut_4_lut_4_lut_3_lut_4_lut_1_lut_2_lut_4_lut_3_lut 
    ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \shifter/exec_ctrl/s_tdi_en_195 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_shift_ctrl_SLICE_462 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, 
    CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40058 \shifter/shift_ctrl/tckn_stb_I_0_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 \shifter/shift_ctrl/bit_cnt_0__I_125_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_0__214 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_shift_ctrl_SLICE_463 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40104 \shifter/shift_ctrl/bit_cnt_2__I_127_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40104 \shifter/shift_ctrl/bit_cnt_1__I_126_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_2__216 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_1__215 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_shift_ctrl_SLICE_464 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40104 \shifter/shift_ctrl/bit_cnt_4__I_129_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40104 \shifter/shift_ctrl/bit_cnt_3__I_128_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_4__218 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_3__217 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_shift_ctrl_SLICE_465 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40104 \shifter/shift_ctrl/bit_cnt_6__I_131_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40104 \shifter/shift_ctrl/bit_cnt_5__I_130_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_6__220 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_5__219 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_shift_ctrl_SLICE_466 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CE, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40104 \shifter/shift_ctrl/bit_cnt_8__I_133_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40104 \shifter/shift_ctrl/bit_cnt_7__I_132_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_8__222 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_7__221 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_shift_ctrl_SLICE_467 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI0, CE, LSR, CLK, output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40061 \shifter/shift_ctrl/desc_rd_stb_I_0_2_lut_rep_229 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40104 \shifter/shift_ctrl/bit_cnt_9__I_116_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre \shifter/shift_ctrl/s_cnt_r_9__223 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_shift_ctrl_SLICE_469 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40105 \shifter/shift_ctrl/i3246_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40105 \shifter/shift_ctrl/i3256_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_3__228 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_2__227 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0708) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_shift_ctrl_SLICE_470 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40105 \shifter/shift_ctrl/i3243_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40105 \shifter/shift_ctrl/i3245_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_5__230 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_4__229 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_shift_ctrl_SLICE_471 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    DI1, DI0, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40106 \shifter/shift_ctrl/i3239_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40105 \shifter/shift_ctrl/i3240_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_7__232 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/shift_ctrl/s_offs_r_6__231 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_tx_SLICE_474 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40091 \shifter/tx/s_pos_1__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40091 \shifter/tx/s_pos_0__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/tx/s_pos_1__92 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/tx/s_pos_0__91 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_475 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40058 \shifter/tx/i3367_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40091 \shifter/tx/s_pos_2__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i12 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/tx/s_pos_2__93 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_tx_SLICE_476 ( input B1, A1, D0, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/tx/SLICE_476/shifter/tx/SLICE_476_K1_H1 , 
         \shifter/tx/SLICE_476/shifter/tx/mux_509_i4/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly;

  lut40107 \shifter/tx/SLICE_476_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\shifter/tx/SLICE_476/shifter/tx/SLICE_476_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 \shifter/tx/mux_509_i4/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/tx/SLICE_476/shifter/tx/mux_509_i4/GATE_H0 ));
  vmuxregsre0003 \shifter/tx/s_pos_3__94 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/tx/SLICE_476_K0K1MUX ( 
    .D0(\shifter/tx/SLICE_476/shifter/tx/mux_509_i4/GATE_H0 ), 
    .D1(\shifter/tx/SLICE_476/shifter/tx/SLICE_476_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_478 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \shifter/SLICE_478/shifter/SLICE_478_K1_H1 , 
         \shifter/SLICE_478/shifter/exec_ctrl/i6405/GATE_H0 , VCCI, DI0_dly, 
         CLK_dly, CE_dly;

  lut40108 \shifter/SLICE_478_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/SLICE_478/shifter/SLICE_478_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40109 \shifter/exec_ctrl/i6405/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/SLICE_478/shifter/exec_ctrl/i6405/GATE_H0 ));
  vmuxregsre0003 \shifter/io/s_tms_r0_41 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \shifter/SLICE_478_K0K1MUX ( 
    .D0(\shifter/SLICE_478/shifter/exec_ctrl/i6405/GATE_H0 ), 
    .D1(\shifter/SLICE_478/shifter/SLICE_478_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0804) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5808_SLICE_479 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5808/SLICE_479/i5808/SLICE_479_K1_H1 , 
         \i5808/SLICE_479/i5808/GATE_H0 ;

  lut40108 \i5808/SLICE_479_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5808/SLICE_479/i5808/SLICE_479_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5808/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5808/SLICE_479/i5808/GATE_H0 ));
  selmux2 \i5808/SLICE_479_K0K1MUX ( .D0(\i5808/SLICE_479/i5808/GATE_H0 ), 
    .D1(\i5808/SLICE_479/i5808/SLICE_479_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5829_SLICE_480 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5829/SLICE_480/i5829/SLICE_480_K1_H1 , 
         \i5829/SLICE_480/i5829/GATE_H0 ;

  lut40108 \i5829/SLICE_480_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5829/SLICE_480/i5829/SLICE_480_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5829/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5829/SLICE_480/i5829/GATE_H0 ));
  selmux2 \i5829/SLICE_480_K0K1MUX ( .D0(\i5829/SLICE_480/i5829/GATE_H0 ), 
    .D1(\i5829/SLICE_480/i5829/SLICE_480_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5830_SLICE_481 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   GNDI, \i5830/SLICE_481/i5830/SLICE_481_K1_H1 , 
         \i5830/SLICE_481/i5830/GATE_H0 ;

  lut40108 \i5830/SLICE_481_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5830/SLICE_481/i5830/SLICE_481_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5830/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5830/SLICE_481/i5830/GATE_H0 ));
  selmux2 \i5830/SLICE_481_K0K1MUX ( .D0(\i5830/SLICE_481/i5830/GATE_H0 ), 
    .D1(\i5830/SLICE_481/i5830/SLICE_481_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i5830/SLICE_481_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5836_SLICE_482 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5836/SLICE_482/i5836/SLICE_482_K1_H1 , 
         \i5836/SLICE_482/i5836/GATE_H0 ;

  lut40108 \i5836/SLICE_482_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5836/SLICE_482/i5836/SLICE_482_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5836/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5836/SLICE_482/i5836/GATE_H0 ));
  selmux2 \i5836/SLICE_482_K0K1MUX ( .D0(\i5836/SLICE_482/i5836/GATE_H0 ), 
    .D1(\i5836/SLICE_482/i5836/SLICE_482_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5837_SLICE_483 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   GNDI, \i5837/SLICE_483/i5837/SLICE_483_K1_H1 , 
         \i5837/SLICE_483/i5837/GATE_H0 ;

  lut40108 \i5837/SLICE_483_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5837/SLICE_483/i5837/SLICE_483_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5837/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5837/SLICE_483/i5837/GATE_H0 ));
  selmux2 \i5837/SLICE_483_K0K1MUX ( .D0(\i5837/SLICE_483/i5837/GATE_H0 ), 
    .D1(\i5837/SLICE_483/i5837/SLICE_483_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i5837/SLICE_483_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module i6_SLICE_484 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i6/SLICE_484/i6/SLICE_484_K1_H1 , \i6/SLICE_484/i6/GATE_H0 ;

  lut40110 \i6/SLICE_484_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6/SLICE_484/i6/SLICE_484_K1_H1 ));
  lut40038 \i6/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6/SLICE_484/i6/GATE_H0 ));
  selmux2 \i6/SLICE_484_K0K1MUX ( .D0(\i6/SLICE_484/i6/GATE_H0 ), 
    .D1(\i6/SLICE_484/i6/SLICE_484_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5647_SLICE_485 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5647/SLICE_485/i5647/SLICE_485_K1_H1 , 
         \i5647/SLICE_485/i5647/GATE_H0 ;

  lut40108 \i5647/SLICE_485_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5647/SLICE_485/i5647/SLICE_485_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5647/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5647/SLICE_485/i5647/GATE_H0 ));
  selmux2 \i5647/SLICE_485_K0K1MUX ( .D0(\i5647/SLICE_485/i5647/GATE_H0 ), 
    .D1(\i5647/SLICE_485/i5647/SLICE_485_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5844_SLICE_486 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5844/SLICE_486/i5844/SLICE_486_K1_H1 , 
         \i5844/SLICE_486/i5844/GATE_H0 ;

  lut40108 \i5844/SLICE_486_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5844/SLICE_486/i5844/SLICE_486_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5844/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5844/SLICE_486/i5844/GATE_H0 ));
  selmux2 \i5844/SLICE_486_K0K1MUX ( .D0(\i5844/SLICE_486/i5844/GATE_H0 ), 
    .D1(\i5844/SLICE_486/i5844/SLICE_486_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i36_SLICE_487 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i36/SLICE_487/i36/SLICE_487_K1_H1 , \i36/SLICE_487/i36/GATE_H0 ;

  lut40111 \i36/SLICE_487_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i36/SLICE_487/i36/SLICE_487_K1_H1 ));
  lut40112 \i36/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i36/SLICE_487/i36/GATE_H0 ));
  selmux2 \i36/SLICE_487_K0K1MUX ( .D0(\i36/SLICE_487/i36/GATE_H0 ), 
    .D1(\i36/SLICE_487/i36/SLICE_487_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5847_SLICE_488 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5847/SLICE_488/i5847/SLICE_488_K1_H1 , 
         \i5847/SLICE_488/i5847/GATE_H0 ;

  lut40108 \i5847/SLICE_488_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5847/SLICE_488/i5847/SLICE_488_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5847/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5847/SLICE_488/i5847/GATE_H0 ));
  selmux2 \i5847/SLICE_488_K0K1MUX ( .D0(\i5847/SLICE_488/i5847/GATE_H0 ), 
    .D1(\i5847/SLICE_488/i5847/SLICE_488_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5650_SLICE_489 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5650/SLICE_489/i5650/SLICE_489_K1_H1 , 
         \i5650/SLICE_489/i5650/GATE_H0 ;

  lut40108 \i5650/SLICE_489_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5650/SLICE_489/i5650/SLICE_489_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5650/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5650/SLICE_489/i5650/GATE_H0 ));
  selmux2 \i5650/SLICE_489_K0K1MUX ( .D0(\i5650/SLICE_489/i5650/GATE_H0 ), 
    .D1(\i5650/SLICE_489/i5650/SLICE_489_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i6211_SLICE_490 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i6211/SLICE_490/i6211/SLICE_490_K1_H1 , 
         \i6211/SLICE_490/i6211/GATE_H0 ;

  lut40113 \i6211/SLICE_490_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6211/SLICE_490/i6211/SLICE_490_K1_H1 ));
  lut40114 \i6211/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6211/SLICE_490/i6211/GATE_H0 ));
  selmux2 \i6211/SLICE_490_K0K1MUX ( .D0(\i6211/SLICE_490/i6211/GATE_H0 ), 
    .D1(\i6211/SLICE_490/i6211/SLICE_490_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i49_SLICE_491 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i49/SLICE_491/i49/SLICE_491_K1_H1 , GNDI, 
         \i49/SLICE_491/i49/GATE_H0 ;

  lut40115 \i49/SLICE_491_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i49/SLICE_491/i49/SLICE_491_K1_H1 ));
  lut40116 \i49/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i49/SLICE_491/i49/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i49/SLICE_491_K0K1MUX ( .D0(\i49/SLICE_491/i49/GATE_H0 ), 
    .D1(\i49/SLICE_491/i49/SLICE_491_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cram_bus_addr_r_i6498_SLICE_492 ( input B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, 
         \cram_bus/addr_r/i6498/SLICE_492/cram_bus/addr_r/i6498/SLICE_492_K1_H1 , 
         \cram_bus/addr_r/i6498/SLICE_492/cram_bus/addr_r/i6498/GATE_H0 ;

  lut40107 \cram_bus/addr_r/i6498/SLICE_492_K1 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), 
    .Z(\cram_bus/addr_r/i6498/SLICE_492/cram_bus/addr_r/i6498/SLICE_492_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40117 \cram_bus/addr_r/i6498/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\cram_bus/addr_r/i6498/SLICE_492/cram_bus/addr_r/i6498/GATE_H0 ));
  selmux2 \cram_bus/addr_r/i6498/SLICE_492_K0K1MUX ( 
    .D0(\cram_bus/addr_r/i6498/SLICE_492/cram_bus/addr_r/i6498/GATE_H0 ), 
    .D1(\cram_bus/addr_r/i6498/SLICE_492/cram_bus/addr_r/i6498/SLICE_492_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6205_SLICE_493 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i6205/SLICE_493/i6205/SLICE_493_K1_H1 , 
         \i6205/SLICE_493/i6205/GATE_H0 ;

  lut40118 \i6205/SLICE_493_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6205/SLICE_493/i6205/SLICE_493_K1_H1 ));
  lut40114 \i6205/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6205/SLICE_493/i6205/GATE_H0 ));
  selmux2 \i6205/SLICE_493_K0K1MUX ( .D0(\i6205/SLICE_493/i6205/GATE_H0 ), 
    .D1(\i6205/SLICE_493/i6205/SLICE_493_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module s_mem_rd_sel_1__I_0_Mux_0_i3_SLICE_494 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494/s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494/s_mem_rd_sel_1__I_0_Mux_0_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494/s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_0_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494/s_mem_rd_sel_1__I_0_Mux_0_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494/s_mem_rd_sel_1__I_0_Mux_0_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494/s_mem_rd_sel_1__I_0_Mux_0_i3/SLICE_494_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_1_i3_SLICE_495 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495/s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495/s_mem_rd_sel_1__I_0_Mux_1_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495/s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_1_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495/s_mem_rd_sel_1__I_0_Mux_1_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495/s_mem_rd_sel_1__I_0_Mux_1_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495/s_mem_rd_sel_1__I_0_Mux_1_i3/SLICE_495_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_2_i3_SLICE_496 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496/s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496/s_mem_rd_sel_1__I_0_Mux_2_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496/s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_2_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496/s_mem_rd_sel_1__I_0_Mux_2_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496/s_mem_rd_sel_1__I_0_Mux_2_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496/s_mem_rd_sel_1__I_0_Mux_2_i3/SLICE_496_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_3_i3_SLICE_497 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497/s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497/s_mem_rd_sel_1__I_0_Mux_3_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497/s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_3_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497/s_mem_rd_sel_1__I_0_Mux_3_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497/s_mem_rd_sel_1__I_0_Mux_3_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497/s_mem_rd_sel_1__I_0_Mux_3_i3/SLICE_497_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5817_SLICE_498 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5817/SLICE_498/i5817/SLICE_498_K1_H1 , 
         \i5817/SLICE_498/i5817/GATE_H0 ;

  lut40108 \i5817/SLICE_498_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5817/SLICE_498/i5817/SLICE_498_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5817/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5817/SLICE_498/i5817/GATE_H0 ));
  selmux2 \i5817/SLICE_498_K0K1MUX ( .D0(\i5817/SLICE_498/i5817/GATE_H0 ), 
    .D1(\i5817/SLICE_498/i5817/SLICE_498_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_4_i3_SLICE_499 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499/s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499/s_mem_rd_sel_1__I_0_Mux_4_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499/s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_4_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499/s_mem_rd_sel_1__I_0_Mux_4_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499/s_mem_rd_sel_1__I_0_Mux_4_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499/s_mem_rd_sel_1__I_0_Mux_4_i3/SLICE_499_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_5_i3_SLICE_500 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500/s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500/s_mem_rd_sel_1__I_0_Mux_5_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500/s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_5_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500/s_mem_rd_sel_1__I_0_Mux_5_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500/s_mem_rd_sel_1__I_0_Mux_5_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500/s_mem_rd_sel_1__I_0_Mux_5_i3/SLICE_500_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_6_i3_SLICE_501 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501/s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501/s_mem_rd_sel_1__I_0_Mux_6_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501/s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_6_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501/s_mem_rd_sel_1__I_0_Mux_6_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501/s_mem_rd_sel_1__I_0_Mux_6_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501/s_mem_rd_sel_1__I_0_Mux_6_i3/SLICE_501_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_7_i3_SLICE_502 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502/s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502/s_mem_rd_sel_1__I_0_Mux_7_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502/s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_7_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502/s_mem_rd_sel_1__I_0_Mux_7_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502/s_mem_rd_sel_1__I_0_Mux_7_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502/s_mem_rd_sel_1__I_0_Mux_7_i3/SLICE_502_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_8_i3_SLICE_503 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503/s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503/s_mem_rd_sel_1__I_0_Mux_8_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503/s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_8_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503/s_mem_rd_sel_1__I_0_Mux_8_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503/s_mem_rd_sel_1__I_0_Mux_8_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503/s_mem_rd_sel_1__I_0_Mux_8_i3/SLICE_503_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_9_i3_SLICE_504 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504/s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504/s_mem_rd_sel_1__I_0_Mux_9_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504/s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_9_i3/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504/s_mem_rd_sel_1__I_0_Mux_9_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504/s_mem_rd_sel_1__I_0_Mux_9_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504/s_mem_rd_sel_1__I_0_Mux_9_i3/SLICE_504_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_10_i3_SLICE_505 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505/s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505/s_mem_rd_sel_1__I_0_Mux_10_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505/s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_10_i3/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505/s_mem_rd_sel_1__I_0_Mux_10_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505/s_mem_rd_sel_1__I_0_Mux_10_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505/s_mem_rd_sel_1__I_0_Mux_10_i3/SLICE_505_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_11_i3_SLICE_506 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506/s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506/s_mem_rd_sel_1__I_0_Mux_11_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506/s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_11_i3/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506/s_mem_rd_sel_1__I_0_Mux_11_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506/s_mem_rd_sel_1__I_0_Mux_11_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506/s_mem_rd_sel_1__I_0_Mux_11_i3/SLICE_506_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_12_i3_SLICE_507 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507/s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507/s_mem_rd_sel_1__I_0_Mux_12_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507/s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_12_i3/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507/s_mem_rd_sel_1__I_0_Mux_12_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507/s_mem_rd_sel_1__I_0_Mux_12_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507/s_mem_rd_sel_1__I_0_Mux_12_i3/SLICE_507_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_13_i3_SLICE_508 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508/s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508/s_mem_rd_sel_1__I_0_Mux_13_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508/s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_13_i3/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508/s_mem_rd_sel_1__I_0_Mux_13_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508/s_mem_rd_sel_1__I_0_Mux_13_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508/s_mem_rd_sel_1__I_0_Mux_13_i3/SLICE_508_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_14_i3_SLICE_509 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509/s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509/s_mem_rd_sel_1__I_0_Mux_14_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509/s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_14_i3/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509/s_mem_rd_sel_1__I_0_Mux_14_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509/s_mem_rd_sel_1__I_0_Mux_14_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509/s_mem_rd_sel_1__I_0_Mux_14_i3/SLICE_509_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module s_mem_rd_sel_1__I_0_Mux_15_i3_SLICE_510 ( input B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510/s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510_K1_H1 
         , 
         \s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510/s_mem_rd_sel_1__I_0_Mux_15_i3/GATE_H0 
         ;

  lut40107 \s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510_K1 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510/s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 \s_mem_rd_sel_1__I_0_Mux_15_i3/GATE ( .A(A0), .B(B0), .C(C0), 
    .D(D0), 
    .Z(\s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510/s_mem_rd_sel_1__I_0_Mux_15_i3/GATE_H0 )
    );
  selmux2 \s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510_K0K1MUX ( 
    .D0(\s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510/s_mem_rd_sel_1__I_0_Mux_15_i3/GATE_H0 )
    , 
    .D1(\s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510/s_mem_rd_sel_1__I_0_Mux_15_i3/SLICE_510_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i6195_SLICE_511 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i6195/SLICE_511/i6195/SLICE_511_K1_H1 , 
         \i6195/SLICE_511/i6195/GATE_H0 ;

  lut40119 \i6195/SLICE_511_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6195/SLICE_511/i6195/SLICE_511_K1_H1 ));
  lut40114 \i6195/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i6195/SLICE_511/i6195/GATE_H0 ));
  selmux2 \i6195/SLICE_511_K0K1MUX ( .D0(\i6195/SLICE_511/i6195/GATE_H0 ), 
    .D1(\i6195/SLICE_511/i6195/SLICE_511_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i46_SLICE_512 ( input B1, A1, B0, A0, M0, output OFX0 );
  wire   GNDI, \i46/SLICE_512/i46/SLICE_512_K1_H1 , 
         \i46/SLICE_512/i46/GATE_H0 ;

  lut40120 \i46/SLICE_512_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\i46/SLICE_512/i46/SLICE_512_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40120 \i46/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\i46/SLICE_512/i46/GATE_H0 ));
  selmux2 \i46/SLICE_512_K0K1MUX ( .D0(\i46/SLICE_512/i46/GATE_H0 ), 
    .D1(\i46/SLICE_512/i46/SLICE_512_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i42_SLICE_513 ( input B1, A1, B0, A0, M0, output OFX0 );
  wire   GNDI, \i42/SLICE_513/i42/SLICE_513_K1_H1 , 
         \i42/SLICE_513/i42/GATE_H0 ;

  lut40107 \i42/SLICE_513_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\i42/SLICE_513/i42/SLICE_513_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 \i42/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\i42/SLICE_513/i42/GATE_H0 ));
  selmux2 \i42/SLICE_513_K0K1MUX ( .D0(\i42/SLICE_513/i42/GATE_H0 ), 
    .D1(\i42/SLICE_513/i42/SLICE_513_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i46_adj_215_SLICE_514 ( input B1, A1, B0, A0, M0, output OFX0 );
  wire   GNDI, \i46_adj_215/SLICE_514/i46_adj_215/SLICE_514_K1_H1 , 
         \i46_adj_215/SLICE_514/i46_adj_215/GATE_H0 ;

  lut40121 \i46_adj_215/SLICE_514_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\i46_adj_215/SLICE_514/i46_adj_215/SLICE_514_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40122 \i46_adj_215/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\i46_adj_215/SLICE_514/i46_adj_215/GATE_H0 ));
  selmux2 \i46_adj_215/SLICE_514_K0K1MUX ( 
    .D0(\i46_adj_215/SLICE_514/i46_adj_215/GATE_H0 ), 
    .D1(\i46_adj_215/SLICE_514/i46_adj_215/SLICE_514_K1_H1 ), .SD(M0), 
    .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5822_SLICE_515 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5822/SLICE_515/i5822/SLICE_515_K1_H1 , 
         \i5822/SLICE_515/i5822/GATE_H0 ;

  lut40108 \i5822/SLICE_515_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5822/SLICE_515/i5822/SLICE_515_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5822/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5822/SLICE_515/i5822/GATE_H0 ));
  selmux2 \i5822/SLICE_515_K0K1MUX ( .D0(\i5822/SLICE_515/i5822/GATE_H0 ), 
    .D1(\i5822/SLICE_515/i5822/SLICE_515_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5823_SLICE_516 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   GNDI, \i5823/SLICE_516/i5823/SLICE_516_K1_H1 , 
         \i5823/SLICE_516/i5823/GATE_H0 ;

  lut40108 \i5823/SLICE_516_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5823/SLICE_516/i5823/SLICE_516_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5823/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5823/SLICE_516/i5823/GATE_H0 ));
  selmux2 \i5823/SLICE_516_K0K1MUX ( .D0(\i5823/SLICE_516/i5823/GATE_H0 ), 
    .D1(\i5823/SLICE_516/i5823/SLICE_516_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i5823/SLICE_516_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module i6268_SLICE_517 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i6268/SLICE_517/i6268/SLICE_517_K1_H1 , GNDI, 
         \i6268/SLICE_517/i6268/GATE_H0 ;

  lut40123 \i6268/SLICE_517_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6268/SLICE_517/i6268/SLICE_517_K1_H1 ));
  lut40124 \i6268/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i6268/SLICE_517/i6268/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i6268/SLICE_517_K0K1MUX ( .D0(\i6268/SLICE_517/i6268/GATE_H0 ), 
    .D1(\i6268/SLICE_517/i6268/SLICE_517_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i6265_SLICE_518 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \i6265/SLICE_518/i6265/SLICE_518_K1_H1 , GNDI, 
         \i6265/SLICE_518/i6265/GATE_H0 ;

  lut40125 \i6265/SLICE_518_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i6265/SLICE_518/i6265/SLICE_518_K1_H1 ));
  lut40124 \i6265/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i6265/SLICE_518/i6265/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \i6265/SLICE_518_K0K1MUX ( .D0(\i6265/SLICE_518/i6265/GATE_H0 ), 
    .D1(\i6265/SLICE_518/i6265/SLICE_518_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5704_SLICE_519 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5704/SLICE_519/i5704/SLICE_519_K1_H1 , 
         \i5704/SLICE_519/i5704/GATE_H0 ;

  lut40108 \i5704/SLICE_519_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5704/SLICE_519/i5704/SLICE_519_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5704/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5704/SLICE_519/i5704/GATE_H0 ));
  selmux2 \i5704/SLICE_519_K0K1MUX ( .D0(\i5704/SLICE_519/i5704/GATE_H0 ), 
    .D1(\i5704/SLICE_519/i5704/SLICE_519_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5707_SLICE_520 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5707/SLICE_520/i5707/SLICE_520_K1_H1 , 
         \i5707/SLICE_520/i5707/GATE_H0 ;

  lut40108 \i5707/SLICE_520_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5707/SLICE_520/i5707/SLICE_520_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5707/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5707/SLICE_520/i5707/GATE_H0 ));
  selmux2 \i5707/SLICE_520_K0K1MUX ( .D0(\i5707/SLICE_520/i5707/GATE_H0 ), 
    .D1(\i5707/SLICE_520/i5707/SLICE_520_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5713_SLICE_521 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5713/SLICE_521/i5713/SLICE_521_K1_H1 , 
         \i5713/SLICE_521/i5713/GATE_H0 ;

  lut40108 \i5713/SLICE_521_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5713/SLICE_521/i5713/SLICE_521_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5713/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5713/SLICE_521/i5713/GATE_H0 ));
  selmux2 \i5713/SLICE_521_K0K1MUX ( .D0(\i5713/SLICE_521/i5713/GATE_H0 ), 
    .D1(\i5713/SLICE_521/i5713/SLICE_521_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5719_SLICE_522 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5719/SLICE_522/i5719/SLICE_522_K1_H1 , 
         \i5719/SLICE_522/i5719/GATE_H0 ;

  lut40108 \i5719/SLICE_522_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5719/SLICE_522/i5719/SLICE_522_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5719/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5719/SLICE_522/i5719/GATE_H0 ));
  selmux2 \i5719/SLICE_522_K0K1MUX ( .D0(\i5719/SLICE_522/i5719/GATE_H0 ), 
    .D1(\i5719/SLICE_522/i5719/SLICE_522_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5722_SLICE_523 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5722/SLICE_523/i5722/SLICE_523_K1_H1 , 
         \i5722/SLICE_523/i5722/GATE_H0 ;

  lut40108 \i5722/SLICE_523_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5722/SLICE_523/i5722/SLICE_523_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5722/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5722/SLICE_523/i5722/GATE_H0 ));
  selmux2 \i5722/SLICE_523_K0K1MUX ( .D0(\i5722/SLICE_523/i5722/GATE_H0 ), 
    .D1(\i5722/SLICE_523/i5722/SLICE_523_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5760_SLICE_524 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/tx/i5760/SLICE_524/shifter/tx/i5760/SLICE_524_K1_H1 , 
         \shifter/tx/i5760/SLICE_524/shifter/tx/i5760/GATE_H0 ;

  lut40108 \shifter/tx/i5760/SLICE_524_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5760/SLICE_524/shifter/tx/i5760/SLICE_524_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5760/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5760/SLICE_524/shifter/tx/i5760/GATE_H0 ));
  selmux2 \shifter/tx/i5760/SLICE_524_K0K1MUX ( 
    .D0(\shifter/tx/i5760/SLICE_524/shifter/tx/i5760/GATE_H0 ), 
    .D1(\shifter/tx/i5760/SLICE_524/shifter/tx/i5760/SLICE_524_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5761_SLICE_525 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \shifter/tx/i5761/SLICE_525/shifter/tx/i5761/SLICE_525_K1_H1 , 
         \shifter/tx/i5761/SLICE_525/shifter/tx/i5761/GATE_H0 ;

  lut40108 \shifter/tx/i5761/SLICE_525_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5761/SLICE_525/shifter/tx/i5761/SLICE_525_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5761/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5761/SLICE_525/shifter/tx/i5761/GATE_H0 ));
  selmux2 \shifter/tx/i5761/SLICE_525_K0K1MUX ( 
    .D0(\shifter/tx/i5761/SLICE_525/shifter/tx/i5761/GATE_H0 ), 
    .D1(\shifter/tx/i5761/SLICE_525/shifter/tx/i5761/SLICE_525_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \shifter/tx/i5761/SLICE_525_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5762_SLICE_526 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \shifter/tx/i5762/SLICE_526/shifter/tx/i5762/SLICE_526_K1_H1 , 
         \shifter/tx/i5762/SLICE_526/shifter/tx/i5762/GATE_H0 ;

  lut40108 \shifter/tx/i5762/SLICE_526_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5762/SLICE_526/shifter/tx/i5762/SLICE_526_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5762/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5762/SLICE_526/shifter/tx/i5762/GATE_H0 ));
  selmux2 \shifter/tx/i5762/SLICE_526_K0K1MUX ( 
    .D0(\shifter/tx/i5762/SLICE_526/shifter/tx/i5762/GATE_H0 ), 
    .D1(\shifter/tx/i5762/SLICE_526/shifter/tx/i5762/SLICE_526_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \shifter/tx/i5762/SLICE_526_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5763_SLICE_527 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \shifter/tx/i5763/SLICE_527/shifter/tx/i5763/SLICE_527_K1_H1 , 
         \shifter/tx/i5763/SLICE_527/shifter/tx/i5763/GATE_H0 ;

  lut40108 \shifter/tx/i5763/SLICE_527_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5763/SLICE_527/shifter/tx/i5763/SLICE_527_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5763/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5763/SLICE_527/shifter/tx/i5763/GATE_H0 ));
  selmux2 \shifter/tx/i5763/SLICE_527_K0K1MUX ( 
    .D0(\shifter/tx/i5763/SLICE_527/shifter/tx/i5763/GATE_H0 ), 
    .D1(\shifter/tx/i5763/SLICE_527/shifter/tx/i5763/SLICE_527_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \shifter/tx/i5763/SLICE_527_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5764_SLICE_528 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/tx/i5764/SLICE_528/shifter/tx/i5764/SLICE_528_K1_H1 , 
         \shifter/tx/i5764/SLICE_528/shifter/tx/i5764/GATE_H0 ;

  lut40108 \shifter/tx/i5764/SLICE_528_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5764/SLICE_528/shifter/tx/i5764/SLICE_528_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5764/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5764/SLICE_528/shifter/tx/i5764/GATE_H0 ));
  selmux2 \shifter/tx/i5764/SLICE_528_K0K1MUX ( 
    .D0(\shifter/tx/i5764/SLICE_528/shifter/tx/i5764/GATE_H0 ), 
    .D1(\shifter/tx/i5764/SLICE_528/shifter/tx/i5764/SLICE_528_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5765_SLICE_529 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \shifter/tx/i5765/SLICE_529/shifter/tx/i5765/SLICE_529_K1_H1 , 
         \shifter/tx/i5765/SLICE_529/shifter/tx/i5765/GATE_H0 ;

  lut40108 \shifter/tx/i5765/SLICE_529_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5765/SLICE_529/shifter/tx/i5765/SLICE_529_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5765/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5765/SLICE_529/shifter/tx/i5765/GATE_H0 ));
  selmux2 \shifter/tx/i5765/SLICE_529_K0K1MUX ( 
    .D0(\shifter/tx/i5765/SLICE_529/shifter/tx/i5765/GATE_H0 ), 
    .D1(\shifter/tx/i5765/SLICE_529/shifter/tx/i5765/SLICE_529_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \shifter/tx/i5765/SLICE_529_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5766_SLICE_530 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \shifter/tx/i5766/SLICE_530/shifter/tx/i5766/SLICE_530_K1_H1 , 
         \shifter/tx/i5766/SLICE_530/shifter/tx/i5766/GATE_H0 ;

  lut40108 \shifter/tx/i5766/SLICE_530_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5766/SLICE_530/shifter/tx/i5766/SLICE_530_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5766/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5766/SLICE_530/shifter/tx/i5766/GATE_H0 ));
  selmux2 \shifter/tx/i5766/SLICE_530_K0K1MUX ( 
    .D0(\shifter/tx/i5766/SLICE_530/shifter/tx/i5766/GATE_H0 ), 
    .D1(\shifter/tx/i5766/SLICE_530/shifter/tx/i5766/SLICE_530_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \shifter/tx/i5766/SLICE_530_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_tx_i5767_SLICE_531 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   GNDI, \shifter/tx/i5767/SLICE_531/shifter/tx/i5767/SLICE_531_K1_H1 , 
         \shifter/tx/i5767/SLICE_531/shifter/tx/i5767/GATE_H0 ;

  lut40108 \shifter/tx/i5767/SLICE_531_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/tx/i5767/SLICE_531/shifter/tx/i5767/SLICE_531_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/tx/i5767/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/tx/i5767/SLICE_531/shifter/tx/i5767/GATE_H0 ));
  selmux2 \shifter/tx/i5767/SLICE_531_K0K1MUX ( 
    .D0(\shifter/tx/i5767/SLICE_531/shifter/tx/i5767/GATE_H0 ), 
    .D1(\shifter/tx/i5767/SLICE_531/shifter/tx/i5767/SLICE_531_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \shifter/tx/i5767/SLICE_531_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5805_SLICE_532 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5805/SLICE_532/shifter/rx/i5805/SLICE_532_K1_H1 , 
         \shifter/rx/i5805/SLICE_532/shifter/rx/i5805/GATE_H0 ;

  lut40108 \shifter/rx/i5805/SLICE_532_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5805/SLICE_532/shifter/rx/i5805/SLICE_532_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5805/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5805/SLICE_532/shifter/rx/i5805/GATE_H0 ));
  selmux2 \shifter/rx/i5805/SLICE_532_K0K1MUX ( 
    .D0(\shifter/rx/i5805/SLICE_532/shifter/rx/i5805/GATE_H0 ), 
    .D1(\shifter/rx/i5805/SLICE_532/shifter/rx/i5805/SLICE_532_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5811_SLICE_533 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5811/SLICE_533/shifter/rx/i5811/SLICE_533_K1_H1 , 
         \shifter/rx/i5811/SLICE_533/shifter/rx/i5811/GATE_H0 ;

  lut40108 \shifter/rx/i5811/SLICE_533_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5811/SLICE_533/shifter/rx/i5811/SLICE_533_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5811/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5811/SLICE_533/shifter/rx/i5811/GATE_H0 ));
  selmux2 \shifter/rx/i5811/SLICE_533_K0K1MUX ( 
    .D0(\shifter/rx/i5811/SLICE_533/shifter/rx/i5811/GATE_H0 ), 
    .D1(\shifter/rx/i5811/SLICE_533/shifter/rx/i5811/SLICE_533_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5814_SLICE_534 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5814/SLICE_534/shifter/rx/i5814/SLICE_534_K1_H1 , 
         \shifter/rx/i5814/SLICE_534/shifter/rx/i5814/GATE_H0 ;

  lut40108 \shifter/rx/i5814/SLICE_534_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5814/SLICE_534/shifter/rx/i5814/SLICE_534_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5814/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5814/SLICE_534/shifter/rx/i5814/GATE_H0 ));
  selmux2 \shifter/rx/i5814/SLICE_534_K0K1MUX ( 
    .D0(\shifter/rx/i5814/SLICE_534/shifter/rx/i5814/GATE_H0 ), 
    .D1(\shifter/rx/i5814/SLICE_534/shifter/rx/i5814/SLICE_534_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5656_SLICE_535 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5656/SLICE_535/shifter/rx/i5656/SLICE_535_K1_H1 , 
         \shifter/rx/i5656/SLICE_535/shifter/rx/i5656/GATE_H0 ;

  lut40108 \shifter/rx/i5656/SLICE_535_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5656/SLICE_535/shifter/rx/i5656/SLICE_535_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5656/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5656/SLICE_535/shifter/rx/i5656/GATE_H0 ));
  selmux2 \shifter/rx/i5656/SLICE_535_K0K1MUX ( 
    .D0(\shifter/rx/i5656/SLICE_535/shifter/rx/i5656/GATE_H0 ), 
    .D1(\shifter/rx/i5656/SLICE_535/shifter/rx/i5656/SLICE_535_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5659_SLICE_536 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5659/SLICE_536/shifter/rx/i5659/SLICE_536_K1_H1 , 
         \shifter/rx/i5659/SLICE_536/shifter/rx/i5659/GATE_H0 ;

  lut40108 \shifter/rx/i5659/SLICE_536_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5659/SLICE_536/shifter/rx/i5659/SLICE_536_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5659/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5659/SLICE_536/shifter/rx/i5659/GATE_H0 ));
  selmux2 \shifter/rx/i5659/SLICE_536_K0K1MUX ( 
    .D0(\shifter/rx/i5659/SLICE_536/shifter/rx/i5659/GATE_H0 ), 
    .D1(\shifter/rx/i5659/SLICE_536/shifter/rx/i5659/SLICE_536_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5662_SLICE_537 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5662/SLICE_537/shifter/rx/i5662/SLICE_537_K1_H1 , 
         \shifter/rx/i5662/SLICE_537/shifter/rx/i5662/GATE_H0 ;

  lut40108 \shifter/rx/i5662/SLICE_537_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5662/SLICE_537/shifter/rx/i5662/SLICE_537_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5662/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5662/SLICE_537/shifter/rx/i5662/GATE_H0 ));
  selmux2 \shifter/rx/i5662/SLICE_537_K0K1MUX ( 
    .D0(\shifter/rx/i5662/SLICE_537/shifter/rx/i5662/GATE_H0 ), 
    .D1(\shifter/rx/i5662/SLICE_537/shifter/rx/i5662/SLICE_537_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5665_SLICE_538 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5665/SLICE_538/shifter/rx/i5665/SLICE_538_K1_H1 , 
         \shifter/rx/i5665/SLICE_538/shifter/rx/i5665/GATE_H0 ;

  lut40108 \shifter/rx/i5665/SLICE_538_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5665/SLICE_538/shifter/rx/i5665/SLICE_538_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5665/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5665/SLICE_538/shifter/rx/i5665/GATE_H0 ));
  selmux2 \shifter/rx/i5665/SLICE_538_K0K1MUX ( 
    .D0(\shifter/rx/i5665/SLICE_538/shifter/rx/i5665/GATE_H0 ), 
    .D1(\shifter/rx/i5665/SLICE_538/shifter/rx/i5665/SLICE_538_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5668_SLICE_539 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5668/SLICE_539/shifter/rx/i5668/SLICE_539_K1_H1 , 
         \shifter/rx/i5668/SLICE_539/shifter/rx/i5668/GATE_H0 ;

  lut40108 \shifter/rx/i5668/SLICE_539_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5668/SLICE_539/shifter/rx/i5668/SLICE_539_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5668/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5668/SLICE_539/shifter/rx/i5668/GATE_H0 ));
  selmux2 \shifter/rx/i5668/SLICE_539_K0K1MUX ( 
    .D0(\shifter/rx/i5668/SLICE_539/shifter/rx/i5668/GATE_H0 ), 
    .D1(\shifter/rx/i5668/SLICE_539/shifter/rx/i5668/SLICE_539_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5671_SLICE_540 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5671/SLICE_540/shifter/rx/i5671/SLICE_540_K1_H1 , 
         \shifter/rx/i5671/SLICE_540/shifter/rx/i5671/GATE_H0 ;

  lut40108 \shifter/rx/i5671/SLICE_540_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5671/SLICE_540/shifter/rx/i5671/SLICE_540_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5671/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5671/SLICE_540/shifter/rx/i5671/GATE_H0 ));
  selmux2 \shifter/rx/i5671/SLICE_540_K0K1MUX ( 
    .D0(\shifter/rx/i5671/SLICE_540/shifter/rx/i5671/GATE_H0 ), 
    .D1(\shifter/rx/i5671/SLICE_540/shifter/rx/i5671/SLICE_540_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5674_SLICE_541 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5674/SLICE_541/shifter/rx/i5674/SLICE_541_K1_H1 , 
         \shifter/rx/i5674/SLICE_541/shifter/rx/i5674/GATE_H0 ;

  lut40108 \shifter/rx/i5674/SLICE_541_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5674/SLICE_541/shifter/rx/i5674/SLICE_541_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5674/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5674/SLICE_541/shifter/rx/i5674/GATE_H0 ));
  selmux2 \shifter/rx/i5674/SLICE_541_K0K1MUX ( 
    .D0(\shifter/rx/i5674/SLICE_541/shifter/rx/i5674/GATE_H0 ), 
    .D1(\shifter/rx/i5674/SLICE_541/shifter/rx/i5674/SLICE_541_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5677_SLICE_542 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5677/SLICE_542/shifter/rx/i5677/SLICE_542_K1_H1 , 
         \shifter/rx/i5677/SLICE_542/shifter/rx/i5677/GATE_H0 ;

  lut40108 \shifter/rx/i5677/SLICE_542_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5677/SLICE_542/shifter/rx/i5677/SLICE_542_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5677/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5677/SLICE_542/shifter/rx/i5677/GATE_H0 ));
  selmux2 \shifter/rx/i5677/SLICE_542_K0K1MUX ( 
    .D0(\shifter/rx/i5677/SLICE_542/shifter/rx/i5677/GATE_H0 ), 
    .D1(\shifter/rx/i5677/SLICE_542/shifter/rx/i5677/SLICE_542_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5680_SLICE_543 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5680/SLICE_543/shifter/rx/i5680/SLICE_543_K1_H1 , 
         \shifter/rx/i5680/SLICE_543/shifter/rx/i5680/GATE_H0 ;

  lut40108 \shifter/rx/i5680/SLICE_543_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5680/SLICE_543/shifter/rx/i5680/SLICE_543_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5680/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5680/SLICE_543/shifter/rx/i5680/GATE_H0 ));
  selmux2 \shifter/rx/i5680/SLICE_543_K0K1MUX ( 
    .D0(\shifter/rx/i5680/SLICE_543/shifter/rx/i5680/GATE_H0 ), 
    .D1(\shifter/rx/i5680/SLICE_543/shifter/rx/i5680/SLICE_543_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5683_SLICE_544 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5683/SLICE_544/shifter/rx/i5683/SLICE_544_K1_H1 , 
         \shifter/rx/i5683/SLICE_544/shifter/rx/i5683/GATE_H0 ;

  lut40108 \shifter/rx/i5683/SLICE_544_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5683/SLICE_544/shifter/rx/i5683/SLICE_544_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5683/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5683/SLICE_544/shifter/rx/i5683/GATE_H0 ));
  selmux2 \shifter/rx/i5683/SLICE_544_K0K1MUX ( 
    .D0(\shifter/rx/i5683/SLICE_544/shifter/rx/i5683/GATE_H0 ), 
    .D1(\shifter/rx/i5683/SLICE_544/shifter/rx/i5683/SLICE_544_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5686_SLICE_545 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5686/SLICE_545/shifter/rx/i5686/SLICE_545_K1_H1 , 
         \shifter/rx/i5686/SLICE_545/shifter/rx/i5686/GATE_H0 ;

  lut40108 \shifter/rx/i5686/SLICE_545_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5686/SLICE_545/shifter/rx/i5686/SLICE_545_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5686/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5686/SLICE_545/shifter/rx/i5686/GATE_H0 ));
  selmux2 \shifter/rx/i5686/SLICE_545_K0K1MUX ( 
    .D0(\shifter/rx/i5686/SLICE_545/shifter/rx/i5686/GATE_H0 ), 
    .D1(\shifter/rx/i5686/SLICE_545/shifter/rx/i5686/SLICE_545_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5689_SLICE_546 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5689/SLICE_546/shifter/rx/i5689/SLICE_546_K1_H1 , 
         \shifter/rx/i5689/SLICE_546/shifter/rx/i5689/GATE_H0 ;

  lut40108 \shifter/rx/i5689/SLICE_546_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5689/SLICE_546/shifter/rx/i5689/SLICE_546_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5689/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5689/SLICE_546/shifter/rx/i5689/GATE_H0 ));
  selmux2 \shifter/rx/i5689/SLICE_546_K0K1MUX ( 
    .D0(\shifter/rx/i5689/SLICE_546/shifter/rx/i5689/GATE_H0 ), 
    .D1(\shifter/rx/i5689/SLICE_546/shifter/rx/i5689/SLICE_546_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5692_SLICE_547 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5692/SLICE_547/shifter/rx/i5692/SLICE_547_K1_H1 , 
         \shifter/rx/i5692/SLICE_547/shifter/rx/i5692/GATE_H0 ;

  lut40108 \shifter/rx/i5692/SLICE_547_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5692/SLICE_547/shifter/rx/i5692/SLICE_547_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5692/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5692/SLICE_547/shifter/rx/i5692/GATE_H0 ));
  selmux2 \shifter/rx/i5692/SLICE_547_K0K1MUX ( 
    .D0(\shifter/rx/i5692/SLICE_547/shifter/rx/i5692/GATE_H0 ), 
    .D1(\shifter/rx/i5692/SLICE_547/shifter/rx/i5692/SLICE_547_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5695_SLICE_548 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5695/SLICE_548/shifter/rx/i5695/SLICE_548_K1_H1 , 
         \shifter/rx/i5695/SLICE_548/shifter/rx/i5695/GATE_H0 ;

  lut40108 \shifter/rx/i5695/SLICE_548_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5695/SLICE_548/shifter/rx/i5695/SLICE_548_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5695/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5695/SLICE_548/shifter/rx/i5695/GATE_H0 ));
  selmux2 \shifter/rx/i5695/SLICE_548_K0K1MUX ( 
    .D0(\shifter/rx/i5695/SLICE_548/shifter/rx/i5695/GATE_H0 ), 
    .D1(\shifter/rx/i5695/SLICE_548/shifter/rx/i5695/SLICE_548_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5698_SLICE_549 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5698/SLICE_549/shifter/rx/i5698/SLICE_549_K1_H1 , 
         \shifter/rx/i5698/SLICE_549/shifter/rx/i5698/GATE_H0 ;

  lut40108 \shifter/rx/i5698/SLICE_549_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5698/SLICE_549/shifter/rx/i5698/SLICE_549_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5698/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5698/SLICE_549/shifter/rx/i5698/GATE_H0 ));
  selmux2 \shifter/rx/i5698/SLICE_549_K0K1MUX ( 
    .D0(\shifter/rx/i5698/SLICE_549/shifter/rx/i5698/GATE_H0 ), 
    .D1(\shifter/rx/i5698/SLICE_549/shifter/rx/i5698/SLICE_549_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5701_SLICE_550 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5701/SLICE_550/shifter/rx/i5701/SLICE_550_K1_H1 , 
         \shifter/rx/i5701/SLICE_550/shifter/rx/i5701/GATE_H0 ;

  lut40108 \shifter/rx/i5701/SLICE_550_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5701/SLICE_550/shifter/rx/i5701/SLICE_550_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5701/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5701/SLICE_550/shifter/rx/i5701/GATE_H0 ));
  selmux2 \shifter/rx/i5701/SLICE_550_K0K1MUX ( 
    .D0(\shifter/rx/i5701/SLICE_550/shifter/rx/i5701/GATE_H0 ), 
    .D1(\shifter/rx/i5701/SLICE_550/shifter/rx/i5701/SLICE_550_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5710_SLICE_551 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5710/SLICE_551/shifter/rx/i5710/SLICE_551_K1_H1 , 
         \shifter/rx/i5710/SLICE_551/shifter/rx/i5710/GATE_H0 ;

  lut40108 \shifter/rx/i5710/SLICE_551_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5710/SLICE_551/shifter/rx/i5710/SLICE_551_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5710/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5710/SLICE_551/shifter/rx/i5710/GATE_H0 ));
  selmux2 \shifter/rx/i5710/SLICE_551_K0K1MUX ( 
    .D0(\shifter/rx/i5710/SLICE_551/shifter/rx/i5710/GATE_H0 ), 
    .D1(\shifter/rx/i5710/SLICE_551/shifter/rx/i5710/SLICE_551_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5728_SLICE_552 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5728/SLICE_552/shifter/rx/i5728/SLICE_552_K1_H1 , 
         \shifter/rx/i5728/SLICE_552/shifter/rx/i5728/GATE_H0 ;

  lut40108 \shifter/rx/i5728/SLICE_552_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5728/SLICE_552/shifter/rx/i5728/SLICE_552_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5728/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5728/SLICE_552/shifter/rx/i5728/GATE_H0 ));
  selmux2 \shifter/rx/i5728/SLICE_552_K0K1MUX ( 
    .D0(\shifter/rx/i5728/SLICE_552/shifter/rx/i5728/GATE_H0 ), 
    .D1(\shifter/rx/i5728/SLICE_552/shifter/rx/i5728/SLICE_552_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5780_SLICE_553 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5780/SLICE_553/shifter/rx/i5780/SLICE_553_K1_H1 , 
         \shifter/rx/i5780/SLICE_553/shifter/rx/i5780/GATE_H0 ;

  lut40108 \shifter/rx/i5780/SLICE_553_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5780/SLICE_553/shifter/rx/i5780/SLICE_553_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5780/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5780/SLICE_553/shifter/rx/i5780/GATE_H0 ));
  selmux2 \shifter/rx/i5780/SLICE_553_K0K1MUX ( 
    .D0(\shifter/rx/i5780/SLICE_553/shifter/rx/i5780/GATE_H0 ), 
    .D1(\shifter/rx/i5780/SLICE_553/shifter/rx/i5780/SLICE_553_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5786_SLICE_554 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5786/SLICE_554/shifter/rx/i5786/SLICE_554_K1_H1 , 
         \shifter/rx/i5786/SLICE_554/shifter/rx/i5786/GATE_H0 ;

  lut40108 \shifter/rx/i5786/SLICE_554_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5786/SLICE_554/shifter/rx/i5786/SLICE_554_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5786/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5786/SLICE_554/shifter/rx/i5786/GATE_H0 ));
  selmux2 \shifter/rx/i5786/SLICE_554_K0K1MUX ( 
    .D0(\shifter/rx/i5786/SLICE_554/shifter/rx/i5786/GATE_H0 ), 
    .D1(\shifter/rx/i5786/SLICE_554/shifter/rx/i5786/SLICE_554_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5789_SLICE_555 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5789/SLICE_555/shifter/rx/i5789/SLICE_555_K1_H1 , 
         \shifter/rx/i5789/SLICE_555/shifter/rx/i5789/GATE_H0 ;

  lut40108 \shifter/rx/i5789/SLICE_555_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5789/SLICE_555/shifter/rx/i5789/SLICE_555_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5789/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5789/SLICE_555/shifter/rx/i5789/GATE_H0 ));
  selmux2 \shifter/rx/i5789/SLICE_555_K0K1MUX ( 
    .D0(\shifter/rx/i5789/SLICE_555/shifter/rx/i5789/GATE_H0 ), 
    .D1(\shifter/rx/i5789/SLICE_555/shifter/rx/i5789/SLICE_555_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_rx_i5802_SLICE_556 ( input C1, B1, A1, C0, B0, A0, M0, output 
    OFX0 );
  wire   GNDI, \shifter/rx/i5802/SLICE_556/shifter/rx/i5802/SLICE_556_K1_H1 , 
         \shifter/rx/i5802/SLICE_556/shifter/rx/i5802/GATE_H0 ;

  lut40108 \shifter/rx/i5802/SLICE_556_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/rx/i5802/SLICE_556/shifter/rx/i5802/SLICE_556_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \shifter/rx/i5802/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/rx/i5802/SLICE_556/shifter/rx/i5802/GATE_H0 ));
  selmux2 \shifter/rx/i5802/SLICE_556_K0K1MUX ( 
    .D0(\shifter/rx/i5802/SLICE_556/shifter/rx/i5802/GATE_H0 ), 
    .D1(\shifter/rx/i5802/SLICE_556/shifter/rx/i5802/SLICE_556_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_mux_159_i2_SLICE_557 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, output OFX0 );
  wire   
         \shifter/exec_ctrl/mux_159_i2/SLICE_557/shifter/exec_ctrl/mux_159_i2/SLICE_557_K1_H1 
         , 
         \shifter/exec_ctrl/mux_159_i2/SLICE_557/shifter/exec_ctrl/mux_159_i2/GATE_H0 
         ;

  lut40126 \shifter/exec_ctrl/mux_159_i2/SLICE_557_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\shifter/exec_ctrl/mux_159_i2/SLICE_557/shifter/exec_ctrl/mux_159_i2/SLICE_557_K1_H1 )
    );
  lut40127 \shifter/exec_ctrl/mux_159_i2/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/mux_159_i2/SLICE_557/shifter/exec_ctrl/mux_159_i2/GATE_H0 )
    );
  selmux2 \shifter/exec_ctrl/mux_159_i2/SLICE_557_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/mux_159_i2/SLICE_557/shifter/exec_ctrl/mux_159_i2/GATE_H0 )
    , 
    .D1(\shifter/exec_ctrl/mux_159_i2/SLICE_557/shifter/exec_ctrl/mux_159_i2/SLICE_557_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_mux_157_i1_SLICE_558 ( input D1, C1, B1, A1, D0, C0, 
    B0, A0, M0, output OFX0 );
  wire   
         \shifter/exec_ctrl/mux_157_i1/SLICE_558/shifter/exec_ctrl/mux_157_i1/SLICE_558_K1_H1 
         , 
         \shifter/exec_ctrl/mux_157_i1/SLICE_558/shifter/exec_ctrl/mux_157_i1/GATE_H0 
         ;

  lut40128 \shifter/exec_ctrl/mux_157_i1/SLICE_558_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\shifter/exec_ctrl/mux_157_i1/SLICE_558/shifter/exec_ctrl/mux_157_i1/SLICE_558_K1_H1 )
    );
  lut40110 \shifter/exec_ctrl/mux_157_i1/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/mux_157_i1/SLICE_558/shifter/exec_ctrl/mux_157_i1/GATE_H0 )
    );
  selmux2 \shifter/exec_ctrl/mux_157_i1/SLICE_558_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/mux_157_i1/SLICE_558/shifter/exec_ctrl/mux_157_i1/GATE_H0 )
    , 
    .D1(\shifter/exec_ctrl/mux_157_i1/SLICE_558/shifter/exec_ctrl/mux_157_i1/SLICE_558_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_i6396_SLICE_559 ( input B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \shifter/exec_ctrl/i6396/SLICE_559/shifter/exec_ctrl/i6396/SLICE_559_K1_H1 
         , \shifter/exec_ctrl/i6396/SLICE_559/shifter/exec_ctrl/i6396/GATE_H0 ;

  lut40107 \shifter/exec_ctrl/i6396/SLICE_559_K1 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), 
    .Z(\shifter/exec_ctrl/i6396/SLICE_559/shifter/exec_ctrl/i6396/SLICE_559_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40129 \shifter/exec_ctrl/i6396/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/exec_ctrl/i6396/SLICE_559/shifter/exec_ctrl/i6396/GATE_H0 ));
  selmux2 \shifter/exec_ctrl/i6396/SLICE_559_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/i6396/SLICE_559/shifter/exec_ctrl/i6396/GATE_H0 ), 
    .D1(\shifter/exec_ctrl/i6396/SLICE_559/shifter/exec_ctrl/i6396/SLICE_559_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_i6742_SLICE_560 ( input D1, C1, B1, A1, C0, B0, A0, 
    M0, output OFX0 );
  wire   
         \shifter/exec_ctrl/i6742/SLICE_560/shifter/exec_ctrl/i6742/SLICE_560_K1_H1 
         , GNDI, 
         \shifter/exec_ctrl/i6742/SLICE_560/shifter/exec_ctrl/i6742/GATE_H0 ;

  lut40130 \shifter/exec_ctrl/i6742/SLICE_560_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\shifter/exec_ctrl/i6742/SLICE_560/shifter/exec_ctrl/i6742/SLICE_560_K1_H1 )
    );
  lut40131 \shifter/exec_ctrl/i6742/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\shifter/exec_ctrl/i6742/SLICE_560/shifter/exec_ctrl/i6742/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \shifter/exec_ctrl/i6742/SLICE_560_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/i6742/SLICE_560/shifter/exec_ctrl/i6742/GATE_H0 ), 
    .D1(\shifter/exec_ctrl/i6742/SLICE_560/shifter/exec_ctrl/i6742/SLICE_560_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_i6177_SLICE_561 ( input C1, B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   GNDI, 
         \shifter/exec_ctrl/i6177/SLICE_561/shifter/exec_ctrl/i6177/SLICE_561_K1_H1 
         , \shifter/exec_ctrl/i6177/SLICE_561/shifter/exec_ctrl/i6177/GATE_H0 ;

  lut40132 \shifter/exec_ctrl/i6177/SLICE_561_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\shifter/exec_ctrl/i6177/SLICE_561/shifter/exec_ctrl/i6177/SLICE_561_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40133 \shifter/exec_ctrl/i6177/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/i6177/SLICE_561/shifter/exec_ctrl/i6177/GATE_H0 ));
  selmux2 \shifter/exec_ctrl/i6177/SLICE_561_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/i6177/SLICE_561/shifter/exec_ctrl/i6177/GATE_H0 ), 
    .D1(\shifter/exec_ctrl/i6177/SLICE_561/shifter/exec_ctrl/i6177/SLICE_561_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB3B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_mux_537_i1_SLICE_562 ( input C1, B1, A1, B0, A0, M0, 
    output OFX0 );
  wire   GNDI, 
         \shifter/exec_ctrl/mux_537_i1/SLICE_562/shifter/exec_ctrl/mux_537_i1/SLICE_562_K1_H1 
         , 
         \shifter/exec_ctrl/mux_537_i1/SLICE_562/shifter/exec_ctrl/mux_537_i1/GATE_H0 
         ;

  lut40134 \shifter/exec_ctrl/mux_537_i1/SLICE_562_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), 
    .Z(\shifter/exec_ctrl/mux_537_i1/SLICE_562/shifter/exec_ctrl/mux_537_i1/SLICE_562_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40107 \shifter/exec_ctrl/mux_537_i1/GATE ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), 
    .Z(\shifter/exec_ctrl/mux_537_i1/SLICE_562/shifter/exec_ctrl/mux_537_i1/GATE_H0 )
    );
  selmux2 \shifter/exec_ctrl/mux_537_i1/SLICE_562_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/mux_537_i1/SLICE_562/shifter/exec_ctrl/mux_537_i1/GATE_H0 )
    , 
    .D1(\shifter/exec_ctrl/mux_537_i1/SLICE_562/shifter/exec_ctrl/mux_537_i1/SLICE_562_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_i6175_SLICE_563 ( input D1, C1, B1, A1, D0, C0, B0, 
    A0, M0, output OFX0 );
  wire   
         \shifter/exec_ctrl/i6175/SLICE_563/shifter/exec_ctrl/i6175/SLICE_563_K1_H1 
         , \shifter/exec_ctrl/i6175/SLICE_563/shifter/exec_ctrl/i6175/GATE_H0 ;

  lut40135 \shifter/exec_ctrl/i6175/SLICE_563_K1 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), 
    .Z(\shifter/exec_ctrl/i6175/SLICE_563/shifter/exec_ctrl/i6175/SLICE_563_K1_H1 )
    );
  lut40136 \shifter/exec_ctrl/i6175/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/i6175/SLICE_563/shifter/exec_ctrl/i6175/GATE_H0 ));
  selmux2 \shifter/exec_ctrl/i6175/SLICE_563_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/i6175/SLICE_563/shifter/exec_ctrl/i6175/GATE_H0 ), 
    .D1(\shifter/exec_ctrl/i6175/SLICE_563/shifter/exec_ctrl/i6175/SLICE_563_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD850) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_s_tap_state_next_3__I_0_i4_SLICE_564 ( input C1, B1, 
    A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, 
         \shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564/shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564_K1_H1 
         , 
         \shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564/shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/GATE_H0 
         ;

  lut40137 \shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564_K1 ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), 
    .Z(\shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564/shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564_K1_H1 )
    );
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/GATE ( .A(A0), .B(B0), 
    .C(C0), .D(D0), 
    .Z(\shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564/shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/GATE_H0 )
    );
  selmux2 \shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564_K0K1MUX ( 
    .D0(\shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564/shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/GATE_H0 )
    , 
    .D1(\shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564/shifter/exec_ctrl/s_tap_state_next_3__I_0_i4/SLICE_564_K1_H1 )
    , .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_ckgen_i6496_SLICE_565 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    M0, output OFX0 );
  wire   \shifter/ckgen/i6496/SLICE_565/shifter/ckgen/i6496/SLICE_565_K1_H1 , 
         \shifter/ckgen/i6496/SLICE_565/shifter/ckgen/i6496/GATE_H0 ;

  lut40138 \shifter/ckgen/i6496/SLICE_565_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\shifter/ckgen/i6496/SLICE_565/shifter/ckgen/i6496/SLICE_565_K1_H1 ));
  lut40139 \shifter/ckgen/i6496/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\shifter/ckgen/i6496/SLICE_565/shifter/ckgen/i6496/GATE_H0 ));
  selmux2 \shifter/ckgen/i6496/SLICE_565_K0K1MUX ( 
    .D0(\shifter/ckgen/i6496/SLICE_565/shifter/ckgen/i6496/GATE_H0 ), 
    .D1(\shifter/ckgen/i6496/SLICE_565/shifter/ckgen/i6496/SLICE_565_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF5D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i5734_SLICE_566 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5734/SLICE_566/i5734/SLICE_566_K1_H1 , 
         \i5734/SLICE_566/i5734/GATE_H0 ;

  lut40108 \i5734/SLICE_566_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5734/SLICE_566/i5734/SLICE_566_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5734/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5734/SLICE_566/i5734/GATE_H0 ));
  selmux2 \i5734/SLICE_566_K0K1MUX ( .D0(\i5734/SLICE_566/i5734/GATE_H0 ), 
    .D1(\i5734/SLICE_566/i5734/SLICE_566_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5740_SLICE_567 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5740/SLICE_567/i5740/SLICE_567_K1_H1 , 
         \i5740/SLICE_567/i5740/GATE_H0 ;

  lut40108 \i5740/SLICE_567_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5740/SLICE_567/i5740/SLICE_567_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5740/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5740/SLICE_567/i5740/GATE_H0 ));
  selmux2 \i5740/SLICE_567_K0K1MUX ( .D0(\i5740/SLICE_567/i5740/GATE_H0 ), 
    .D1(\i5740/SLICE_567/i5740/SLICE_567_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5743_SLICE_568 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5743/SLICE_568/i5743/SLICE_568_K1_H1 , 
         \i5743/SLICE_568/i5743/GATE_H0 ;

  lut40108 \i5743/SLICE_568_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5743/SLICE_568/i5743/SLICE_568_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5743/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5743/SLICE_568/i5743/GATE_H0 ));
  selmux2 \i5743/SLICE_568_K0K1MUX ( .D0(\i5743/SLICE_568/i5743/GATE_H0 ), 
    .D1(\i5743/SLICE_568/i5743/SLICE_568_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5792_SLICE_569 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5792/SLICE_569/i5792/SLICE_569_K1_H1 , 
         \i5792/SLICE_569/i5792/GATE_H0 ;

  lut40108 \i5792/SLICE_569_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5792/SLICE_569/i5792/SLICE_569_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5792/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5792/SLICE_569/i5792/GATE_H0 ));
  selmux2 \i5792/SLICE_569_K0K1MUX ( .D0(\i5792/SLICE_569/i5792/GATE_H0 ), 
    .D1(\i5792/SLICE_569/i5792/SLICE_569_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5797_SLICE_570 ( input C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i5797/SLICE_570/i5797/SLICE_570_K1_H1 , 
         \i5797/SLICE_570/i5797/GATE_H0 ;

  lut40108 \i5797/SLICE_570_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5797/SLICE_570/i5797/SLICE_570_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5797/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5797/SLICE_570/i5797/GATE_H0 ));
  selmux2 \i5797/SLICE_570_K0K1MUX ( .D0(\i5797/SLICE_570/i5797/GATE_H0 ), 
    .D1(\i5797/SLICE_570/i5797/SLICE_570_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i5798_SLICE_571 ( input C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   GNDI, \i5798/SLICE_571/i5798/SLICE_571_K1_H1 , 
         \i5798/SLICE_571/i5798/GATE_H0 ;

  lut40108 \i5798/SLICE_571_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i5798/SLICE_571/i5798/SLICE_571_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \i5798/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\i5798/SLICE_571/i5798/GATE_H0 ));
  selmux2 \i5798/SLICE_571_K0K1MUX ( .D0(\i5798/SLICE_571/i5798/GATE_H0 ), 
    .D1(\i5798/SLICE_571/i5798/SLICE_571_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \i5798/SLICE_571_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_572 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_572/SLICE_572_K1_H1 , \SLICE_572/mux_177_Mux_0_0_0_0_H0 ;

  lut40140 SLICE_572_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_572/SLICE_572_K1_H1 ));
  lut40141 mux_177_Mux_0_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_572/mux_177_Mux_0_0_0_0_H0 ));
  selmux2 SLICE_572_K0K1MUX( .D0(\SLICE_572/mux_177_Mux_0_0_0_0_H0 ), 
    .D1(\SLICE_572/SLICE_572_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDEEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_573 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_573/SLICE_573_K1_H1 , \SLICE_573/mux_177_Mux_0_0_0_1_H0 ;

  lut40142 SLICE_573_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_573/SLICE_573_K1_H1 ));
  lut40143 mux_177_Mux_0_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_573/mux_177_Mux_0_0_0_1_H0 ));
  selmux2 SLICE_573_K0K1MUX( .D0(\SLICE_573/mux_177_Mux_0_0_0_1_H0 ), 
    .D1(\SLICE_573/SLICE_573_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_573_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3BCF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF3B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_574 ( input M1, FXB, FXA, output OFX0, OFX1 );
  wire   GNDI, \SLICE_574/mux_177_Mux_0_0_1_0_H0 ;

  lut40089 mux_177_Mux_0_0_1_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_574/mux_177_Mux_0_0_1_0_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux20144 SLICE_574_K0K1MUX( .D0(\SLICE_574/mux_177_Mux_0_0_1_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_574_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module selmux20144 ( input D0, output Z );

  BUFBA INST1( .A(D0), .Z(Z));
endmodule

module SLICE_575 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, FXB, FXA, output 
    OFX0, OFX1 );
  wire   \SLICE_575/SLICE_575_K1_H1 , GNDI, \SLICE_575/mux_177_Mux_0_0_1_1_H0 ;

  lut40145 SLICE_575_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_575/SLICE_575_K1_H1 ));
  lut40146 mux_177_Mux_0_0_1_1( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_575/mux_177_Mux_0_0_1_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 SLICE_575_K0K1MUX( .D0(\SLICE_575/mux_177_Mux_0_0_1_1_H0 ), 
    .D1(\SLICE_575/SLICE_575_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_575_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_576 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, FXB, FXA, output 
    OFX0, F1, OFX1 );
  wire   \SLICE_576/mux_177_Mux_0_1_0_0_H0 ;

  lut40147 \shifter/exec_ctrl/s_end_state_3__I_151_i2_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40148 mux_177_Mux_0_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_576/mux_177_Mux_0_1_0_0_H0 ));
  selmux20144 SLICE_576_K0K1MUX( .D0(\SLICE_576/mux_177_Mux_0_1_0_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_576_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_577 ( input M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_577/mux_177_Mux_0_1_0_1_H0 ;

  lut40149 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40149 mux_177_Mux_0_1_0_1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_577/mux_177_Mux_0_1_0_1_H0 ));
  selmux20144 SLICE_577_K0K1MUX( .D0(\SLICE_577/mux_177_Mux_0_1_0_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_577_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_578 ( input M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_578/mux_177_Mux_0_1_1_0_H0 ;

  lut40089 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 mux_177_Mux_0_1_1_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_578/mux_177_Mux_0_1_1_0_H0 ));
  selmux20144 SLICE_578_K0K1MUX( .D0(\SLICE_578/mux_177_Mux_0_1_1_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_578_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_579 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_579/SLICE_579_K1_H1 , \SLICE_579/mux_177_Mux_0_1_1_1_H0 ;

  lut40150 SLICE_579_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_579/SLICE_579_K1_H1 ));
  lut40151 mux_177_Mux_0_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_579/mux_177_Mux_0_1_1_1_H0 ));
  selmux2 SLICE_579_K0K1MUX( .D0(\SLICE_579/mux_177_Mux_0_1_1_1_H0 ), 
    .D1(\SLICE_579/SLICE_579_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_579_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0082) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_580 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_580/SLICE_580_K1_H1 , \SLICE_580/mux_177_Mux_1_0_0_0_H0 ;

  lut40152 SLICE_580_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_580/SLICE_580_K1_H1 ));
  lut40153 mux_177_Mux_1_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_580/mux_177_Mux_1_0_0_0_H0 ));
  selmux2 SLICE_580_K0K1MUX( .D0(\SLICE_580/mux_177_Mux_1_0_0_0_H0 ), 
    .D1(\SLICE_580/SLICE_580_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_581 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_581/SLICE_581_K1_H1 , \SLICE_581/mux_177_Mux_1_0_0_1_H0 ;

  lut40154 SLICE_581_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_581/SLICE_581_K1_H1 ));
  lut40155 mux_177_Mux_1_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_581/mux_177_Mux_1_0_0_1_H0 ));
  selmux2 SLICE_581_K0K1MUX( .D0(\SLICE_581/mux_177_Mux_1_0_0_1_H0 ), 
    .D1(\SLICE_581/SLICE_581_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_581_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF430) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_582 ( input B1, A1, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_582/mux_177_Mux_1_0_1_0_H0 ;

  lut40058 \shifter/exec_ctrl/n344_bdd_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40149 mux_177_Mux_1_0_1_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_582/mux_177_Mux_1_0_1_0_H0 ));
  selmux20144 SLICE_582_K0K1MUX( .D0(\SLICE_582/mux_177_Mux_1_0_1_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_582_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_583 ( input C1, B1, A1, A0, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_583/mux_177_Mux_1_0_1_1_H0 ;

  lut40156 \shifter/exec_ctrl/i6130_2_lut_2_lut_3_lut_4_lut_3_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40157 mux_177_Mux_1_0_1_1( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_583/mux_177_Mux_1_0_1_1_H0 ));
  selmux20144 SLICE_583_K0K1MUX( .D0(\SLICE_583/mux_177_Mux_1_0_1_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_583_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7272) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_584 ( input B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, output OFX0, 
    OFX1 );
  wire   GNDI, \SLICE_584/SLICE_584_K1_H1 , \SLICE_584/mux_177_Mux_1_1_0_0_H0 ;

  lut40158 SLICE_584_K1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_584/SLICE_584_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40159 mux_177_Mux_1_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_584/mux_177_Mux_1_1_0_0_H0 ));
  selmux2 SLICE_584_K0K1MUX( .D0(\SLICE_584/mux_177_Mux_1_1_0_0_H0 ), 
    .D1(\SLICE_584/SLICE_584_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_584_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3071) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_585 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, FXB, FXA, output 
    OFX0, F1, OFX1 );
  wire   \SLICE_585/mux_177_Mux_1_1_0_1_H0 ;

  lut40147 \shifter/exec_ctrl/s_end_state_3__I_151_i4_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40160 mux_177_Mux_1_1_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_585/mux_177_Mux_1_1_0_1_H0 ));
  selmux20144 SLICE_585_K0K1MUX( .D0(\SLICE_585/mux_177_Mux_1_1_0_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_585_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h444C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_586 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_586/SLICE_586_K1_H1 , \SLICE_586/mux_177_Mux_1_1_1_0_H0 ;

  lut40152 SLICE_586_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_586/SLICE_586_K1_H1 ));
  lut40161 mux_177_Mux_1_1_1_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_586/mux_177_Mux_1_1_1_0_H0 ));
  selmux2 SLICE_586_K0K1MUX( .D0(\SLICE_586/mux_177_Mux_1_1_1_0_H0 ), 
    .D1(\SLICE_586/SLICE_586_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_586_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_587 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_587/SLICE_587_K1_H1 , \SLICE_587/mux_177_Mux_1_1_1_1_H0 ;

  lut40162 SLICE_587_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_587/SLICE_587_K1_H1 ));
  lut40163 mux_177_Mux_1_1_1_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_587/mux_177_Mux_1_1_1_1_H0 ));
  selmux2 SLICE_587_K0K1MUX( .D0(\SLICE_587/mux_177_Mux_1_1_1_1_H0 ), 
    .D1(\SLICE_587/SLICE_587_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_587_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB531) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_588 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \SLICE_588/SLICE_588_K1_H1 , \SLICE_588/mux_177_Mux_2_0_0_0_H0 ;

  lut40164 SLICE_588_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_588/SLICE_588_K1_H1 ));
  lut40165 mux_177_Mux_2_0_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_588/mux_177_Mux_2_0_0_0_H0 ));
  selmux2 SLICE_588_K0K1MUX( .D0(\SLICE_588/mux_177_Mux_2_0_0_0_H0 ), 
    .D1(\SLICE_588/SLICE_588_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3233) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3332) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_589 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_589/SLICE_589_K1_H1 , \SLICE_589/mux_177_Mux_2_0_0_1_H0 ;

  lut40166 SLICE_589_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_589/SLICE_589_K1_H1 ));
  lut40167 mux_177_Mux_2_0_0_1( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_589/mux_177_Mux_2_0_0_1_H0 ));
  selmux2 SLICE_589_K0K1MUX( .D0(\SLICE_589/mux_177_Mux_2_0_0_1_H0 ), 
    .D1(\SLICE_589/SLICE_589_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_589_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h33B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_590 ( input C1, B1, A1, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_590/mux_177_Mux_2_0_1_0_H0 ;

  lut40077 s_reg_rd_sel_3__I_0_Mux_0_i9_3_lut( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40089 mux_177_Mux_2_0_1_0( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_590/mux_177_Mux_2_0_1_0_H0 ));
  selmux20144 SLICE_590_K0K1MUX( .D0(\SLICE_590/mux_177_Mux_2_0_1_0_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_590_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_591 ( input B1, A1, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_591/mux_177_Mux_2_0_1_1_H0 ;

  lut40032 i1_2_lut_adj_213( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40149 mux_177_Mux_2_0_1_1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_591/mux_177_Mux_2_0_1_1_H0 ));
  selmux20144 SLICE_591_K0K1MUX( .D0(\SLICE_591/mux_177_Mux_2_0_1_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_591_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_592 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, FXA, 
    output OFX0, OFX1 );
  wire   \SLICE_592/SLICE_592_K1_H1 , \SLICE_592/mux_177_Mux_2_1_0_0_H0 ;

  lut40168 SLICE_592_K1( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SLICE_592/SLICE_592_K1_H1 ));
  lut40169 mux_177_Mux_2_1_0_0( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\SLICE_592/mux_177_Mux_2_1_0_0_H0 ));
  selmux2 SLICE_592_K0K1MUX( .D0(\SLICE_592/mux_177_Mux_2_1_0_0_H0 ), 
    .D1(\SLICE_592/SLICE_592_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 SLICE_592_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_593 ( input D1, C1, B1, A1, M1, FXB, FXA, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_593/mux_177_Mux_2_1_0_1_H0 ;

  lut40030 \cram_bus/addr_r/q_15__I_14_2_lut_rep_117_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40149 mux_177_Mux_2_1_0_1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_593/mux_177_Mux_2_1_0_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux20144 SLICE_593_K0K1MUX( .D0(\SLICE_593/mux_177_Mux_2_1_0_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_593_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_594 ( input A1, M1, M0, FXB, FXA, CE, CLK, output Q0, F1, OFX1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40027 s_cfg_10__I_0_1_lut( .A(A1), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_594_FXMUX( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_595 ( input D1, C1, B1, A1, M1, FXB, output OFX0, F1, OFX1 );
  wire   GNDI, \SLICE_595/mux_177_Mux_2_1_1_1_H0 , VCCI;

  lut40078 \tmr_r/q_15__I_8_2_lut_rep_83_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40089 mux_177_Mux_2_1_1_1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_595/mux_177_Mux_2_1_1_1_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux20144 SLICE_595_K0K1MUX( .D0(\SLICE_595/mux_177_Mux_2_1_1_1_H0 ), 
    .Z(OFX0));
  selmux2 SLICE_595_FXMUX( .D0(VCCI), .D1(FXB), .SD(M1), .Z(OFX1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module shifter_SLICE_596 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40170 \shifter/tx/s_addr_r_9__I_0_i4_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40171 \shifter/tx/s_sum_9__I_72_3_lut_rep_84_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_op_fifo.head_FSM_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_op_fifo.head_FSM_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB748) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_597 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40171 \shifter/tx/s_sum_9__I_67_3_lut_rep_76_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40170 \shifter/tx/s_addr_r_9__I_0_i9_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_598 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40170 \shifter/tx/s_addr_r_9__I_0_i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40171 \shifter/tx/s_pos_3__I_62_3_lut_rep_146_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_599 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40171 \shifter/tx/s_sum_9__I_69_3_lut_rep_78_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/tx/s_sum_9__I_71_3_lut_rep_81_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_op_fifo.head_FSM_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/rx/s_op_fifo.head_FSM_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_600 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40172 \shifter/tx/s_addr_r_9__I_0_i10_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40171 \shifter/tx/s_sum_9__I_66_3_lut_rep_75_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..pos_i0_i3 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_601 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40171 \shifter/tx/s_pos_wrap_I_0_3_lut_rep_135_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/tx/s_pos_3__I_63_3_lut_rep_157_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..pos_i0_i0 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..msbf_402 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_602 ( input D1, C1, B1, A1, D0, C0, B0, A0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, CE_dly, CLK_dly, LSR_dly;

  lut40171 \shifter/tx/s_sum_9__I_70_3_lut_rep_79_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/tx/s_sum_9__I_68_3_lut_rep_77_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0048 \shifter/rx/s_op_fifo.empty_414 ( .D0(GNDI), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_603 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40171 \shifter/rx/bit_pos_3__I_91_3_lut_rep_152_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40173 \shifter/shift_ctrl/bit_pos_3__I_93_3_lut_rep_180_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..addr_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_604 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40171 \shifter/rx/s_addr_r1_9__I_98_3_lut_rep_105_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/rx/s_addr_r1_9__I_96_3_lut_rep_95_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i4 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_605 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40171 \shifter/rx/s_addr_r1_9__I_95_3_lut_rep_91_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/rx/s_addr_r1_9__I_97_3_lut_rep_101_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i6 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i5 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_606 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40171 \shifter/rx/s_addr_r1_9__I_101_3_lut_rep_120_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/rx/s_addr_r1_9__I_99_3_lut_rep_112_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i8 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i7 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_607 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40171 \shifter/rx/s_addr_r1_9__I_102_3_lut_rep_127_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/rx/s_addr_r1_9__I_100_3_lut_rep_116_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0021 \shifter/ckgen/s_div_hi_r0_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i15 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_608 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, CE_NOTIN, M0_dly, CLK_dly, CE_dly;

  lut40171 \shifter/rx/s_wrap_stb_I_115_3_lut_rep_143_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40171 \shifter/rx/bit_pos_3__I_92_3_lut_rep_161_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/io/s_tckn_r1_37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_NOTIN), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter CE_INVERTERIN( .I(CE_dly), .Z(CE_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_609 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \shifter/exec_ctrl/i6501/GATE ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40174 \shifter/exec_ctrl/mux_177_Mux_3_i221_4_lut_else_1_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \r3/s_reg_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC7C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_610 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40175 \shifter/exec_ctrl/mux_155_i1_3_lut_4_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40176 
    \shifter/exec_ctrl/tap_state_3__I_0_200_Mux_1_i15_3_lut_4_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \cram_bus/s_start_stb_136 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/s_cram_mem_rd_addr_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F32) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_611 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40177 \shifter/exec_ctrl/i1281_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40178 \shifter/exec_ctrl/i2311_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB3B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_612 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 \led_run_drv/i23_2_lut_rep_205 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40179 \led_run_drv/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF2F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_613 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40078 \tmr_r/q_15__I_12_2_lut_rep_102_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40078 \tmr_r/q_15__I_9_2_lut_rep_87_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..pos_i0_i0 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..msbf_398 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_614 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40078 \tmr_r/q_15__I_13_2_lut_rep_106_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40078 \tmr_r/q_15__I_10_2_lut_rep_92_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/shift_ctrl/s_rx_en_r1_234 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/shift_ctrl/s_en_r2_213 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_615 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40180 q_15__I_21_2_lut_rep_181_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \tmr_r/q_15__I_18_2_lut_rep_142_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_616 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40078 \tmr_r/q_15__I_14_2_lut_rep_113_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40078 \tmr_r/q_15__I_11_2_lut_rep_96_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_617 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 s_1mhz_stb_I_0_2_lut_rep_213( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \tmr_r/q_15__I_19_2_lut_rep_153_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_618 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40067 q_15__I_20_2_lut_rep_162_3_lut_4_lut( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40078 \tmr_r/q_15__I_17_2_lut_rep_133_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_619 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40181 n1583_bdd_2_lut_6192_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40182 n1583_bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_620 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40183 \shifter/exec_ctrl/i3452_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40184 i5848_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h808A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_621 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40185 n7185_bdd_2_lut_6207_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40186 n7185_bdd_4_lut_6559( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF011) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_622 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40187 i5982_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40182 n1583_bdd_4_lut_6494( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_623 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40032 \cram_bus/i1_2_lut_rep_211 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40188 \cram_bus/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_624 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40103 \cram_bus/reg_wr_fifo/i6062_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40189 \cram_bus/i2_3_lut_rep_173_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_625 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/reg_wr_fifo/i1784_3_lut_rep_170 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/reg_wr_fifo/mux_169_i3_3_lut_rep_197 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_626 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40031 \cram_bus/addr_r/q_15__I_20_2_lut_rep_171_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 \cram_bus/addr_r/q_15__I_17_2_lut_rep_137_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_627 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \cram_bus/addr_r/q_15__I_12_2_lut_rep_104_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \cram_bus/addr_r/q_15__I_9_2_lut_rep_90_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_628 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \cram_bus/addr_r/q_15__I_13_2_lut_rep_109_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \cram_bus/addr_r/q_15__I_10_2_lut_rep_94_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_629 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \cram_bus/addr_r/q_15__I_8_2_lut_rep_86_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \cram_bus/addr_r/q_15__I_11_2_lut_rep_99_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_630 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \cram_bus/addr_r/q_15__I_15_2_lut_rep_122_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \cram_bus/addr_r/q_15__I_18_2_lut_rep_145_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_631 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \cram_bus/addr_r/q_15__I_16_2_lut_rep_130_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \cram_bus/addr_r/q_15__I_19_2_lut_rep_156_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_632 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40087 \shifter/exec_ctrl/i2_3_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40190 i48_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_633 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40053 \cklgen_1khz/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \cklgen_1khz/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_634 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40191 \cklgen_1khz/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \cklgen_1khz/i2351_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_635 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40192 i1_2_lut_3_lut_4_lut_adj_217( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40075 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_636 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40075 i1_4_lut_adj_218( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40188 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_637 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40032 \led_con_drv/s_trip_r0_I_0_2_lut_rep_207 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40193 \led_con_drv/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF8F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_638 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40031 \cklgen_1mhz/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \cklgen_1mhz/i6099_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_639 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40194 \shifter/shift_ctrl/tx_shift_stb_I_0_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \shifter/tx/s_pos_3__I_64_3_lut_rep_176 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..pos_i0_i2 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..pos_i0_i1 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_640 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40192 \shifter/shift_ctrl/i2_2_lut_rep_103_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \shifter/shift_ctrl/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_641 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \shifter/shift_ctrl/s_offs_r_7__I_139_2_lut_rep_93_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40030 \shifter/shift_ctrl/s_offs_r_7__I_136_2_lut_rep_82_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..pos_i0_i0 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..msbf_406 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_642 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40060 \shifter/shift_ctrl/i3284_2_lut_rep_167_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 \shifter/shift_ctrl/i3290_2_lut_rep_136_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_643 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \shifter/shift_ctrl/s_offs_r_7__I_137_2_lut_rep_85_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \shifter/shift_ctrl/i3_3_lut_rep_98_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_644 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \shifter/shift_ctrl/i3294_2_lut_rep_121_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \shifter/shift_ctrl/i3288_2_lut_rep_144_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_645 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \shifter/shift_ctrl/i3292_2_lut_rep_129_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 \shifter/shift_ctrl/i3402_2_lut_rep_108_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_646 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \shifter/shift_ctrl/s_offs_r_7__I_135_2_lut_rep_80_3_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \shifter/shift_ctrl/s_offs_r_7__I_138_2_lut_rep_89_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..pos_i0_i2 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..pos_i0_i1 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_647 ( input D1, C1, B1, A1, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40068 \shifter/rx/s_count_r_9__I_108_2_lut_rep_139_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 \shifter/shift_ctrl/shift_stb_I_0_2_lut_rep_175_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..pos_i0_i3 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_648 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \shifter/shift_ctrl/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40195 \shifter/shift_ctrl/s_offs_inc_I_141_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h888C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_649 ( input B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40058 \shifter/rx/i1_2_lut_rep_186 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40196 \shifter/rx/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i12 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i11 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_650 ( input B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40197 \shifter/rx/bit_pos_3__I_0_457_i6_2_lut_rep_183 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40198 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_181 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i14 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i13 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_651 ( input B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40085 \shifter/rx/bit_pos_3__I_0_465_i6_2_lut_rep_185 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40198 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_182 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_652 ( input B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40197 \shifter/rx/bit_pos_3__I_0_471_i5_2_lut_rep_187 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_183 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_653 ( input B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40085 \shifter/rx/bit_pos_3__I_0_465_i5_2_lut_rep_188 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_186 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_654 ( input B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40033 \shifter/rx/bit_pos_3__I_0_474_i6_2_lut_rep_192 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40199 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_189 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_655 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40068 \shifter/rx/s_count_r_9__I_106_2_lut_rep_123_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \shifter/rx/s_count_r_9__I_109_2_lut_rep_147_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_656 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40055 \shifter/rx/i1_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40200 \shifter/rx/i6101_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i14 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i13 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0820) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_657 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \shifter/exec_ctrl/mux_564_i3_3_lut_rep_219 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40201 \shifter/exec_ctrl/i1840_3_lut_3_lut_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_658 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40202 \shifter/exec_ctrl/n4_bdd_4_lut_6404 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40203 \shifter/exec_ctrl/mux_102_Mux_8_i15_4_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \r3/s_reg_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_659 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40204 \shifter/exec_ctrl/i2307_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40205 \shifter/exec_ctrl/n182_bdd_4_lut_6813 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_enabled_115 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_660 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40206 \shifter/exec_ctrl/i3459_3_lut_rep_160_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40054 \shifter/exec_ctrl/i6072_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_661 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40207 \shifter/exec_ctrl/n182_bdd_4_lut_6500 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40208 \shifter/exec_ctrl/mux_562_i1_3_lut_rep_222 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \r3/s_reg_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \r3/s_reg_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4CC8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9A9A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_662 ( input C1, B1, A1, C0, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40054 \shifter/exec_ctrl/i6128_2_lut_rep_125_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/exec_ctrl/mux_564_i2_3_lut_rep_218 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \rx_mem/_931 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_663 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40209 \shifter/exec_ctrl/i5504_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40147 \shifter/exec_ctrl/s_end_state_3__I_151_i3_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_1__181_rep_228 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/addr_r/s_count_reg_1__181_rep_227 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_664 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40210 \shifter/exec_ctrl/i1328_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40033 \shifter/exec_ctrl/i5529_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC1C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_665 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, LSR_NOTIN, M0_dly, CLK_dly, LSR_dly;

  lut40209 \shifter/exec_ctrl/i5531_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40147 \shifter/exec_ctrl/s_end_state_3__I_151_i1_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre \shifter/ckgen/s_tcki_r1_119 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_666 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40211 \shifter/exec_ctrl/i6001_3_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40212 \shifter/exec_ctrl/tap_state_3__I_0_199_Mux_1_i15_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \cram_bus/s_cram_mem_rd_addr_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \cram_bus/s_cram_mem_rd_addr_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h32B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_667 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40213 \shifter/exec_ctrl/i5568_3_lut_3_lut_4_lut_4_lut_4_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40214 \shifter/exec_ctrl/s_opc_2__I_0_235_i4_2_lut_rep_150_4_lut_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_668 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, 
    CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40215 \shifter/exec_ctrl/i5587_3_lut_3_lut_4_lut_4_lut_4_lut_4_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40216 \shifter/exec_ctrl/s_opc_2__I_0_232_i4_2_lut_rep_154_4_lut_3_lut ( 
    .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_669 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40217 \shifter/exec_ctrl/i6109_2_lut_3_lut_3_lut_3_lut_3_lut_4_lut_3_lut 
    ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \shifter/exec_ctrl/mux_564_i1_3_lut_rep_165 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \r3/s_reg_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2424) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_670 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40218 \shifter/exec_ctrl/mux_562_i2_3_lut_rep_216 ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40180 \shifter/exec_ctrl/i1_2_lut_4_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \int_en_r/s_reg__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \int_en_r/s_reg__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_671 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40033 \shifter/exec_ctrl/insn_goto_I_0_238_2_lut_rep_149 ( .A(A1), .B(B1), 
    .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40219 \shifter/exec_ctrl/i3158_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \mem_rd_addr/s_reg__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_672 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40220 \shifter/exec_ctrl/i3350_3_lut_rep_217 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40221 \shifter/exec_ctrl/i1317_3_lut_rep_159_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7373) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFE0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_673 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40087 \shifter/exec_ctrl/i6088_2_lut_rep_132_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40222 \shifter/exec_ctrl/i6102_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \mem_wr_addr/s_reg__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF01) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_674 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40223 \shifter/ckgen/i2383_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40058 \shifter/ckgen/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCE00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_675 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40197 \shifter/ckgen/i1_2_lut_rep_189 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40224 \shifter/ckgen/i2358_2_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5054) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_676 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40225 \shifter/ckgen/i1_3_lut_rep_134 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40226 \shifter/ckgen/i1_2_lut_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD5D5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_677 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40189 i1_2_lut_4_lut_adj_206( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 i1_2_lut_4_lut_adj_205( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_678 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40061 \shifter/shift_ctrl/i2365_2_lut_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40227 \shifter/shift_ctrl/i1_2_lut_3_lut_4_lut_adj_199 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..msbf_410 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_679 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40204 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_195 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40196 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_192 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i10 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i1 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_680 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40199 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_194 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40228 \shifter/rx/i1_2_lut_3_lut_4_lut_adj_193 ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i12 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_hi_r0_i11 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_681 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40229 \shifter/exec_ctrl/i1231_3_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40230 \shifter/exec_ctrl/tap_state_3__I_0_201_Mux_0_i15_3_lut_4_lut ( 
    .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..pos_i0_i2 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..pos_i0_i1 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h08F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F67) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_682 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40231 \shifter/exec_ctrl/i3386_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40232 \shifter/exec_ctrl/s_status_2__bdd_4_lut_6425 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2F3B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_683 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40233 \shifter/exec_ctrl/s_status_0__bdd_4_lut_6664 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40234 \shifter/exec_ctrl/s_status_3__bdd_4_lut_6381 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1E1B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCD0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_684 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40235 \shifter/exec_ctrl/i3184_3_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40236 \shifter/exec_ctrl/s_status_0__bdd_4_lut_6495 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_685 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40053 \shifter/exec_ctrl/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40237 \shifter/exec_ctrl/s_status_3__bdd_4_lut_6390 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h331F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_686 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40238 \cram_bus/reg_wr_fifo/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40077 \cram_bus/reg_wr_fifo/mux_169_i4_3_lut_rep_198 ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_687 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40087 \cram_bus/reg_wr_fifo/i6065_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40180 \cram_bus/reg_wr_fifo/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_688 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40087 n1583_bdd_2_lut_6201_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 i1_2_lut_rep_169_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_689 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40065 \shifter/shift_ctrl/i1_2_lut_3_lut_4_lut_adj_198 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40065 \shifter/shift_ctrl/i1_2_lut_3_lut_4_lut_adj_196 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_690 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40044 \shifter/exec_ctrl/i6108_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40239 \shifter/exec_ctrl/i6112_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \mem_wr_addr/s_reg__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_691 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40240 \shifter/exec_ctrl/i1302_4_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40241 \shifter/exec_ctrl/mux_177_Mux_3_i236_3_lut_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \r3/s_reg_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB2B2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0B4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_692 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40242 \shifter/exec_ctrl/i2843_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40243 \shifter/exec_ctrl/i1_2_lut_rep_177_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4408) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_693 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40244 \shifter/exec_ctrl/i3394_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40244 \shifter/exec_ctrl/i3303_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \mem_rd_addr/s_reg__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_694 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40244 \shifter/exec_ctrl/i1_2_lut_3_lut_4_lut_adj_180 ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40244 \shifter/exec_ctrl/i1_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i3 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_695 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40244 \shifter/exec_ctrl/i3393_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40244 \shifter/exec_ctrl/i1_2_lut_3_lut_4_lut_adj_174 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i5 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i4 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_696 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40244 \shifter/exec_ctrl/i3392_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40244 \shifter/exec_ctrl/i1_2_lut_3_lut_4_lut_adj_175 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i7 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i6 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_exec_ctrl_SLICE_697 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40028 \shifter/exec_ctrl/i6096_2_lut_rep_126_2_lut_3_lut ( .A(A1), .B(B1), 
    .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40214 \shifter/exec_ctrl/s_opc_2__I_0_235_i5_2_lut_rep_140_3_lut ( .A(A0), 
    .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_698 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40245 \shifter/exec_ctrl/n8037_bdd_2_lut_3_lut_3_lut_4_lut_3_lut ( .A(A1), 
    .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40246 \shifter/exec_ctrl/i1_2_lut_3_lut_3_lut_3_lut ( .A(A0), .B(B0), 
    .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i15 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i14 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40245 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9191) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40246 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB5B5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_699 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40063 \shifter/ckgen/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40028 \shifter/ckgen/i2_3_lut_rep_194 ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_700 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 i1_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40247 i2342_1_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40247 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_701 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40078 \tmr_r/q_15__I_16_2_lut_rep_124_3_lut_4_lut ( .A(A1), .B(B1), 
    .C(C1), .D(D1), .Z(F1));
  lut40078 \tmr_r/q_15__I_15_2_lut_rep_119_3_lut_4_lut ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..len_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_702 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40066 \cram_bus/i1_2_lut_3_lut_4_lut_adj_202 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40067 i1_2_lut_4_lut_adj_204( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_703 ( input C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40243 i6132_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 i1260_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_704 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40170 \shifter/tx/s_addr_r_9__I_0_i3_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40170 \shifter/tx/s_addr_r_9__I_0_i2_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_705 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40170 \shifter/tx/s_addr_r_9__I_0_i6_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40170 \shifter/tx/s_addr_r_9__I_0_i5_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_706 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40170 \shifter/tx/s_addr_r_9__I_0_i8_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40170 \shifter/tx/s_addr_r_9__I_0_i7_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..len_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_707 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \shifter/shift_ctrl/i3286_2_lut_rep_155_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 \shifter/shift_ctrl/i3282_2_lut_rep_191 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..addr_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_708 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40248 \shifter/exec_ctrl/i6077_2_lut_rep_151_4_lut_3_lut_4_lut_3_lut ( 
    .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40249 \shifter/exec_ctrl/i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \r3/s_reg_i0_i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40249 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_709 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40250 \shifter/exec_ctrl/i1_3_lut_rep_110_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40068 \shifter/exec_ctrl/i871_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \r3/s_reg_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40250 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_SLICE_710 ( input D1, C1, B1, A1, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40251 \shifter/exec_ctrl/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40024 \shifter/exec_ctrl/tdi_en_I_159_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_3..pos_i0_i3 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40251 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_711 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40188 \shifter/exec_ctrl/i3407_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40197 \shifter/exec_ctrl/i2168_2_lut_rep_184 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_712 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40252 \shifter/exec_ctrl/i3323_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40253 \shifter/exec_ctrl/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40252 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F8F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40253 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_exec_ctrl_SLICE_713 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, 
    M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40254 \shifter/exec_ctrl/s_opc_0__bdd_4_lut_6411 ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40171 \shifter/exec_ctrl/s_opc_1__bdd_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/exec_ctrl/s_insn_r0_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0900) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_714 ( input C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40087 \shifter/exec_ctrl/i1273_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40024 \shifter/exec_ctrl/i1_2_lut_rep_138 ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \mem_rd_addr/s_reg__i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_rd_addr/s_reg__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_715 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40103 \shifter/exec_ctrl/i3395_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \shifter/exec_ctrl/i1_2_lut_3_lut_adj_176 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \desc_lo/s_reg_i0_i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \desc_lo/s_reg_i0_i8 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_716 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40103 \shifter/exec_ctrl/i1_2_lut_3_lut_adj_179 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \shifter/exec_ctrl/i1_2_lut_3_lut_adj_177 ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \int_en_r/s_reg__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \int_en_r/s_reg__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_717 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40103 \shifter/exec_ctrl/i3397_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \shifter/exec_ctrl/i3396_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \mem_wr_addr/s_reg__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_718 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40103 \shifter/exec_ctrl/i1_2_lut_3_lut_adj_178 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \shifter/exec_ctrl/i3304_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \mem_wr_addr/s_reg__i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \mem_wr_addr/s_reg__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_719 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40032 \rx_mem/i926_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \rx_mem/i927_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_720 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40033 \led_run_drv/i949_2_lut_rep_202 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \led_run_drv/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_721 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40057 s_desc_lo_11__bdd_3_lut_6231( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 s_desc_lo_10__bdd_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i6 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i5 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_722 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 s_desc_lo_11__bdd_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 s_desc_lo_7__bdd_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_723 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 s_desc_lo_9__bdd_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 s_desc_lo_7__bdd_3_lut_6239( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_724 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40057 s_desc_lo_9__bdd_3_lut_6216( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 s_desc_lo_4__bdd_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i8 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i7 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_725 ( input C1, B1, A1, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40077 s_desc_lo_8__bdd_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 s_desc_lo_4__bdd_3_lut_6244( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data2_i0_i9 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_726 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40197 i3163_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 i3161_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_727 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 \cram_bus/s_start_stb_I_0_141_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \cram_bus/s_start_stb_I_0_140_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr3_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr3_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_728 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i16_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i1_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i9 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_rtdiv_r/s_reg_i0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_729 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i15_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i2_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr0_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr0_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_730 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i14_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i3_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr0_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr0_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_731 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i13_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i4_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr1_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr1_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_732 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i12_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i5_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr1_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr1_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_733 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i11_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i6_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr2_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr2_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_734 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i10_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i7_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr2_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr2_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module cram_bus_SLICE_735 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i9_3_lut ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 \cram_bus/s_reg_rd_data_15__I_0_i8_3_lut ( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr3_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_addr3_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_736 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 i1_2_lut_adj_214( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 i1_2_lut_adj_207( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_737 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40057 s_desc_lo_8__bdd_3_lut_6213( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 s_desc_lo_5__bdd_3_lut_6197( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_738 ( input B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 i1275_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40077 s_desc_lo_5__bdd_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data3_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_739 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40033 \led_con_drv/i989_2_lut_rep_206 ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \led_con_drv/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_740 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 \shifter/tx/i3366_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \shifter/tx/i3377_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i7 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i6 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_741 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 \shifter/tx/i3244_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \shifter/tx/i3378_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_742 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 \shifter/tx/i3374_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \shifter/tx/i3375_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i3 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i2 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_743 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40058 \shifter/tx/i3260_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 \shifter/tx/i3376_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i5 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_2..addr_i0_i4 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_744 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40033 \shifter/rx/i1_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \shifter/shift_ctrl/i1_2_lut_3_lut_4_lut_adj_197 ( .A(A0), .B(B0), 
    .C(C0), .D(D0), .Z(F0));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i9 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_0..len_i0_i8 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_SLICE_745 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \shifter/shift_ctrl/i5_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40026 \shifter/shift_ctrl/i4855_2_lut ( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i1 ( .D0(M1_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \shifter/rx/s_op_fifo.buf_1..len_i0_i0 ( .D0(M0_dly), 
    .D1(VCCI), .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_rx_SLICE_746 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40068 \shifter/rx/s_count_r_9__I_107_2_lut_rep_131_3_lut_4_lut ( .A(A1), 
    .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \shifter/rx/s_count_r_9__I_105_2_lut_rep_118_3_lut_4_lut ( .A(A0), 
    .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/rx/s_addr_r2_i0_i0 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_747 ( input B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40033 \cram_bus/reg_wr_fifo/i6066_2_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 i5537_2_lut_rep_172_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data1_i0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_748 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40030 \cklgen_1khz/i5539_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \cklgen_1khz/i5511_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i11 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \ckgen_div_r/s_reg_i0_i10 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_749 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40255 \shifter/exec_ctrl/i6070_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40249 \shifter/exec_ctrl/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0003 \r3/s_reg_i0_i13 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \r3/s_reg_i0_i12 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40255 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_750 ( input C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40256 \shifter/exec_ctrl/i1_3_lut_adj_173 ( .A(A1), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 i1_2_lut_adj_208( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0006 \cram_bus/reg_wr_fifo/s_data0_i0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module shifter_ckgen_SLICE_870 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_871 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_i4 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i5 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_872 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_i6 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i7 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_873 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_div_lo_i8 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_div_lo_i9 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_878 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_879 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i4 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i5 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_880 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i6 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i7 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_881 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i8 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i9 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_884 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i15 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \shifter/ckgen/s_rtdiv_hi_r0_i2 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_885 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i3 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i4 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_886 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i5 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i6 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_887 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i7 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i8 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_888 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i1 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i10 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_889 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i11 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i12 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_890 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_r0_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_891 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i13 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_hi_i14 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_893 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i2 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i3 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_894 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i4 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i5 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_895 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i6 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i7 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_896 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i8 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_rtdiv_lo_i9 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module shifter_ckgen_SLICE_899 ( input M1, M0, CLK, output Q0, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  vmuxregsre0003 \shifter/ckgen/s_tcken_r0_106 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0003 \shifter/ckgen/s_tcken_r1_107 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module tp_rtck ( output PADDI, input tp_rtck );

  xo2iobuf tp_rtck_pad( .Z(PADDI), .PAD(tp_rtck));

  specify
    (tp_rtck => PADDI) = (0:0:0,0:0:0);
    $width (posedge tp_rtck, 0:0:0);
    $width (negedge tp_rtck, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module tp_tdo ( output PADDI, input tp_tdo );

  xo2iobuf tp_tdo_pad( .Z(PADDI), .PAD(tp_tdo));

  specify
    (tp_tdo => PADDI) = (0:0:0,0:0:0);
    $width (posedge tp_tdo, 0:0:0);
    $width (negedge tp_tdo, 0:0:0);
  endspecify

endmodule

module tp_dbgack ( output PADDI, input tp_dbgack );

  xo2iobuf tp_dbgack_pad( .Z(PADDI), .PAD(tp_dbgack));

  specify
    (tp_dbgack => PADDI) = (0:0:0,0:0:0);
    $width (posedge tp_dbgack, 0:0:0);
    $width (negedge tp_dbgack, 0:0:0);
  endspecify

endmodule

module uart_tx ( output PADDI, input uart_tx );

  xo2iobuf uart_tx_pad( .Z(PADDI), .PAD(uart_tx));

  specify
    (uart_tx => PADDI) = (0:0:0,0:0:0);
    $width (posedge uart_tx, 0:0:0);
    $width (negedge uart_tx, 0:0:0);
  endspecify

endmodule

module fsmc_nce ( output PADDI, input fsmc_nce );

  xo2iobuf fsmc_nce_pad( .Z(PADDI), .PAD(fsmc_nce));

  specify
    (fsmc_nce => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmc_nce, 0:0:0);
    $width (negedge fsmc_nce, 0:0:0);
  endspecify

endmodule

module fsmc_nwe ( output PADDI, input fsmc_nwe );

  xo2iobuf s_cram_next_st_1__N_24_pad_0( .Z(PADDI), .PAD(fsmc_nwe));

  specify
    (fsmc_nwe => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmc_nwe, 0:0:0);
    $width (negedge fsmc_nwe, 0:0:0);
  endspecify

endmodule

module fsmc_noe ( output PADDI, input fsmc_noe );

  xo2iobuf fsmc_noe_pad( .Z(PADDI), .PAD(fsmc_noe));

  specify
    (fsmc_noe => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmc_noe, 0:0:0);
    $width (negedge fsmc_noe, 0:0:0);
  endspecify

endmodule

module fsmc_clk ( output PADDI, input fsmc_clk );

  xo2iobuf fsmc_clk_pad( .Z(PADDI), .PAD(fsmc_clk));

  specify
    (fsmc_clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmc_clk, 0:0:0);
    $width (negedge fsmc_clk, 0:0:0);
  endspecify

endmodule

module mclk ( output PADDI, input mclk );

  xo2iobuf mclk_pad( .Z(PADDI), .PAD(mclk));

  specify
    (mclk => PADDI) = (0:0:0,0:0:0);
    $width (posedge mclk, 0:0:0);
    $width (negedge mclk, 0:0:0);
  endspecify

endmodule

module led_2 ( input PADDO, output led_2 );
  wire   GNDI;

  xo2iobuf0257 led_2_pad( .I(PADDO), .T(GNDI), .PAD(led_2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led_2) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0257 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module led_1 ( input PADDO, output led_1 );
  wire   GNDI;

  xo2iobuf0257 led_1_pad( .I(PADDO), .T(GNDI), .PAD(led_1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => led_1) = (0:0:0,0:0:0);
  endspecify

endmodule

module tp_rst ( input PADDT, PADDO, output tp_rst );
  wire   PADDT_NOTIN;

  xo2iobuf0258 tp_rst_pad( .I(PADDO), .T(PADDT_NOTIN), .PAD(tp_rst));
  inverter PADDT_INVERTERIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => tp_rst) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => tp_rst) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0258 ( input I, T, output PAD );

  OBZ INST5( .I(I), .T(T), .O(PAD));
endmodule

module tp_trst ( input PADDO, output tp_trst );
  wire   GNDI;

  xo2iobuf0257 tp_trst_pad( .I(PADDO), .T(GNDI), .PAD(tp_trst));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => tp_trst) = (0:0:0,0:0:0);
  endspecify

endmodule

module tp_tms ( input PADDO, output tp_tms );
  wire   GNDI;

  xo2iobuf0257 tp_tms_pad( .I(PADDO), .T(GNDI), .PAD(tp_tms));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => tp_tms) = (0:0:0,0:0:0);
  endspecify

endmodule

module tp_tdi ( input PADDO, output tp_tdi );
  wire   GNDI;

  xo2iobuf0257 tp_tdi_pad( .I(PADDO), .T(GNDI), .PAD(tp_tdi));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => tp_tdi) = (0:0:0,0:0:0);
  endspecify

endmodule

module tp_tck ( input PADDO, output tp_tck );
  wire   GNDI;

  xo2iobuf0257 tp_tck_pad( .I(PADDO), .T(GNDI), .PAD(tp_tck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => tp_tck) = (0:0:0,0:0:0);
  endspecify

endmodule

module tp_dbgrq ( input PADDO, output tp_dbgrq );
  wire   GNDI;

  xo2iobuf0257 tp_dbgrq_pad( .I(PADDO), .T(GNDI), .PAD(tp_dbgrq));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => tp_dbgrq) = (0:0:0,0:0:0);
  endspecify

endmodule

module uart_rx ( input PADDO, output uart_rx );
  wire   GNDI;

  xo2iobuf0257 uart_rx_pad( .I(PADDO), .T(GNDI), .PAD(uart_rx));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => uart_rx) = (0:0:0,0:0:0);
  endspecify

endmodule

module irq ( input PADDO, output irq );
  wire   GNDI;

  xo2iobuf0257 irq_pad( .I(PADDO), .T(GNDI), .PAD(irq));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => irq) = (0:0:0,0:0:0);
  endspecify

endmodule

module fsmc_d_0_ ( output PADDI, input PADDT, PADDO, inout fsmcd0 );

  xo2iobuf0259 fsmc_d_pad_0( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd0), 
    .PADI(fsmcd0));

  specify
    (PADDT => fsmcd0) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd0) = (0:0:0,0:0:0);
    (fsmcd0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd0, 0:0:0);
    $width (negedge fsmcd0, 0:0:0);
  endspecify

endmodule

module xo2iobuf0259 ( input I, T, output Z, PAD, input PADI );

  IBPD INST1( .I(PADI), .O(Z));
  OBZPD INST2( .I(I), .T(T), .O(PAD));
endmodule

module fsmc_d_1_ ( output PADDI, input PADDT, PADDO, inout fsmcd1 );

  xo2iobuf0259 fsmc_d_pad_1( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd1), 
    .PADI(fsmcd1));

  specify
    (PADDT => fsmcd1) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd1) = (0:0:0,0:0:0);
    (fsmcd1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd1, 0:0:0);
    $width (negedge fsmcd1, 0:0:0);
  endspecify

endmodule

module fsmc_d_2_ ( output PADDI, input PADDT, PADDO, inout fsmcd2 );

  xo2iobuf0259 fsmc_d_pad_2( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd2), 
    .PADI(fsmcd2));

  specify
    (PADDT => fsmcd2) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd2) = (0:0:0,0:0:0);
    (fsmcd2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd2, 0:0:0);
    $width (negedge fsmcd2, 0:0:0);
  endspecify

endmodule

module fsmc_d_3_ ( output PADDI, input PADDT, PADDO, inout fsmcd3 );

  xo2iobuf0259 fsmc_d_pad_3( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd3), 
    .PADI(fsmcd3));

  specify
    (PADDT => fsmcd3) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd3) = (0:0:0,0:0:0);
    (fsmcd3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd3, 0:0:0);
    $width (negedge fsmcd3, 0:0:0);
  endspecify

endmodule

module fsmc_d_4_ ( output PADDI, input PADDT, PADDO, inout fsmcd4 );

  xo2iobuf0259 fsmc_d_pad_4( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd4), 
    .PADI(fsmcd4));

  specify
    (PADDT => fsmcd4) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd4) = (0:0:0,0:0:0);
    (fsmcd4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd4, 0:0:0);
    $width (negedge fsmcd4, 0:0:0);
  endspecify

endmodule

module fsmc_d_5_ ( output PADDI, input PADDT, PADDO, inout fsmcd5 );

  xo2iobuf0259 fsmc_d_pad_5( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd5), 
    .PADI(fsmcd5));

  specify
    (PADDT => fsmcd5) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd5) = (0:0:0,0:0:0);
    (fsmcd5 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd5, 0:0:0);
    $width (negedge fsmcd5, 0:0:0);
  endspecify

endmodule

module fsmc_d_6_ ( output PADDI, input PADDT, PADDO, inout fsmcd6 );

  xo2iobuf0259 fsmc_d_pad_6( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd6), 
    .PADI(fsmcd6));

  specify
    (PADDT => fsmcd6) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd6) = (0:0:0,0:0:0);
    (fsmcd6 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd6, 0:0:0);
    $width (negedge fsmcd6, 0:0:0);
  endspecify

endmodule

module fsmc_d_7_ ( output PADDI, input PADDT, PADDO, inout fsmcd7 );

  xo2iobuf0259 fsmc_d_pad_7( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd7), 
    .PADI(fsmcd7));

  specify
    (PADDT => fsmcd7) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd7) = (0:0:0,0:0:0);
    (fsmcd7 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd7, 0:0:0);
    $width (negedge fsmcd7, 0:0:0);
  endspecify

endmodule

module fsmc_d_8_ ( output PADDI, input PADDT, PADDO, inout fsmcd8 );

  xo2iobuf0259 fsmc_d_pad_8( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd8), 
    .PADI(fsmcd8));

  specify
    (PADDT => fsmcd8) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd8) = (0:0:0,0:0:0);
    (fsmcd8 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd8, 0:0:0);
    $width (negedge fsmcd8, 0:0:0);
  endspecify

endmodule

module fsmc_d_9_ ( output PADDI, input PADDT, PADDO, inout fsmcd9 );

  xo2iobuf0259 fsmc_d_pad_9( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd9), 
    .PADI(fsmcd9));

  specify
    (PADDT => fsmcd9) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd9) = (0:0:0,0:0:0);
    (fsmcd9 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd9, 0:0:0);
    $width (negedge fsmcd9, 0:0:0);
  endspecify

endmodule

module fsmc_d_10_ ( output PADDI, input PADDT, PADDO, inout fsmcd10 );

  xo2iobuf0259 fsmc_d_pad_10( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd10), 
    .PADI(fsmcd10));

  specify
    (PADDT => fsmcd10) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd10) = (0:0:0,0:0:0);
    (fsmcd10 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd10, 0:0:0);
    $width (negedge fsmcd10, 0:0:0);
  endspecify

endmodule

module fsmc_d_11_ ( output PADDI, input PADDT, PADDO, inout fsmcd11 );

  xo2iobuf0259 fsmc_d_pad_11( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd11), 
    .PADI(fsmcd11));

  specify
    (PADDT => fsmcd11) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd11) = (0:0:0,0:0:0);
    (fsmcd11 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd11, 0:0:0);
    $width (negedge fsmcd11, 0:0:0);
  endspecify

endmodule

module fsmc_d_12_ ( output PADDI, input PADDT, PADDO, inout fsmcd12 );

  xo2iobuf0259 fsmc_d_pad_12( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd12), 
    .PADI(fsmcd12));

  specify
    (PADDT => fsmcd12) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd12) = (0:0:0,0:0:0);
    (fsmcd12 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd12, 0:0:0);
    $width (negedge fsmcd12, 0:0:0);
  endspecify

endmodule

module fsmc_d_13_ ( output PADDI, input PADDT, PADDO, inout fsmcd13 );

  xo2iobuf0259 fsmc_d_pad_13( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd13), 
    .PADI(fsmcd13));

  specify
    (PADDT => fsmcd13) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd13) = (0:0:0,0:0:0);
    (fsmcd13 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd13, 0:0:0);
    $width (negedge fsmcd13, 0:0:0);
  endspecify

endmodule

module fsmc_d_14_ ( output PADDI, input PADDT, PADDO, inout fsmcd14 );

  xo2iobuf0259 fsmc_d_pad_14( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd14), 
    .PADI(fsmcd14));

  specify
    (PADDT => fsmcd14) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd14) = (0:0:0,0:0:0);
    (fsmcd14 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd14, 0:0:0);
    $width (negedge fsmcd14, 0:0:0);
  endspecify

endmodule

module fsmc_d_15_ ( output PADDI, input PADDT, PADDO, inout fsmcd15 );

  xo2iobuf0259 fsmc_d_pad_15( .I(PADDO), .T(PADDT), .Z(PADDI), .PAD(fsmcd15), 
    .PADI(fsmcd15));

  specify
    (PADDT => fsmcd15) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => fsmcd15) = (0:0:0,0:0:0);
    (fsmcd15 => PADDI) = (0:0:0,0:0:0);
    $width (posedge fsmcd15, 0:0:0);
    $width (negedge fsmcd15, 0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  INV INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule

module desc_mem_n25380 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, DOA7, 
    DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, output 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, ADB7, 
    ADB8, ADB9, ADB10, ADB11, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, ADB7_dly, ADB8_dly, 
         ADB9_dly, ADB10_dly, ADB11_dly, DIB0_dly, DIB1_dly, DIB2_dly, 
         DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC_B \desc_mem/n25380_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(GNDI), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(GNDI), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC_B ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule

module desc_mem_n25370 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, DOA7, 
    DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, output 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, ADB7, 
    ADB8, ADB9, ADB10, ADB11, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, ADB7_dly, ADB8_dly, 
         ADB9_dly, ADB10_dly, ADB11_dly, DIB0_dly, DIB1_dly, DIB2_dly, 
         DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC0260 \desc_mem/n25370_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(GNDI), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(GNDI), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC0260 ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule

module ptr_mem_mem0 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, DOA7, 
    DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, output 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, ADB7, 
    ADB8, ADB9, ADB10, ADB11, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA11_dly, 
         ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, 
         CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, ADB7_dly, ADB8_dly, 
         ADB9_dly, ADB10_dly, ADB11_dly, DIB0_dly, DIB1_dly, DIB2_dly, 
         DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC0261 \ptr_mem/mem0_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(GNDI), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(GNDI), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC0261 ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule

module aux_mem_mem0 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, ADA3, output DOA8, DOA7, 
    DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input WEA, CLKA, CLKB, WEB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB1, ADB3, ADB4, 
    ADB5, ADB6, ADB7, ADB8, ADB9, ADB10, ADB12, DIB0, DIB1, DIB2, DIB3, DIB4, 
    DIB5, DIB6 );
  wire   VCCI, GNDI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA10_dly, ADA9_dly, 
         ADA8_dly, ADA7_dly, ADA6_dly, ADA5_dly, ADA4_dly, ADA3_dly, WEA_dly, 
         WEB_dly, CLKB_dly, ADB1_dly, ADB3_dly, ADB4_dly, ADB5_dly, ADB6_dly, 
         ADB7_dly, ADB8_dly, ADB9_dly, ADB10_dly, ADB12_dly, DIB0_dly, 
         DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  DP8KC_B \aux_mem/mem0_DP8KC ( .CEA(VCCI), .OCEA(VCCI), .CLKA(CLKA_dly), 
    .WEA(WEA_dly), .CSA0(GNDI), .CSA1(GNDI), .CSA2(GNDI), .RSTA(GNDI), 
    .CEB(VCCI), .OCEB(VCCI), .CLKB(CLKB_dly), .WEB(WEB_dly), .CSB0(GNDI), 
    .CSB1(GNDI), .CSB2(GNDI), .RSTB(GNDI), .DIA0(DIA0_dly), .DIA1(DIA1_dly), 
    .DIA2(DIA2_dly), .DIA3(DIA3_dly), .DIA4(DIA4_dly), .DIA5(DIA5_dly), 
    .DIA6(DIA6_dly), .DIA7(DIA7_dly), .DIA8(DIA8_dly), .ADA0(VCCI), 
    .ADA1(VCCI), .ADA2(GNDI), .ADA3(ADA3_dly), .ADA4(ADA4_dly), 
    .ADA5(ADA5_dly), .ADA6(ADA6_dly), .ADA7(ADA7_dly), .ADA8(ADA8_dly), 
    .ADA9(ADA9_dly), .ADA10(ADA10_dly), .ADA11(GNDI), .ADA12(GNDI), 
    .DIB0(DIB0_dly), .DIB1(DIB1_dly), .DIB2(DIB2_dly), .DIB3(DIB3_dly), 
    .DIB4(DIB4_dly), .DIB5(DIB5_dly), .DIB6(DIB6_dly), .DIB7(GNDI), 
    .DIB8(GNDI), .ADB0(VCCI), .ADB1(ADB1_dly), .ADB2(GNDI), .ADB3(ADB3_dly), 
    .ADB4(ADB4_dly), .ADB5(ADB5_dly), .ADB6(ADB6_dly), .ADB7(ADB7_dly), 
    .ADB8(ADB8_dly), .ADB9(ADB9_dly), .ADB10(ADB10_dly), .ADB11(GNDI), 
    .ADB12(ADB12_dly), .DOA0(DOA0), .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), 
    .DOA4(DOA4), .DOA5(DOA5), .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), 
    .DOB0(DOB0), .DOB1(DOB1), .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), 
    .DOB5(DOB5), .DOB6(DOB6), .DOB7(), .DOB8());
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (CLKA => DOA8) = (0:0:0,0:0:0);
    (CLKA => DOA7) = (0:0:0,0:0:0);
    (CLKA => DOA6) = (0:0:0,0:0:0);
    (CLKA => DOA5) = (0:0:0,0:0:0);
    (CLKA => DOA4) = (0:0:0,0:0:0);
    (CLKA => DOA3) = (0:0:0,0:0:0);
    (CLKA => DOA2) = (0:0:0,0:0:0);
    (CLKA => DOA1) = (0:0:0,0:0:0);
    (CLKA => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, ADA3, 0:0:0, 0:0:0,,,, CLKA_dly, ADA3_dly);
    $setuphold (posedge CLKA, WEA, 0:0:0, 0:0:0,,,, CLKA_dly, WEA_dly);
    $setuphold (posedge CLKB, WEB, 0:0:0, 0:0:0,,,, CLKB_dly, WEB_dly);
    $setuphold (posedge CLKB, ADB1, 0:0:0, 0:0:0,,,, CLKB_dly, ADB1_dly);
    $setuphold (posedge CLKB, ADB3, 0:0:0, 0:0:0,,,, CLKB_dly, ADB3_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB12, 0:0:0, 0:0:0,,,, CLKB_dly, ADB12_dly);
    $setuphold (posedge CLKB, DIB0, 0:0:0, 0:0:0,,,, CLKB_dly, DIB0_dly);
    $setuphold (posedge CLKB, DIB1, 0:0:0, 0:0:0,,,, CLKB_dly, DIB1_dly);
    $setuphold (posedge CLKB, DIB2, 0:0:0, 0:0:0,,,, CLKB_dly, DIB2_dly);
    $setuphold (posedge CLKB, DIB3, 0:0:0, 0:0:0,,,, CLKB_dly, DIB3_dly);
    $setuphold (posedge CLKB, DIB4, 0:0:0, 0:0:0,,,, CLKB_dly, DIB4_dly);
    $setuphold (posedge CLKB, DIB5, 0:0:0, 0:0:0,,,, CLKB_dly, DIB5_dly);
    $setuphold (posedge CLKB, DIB6, 0:0:0, 0:0:0,,,, CLKB_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module DP8KC_B ( input CEA, OCEA, CLKA, WEA, CSA0, CSA1, CSA2, RSTA, CEB, OCEB, 
    CLKB, WEB, CSB0, CSB1, CSB2, RSTB, DIA0, DIA1, DIA2, DIA3, DIA4, DIA5, 
    DIA6, DIA7, DIA8, ADA0, ADA1, ADA2, ADA3, ADA4, ADA5, ADA6, ADA7, ADA8, 
    ADA9, ADA10, ADA11, ADA12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, DIB6, DIB7, 
    DIB8, ADB0, ADB1, ADB2, ADB3, ADB4, ADB5, ADB6, ADB7, ADB8, ADB9, ADB10, 
    ADB11, ADB12, output DOA0, DOA1, DOA2, DOA3, DOA4, DOA5, DOA6, DOA7, DOA8, 
    DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, DOB7, DOB8 );

  DP8KC INST10( .DIA0(DIA0), .DIA1(DIA1), .DIA2(DIA2), .DIA3(DIA3), 
    .DIA4(DIA4), .DIA5(DIA5), .DIA6(DIA6), .DIA7(DIA7), .DIA8(DIA8), 
    .ADA0(ADA0), .ADA1(ADA1), .ADA2(ADA2), .ADA3(ADA3), .ADA4(ADA4), 
    .ADA5(ADA5), .ADA6(ADA6), .ADA7(ADA7), .ADA8(ADA8), .ADA9(ADA9), 
    .ADA10(ADA10), .ADA11(ADA11), .ADA12(ADA12), .CEA(CEA), .OCEA(OCEA), 
    .CLKA(CLKA), .WEA(WEA), .CSA0(CSA0), .CSA1(CSA1), .CSA2(CSA2), .RSTA(RSTA), 
    .DIB0(DIB0), .DIB1(DIB1), .DIB2(DIB2), .DIB3(DIB3), .DIB4(DIB4), 
    .DIB5(DIB5), .DIB6(DIB6), .DIB7(DIB7), .DIB8(DIB8), .ADB0(ADB0), 
    .ADB1(ADB1), .ADB2(ADB2), .ADB3(ADB3), .ADB4(ADB4), .ADB5(ADB5), 
    .ADB6(ADB6), .ADB7(ADB7), .ADB8(ADB8), .ADB9(ADB9), .ADB10(ADB10), 
    .ADB11(ADB11), .ADB12(ADB12), .CEB(CEB), .OCEB(OCEB), .CLKB(CLKB), 
    .WEB(WEB), .CSB0(CSB0), .CSB1(CSB1), .CSB2(CSB2), .RSTB(RSTB), .DOA0(DOA0), 
    .DOA1(DOA1), .DOA2(DOA2), .DOA3(DOA3), .DOA4(DOA4), .DOA5(DOA5), 
    .DOA6(DOA6), .DOA7(DOA7), .DOA8(DOA8), .DOB0(DOB0), .DOB1(DOB1), 
    .DOB2(DOB2), .DOB3(DOB3), .DOB4(DOB4), .DOB5(DOB5), .DOB6(DOB6), 
    .DOB7(DOB7), .DOB8(DOB8));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_A = "0b000";
  defparam INST10.CSDECODE_B = "0b000";
  defparam INST10.DATA_WIDTH_A = 9;
  defparam INST10.DATA_WIDTH_B = 9;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE_A = "NOREG";
  defparam INST10.REGMODE_B = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
  defparam INST10.WRITEMODE_A = "READBEFOREWRITE";
  defparam INST10.WRITEMODE_B = "READBEFOREWRITE";
endmodule

module rx_mem_mem1 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, 
    DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, 
    ADB7, ADB8, ADB9, ADB10, ADB11, ADB12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, 
    DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, 
         ADA11_dly, ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, 
         ADA5_dly, ADA4_dly, CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, 
         ADB7_dly, ADB8_dly, ADB9_dly, ADB10_dly, ADB11_dly, ADB12_dly, 
         DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC0262 \rx_mem/mem1_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(ADA12_dly), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(ADB12_dly), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKB, ADB12, 0:0:0, 0:0:0,,,, CLKB_dly, ADB12_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC0262 ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule

module rx_mem_mem0 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, 
    DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, 
    ADB7, ADB8, ADB9, ADB10, ADB11, ADB12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, 
    DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, 
         ADA11_dly, ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, 
         ADA5_dly, ADA4_dly, CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, 
         ADB7_dly, ADB8_dly, ADB9_dly, ADB10_dly, ADB11_dly, ADB12_dly, 
         DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC0263 \rx_mem/mem0_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(ADA12_dly), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(ADB12_dly), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKB, ADB12, 0:0:0, 0:0:0,,,, CLKB_dly, ADB12_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC0263 ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule

module tx_mem_mem0 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, 
    DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, 
    ADB7, ADB8, ADB9, ADB10, ADB11, ADB12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, 
    DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, 
         ADA11_dly, ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, 
         ADA5_dly, ADA4_dly, CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, 
         ADB7_dly, ADB8_dly, ADB9_dly, ADB10_dly, ADB11_dly, ADB12_dly, 
         DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC0264 \tx_mem/mem0_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(ADA12_dly), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(ADB12_dly), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKB, ADB12, 0:0:0, 0:0:0,,,, CLKB_dly, ADB12_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC0264 ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule

module tx_mem_mem1 ( input DIA8, DIA7, DIA6, DIA5, DIA4, DIA3, DIA2, DIA1, 
    DIA0, ADA12, ADA11, ADA10, ADA9, ADA8, ADA7, ADA6, ADA5, ADA4, output DOA8, 
    DOA7, DOA6, DOA5, DOA4, DOA3, DOA2, DOA1, DOA0, input CEA, CLKA, CLKB, 
    output DOB0, DOB1, DOB2, DOB3, DOB4, DOB5, DOB6, input ADB4, ADB5, ADB6, 
    ADB7, ADB8, ADB9, ADB10, ADB11, ADB12, DIB0, DIB1, DIB2, DIB3, DIB4, DIB5, 
    DIB6 );
  wire   GNDI, VCCI, DIA8_dly, CLKA_dly, DIA7_dly, DIA6_dly, DIA5_dly, 
         DIA4_dly, DIA3_dly, DIA2_dly, DIA1_dly, DIA0_dly, ADA12_dly, 
         ADA11_dly, ADA10_dly, ADA9_dly, ADA8_dly, ADA7_dly, ADA6_dly, 
         ADA5_dly, ADA4_dly, CEA_dly, ADB4_dly, CLKB_dly, ADB5_dly, ADB6_dly, 
         ADB7_dly, ADB8_dly, ADB9_dly, ADB10_dly, ADB11_dly, ADB12_dly, 
         DIB0_dly, DIB1_dly, DIB2_dly, DIB3_dly, DIB4_dly, DIB5_dly, DIB6_dly;

  PDPW8KC0265 \tx_mem/mem1_PDPW8KC ( .CEW(CEA_dly), .CLKW(CLKA_dly), 
    .CSW0(GNDI), .CSW1(GNDI), .CSW2(GNDI), .CER(VCCI), .OCER(VCCI), 
    .CLKR(CLKB_dly), .CSR0(GNDI), .CSR1(GNDI), .CSR2(GNDI), .RST(GNDI), 
    .BE0(VCCI), .BE1(VCCI), .DI0(DIA0_dly), .DI1(DIA1_dly), .DI2(DIA2_dly), 
    .DI3(DIA3_dly), .DI4(DIA4_dly), .DI5(DIA5_dly), .DI6(DIA6_dly), 
    .DI7(DIA7_dly), .DI8(DIA8_dly), .DI9(DIB0_dly), .DI10(DIB1_dly), 
    .DI11(DIB2_dly), .DI12(DIB3_dly), .DI13(DIB4_dly), .DI14(DIB5_dly), 
    .DI15(DIB6_dly), .DI16(GNDI), .DI17(GNDI), .ADW0(ADA4_dly), 
    .ADW1(ADA5_dly), .ADW2(ADA6_dly), .ADW3(ADA7_dly), .ADW4(ADA8_dly), 
    .ADW5(ADA9_dly), .ADW6(ADA10_dly), .ADW7(ADA11_dly), .ADW8(ADA12_dly), 
    .ADR0(GNDI), .ADR1(GNDI), .ADR2(GNDI), .ADR3(GNDI), .ADR4(ADB4_dly), 
    .ADR5(ADB5_dly), .ADR6(ADB6_dly), .ADR7(ADB7_dly), .ADR8(ADB8_dly), 
    .ADR9(ADB9_dly), .ADR10(ADB10_dly), .ADR11(ADB11_dly), .ADR12(ADB12_dly), 
    .DO0(DOB0), .DO1(DOB1), .DO2(DOB2), .DO3(DOB3), .DO4(DOB4), .DO5(DOB5), 
    .DO6(DOB6), .DO7(), .DO8(), .DO9(DOA0), .DO10(DOA1), .DO11(DOA2), 
    .DO12(DOA3), .DO13(DOA4), .DO14(DOA5), .DO15(DOA6), .DO16(DOA7), 
    .DO17(DOA8));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLKB => DOA8) = (0:0:0,0:0:0);
    (CLKB => DOA7) = (0:0:0,0:0:0);
    (CLKB => DOA6) = (0:0:0,0:0:0);
    (CLKB => DOA5) = (0:0:0,0:0:0);
    (CLKB => DOA4) = (0:0:0,0:0:0);
    (CLKB => DOA3) = (0:0:0,0:0:0);
    (CLKB => DOA2) = (0:0:0,0:0:0);
    (CLKB => DOA1) = (0:0:0,0:0:0);
    (CLKB => DOA0) = (0:0:0,0:0:0);
    (CLKB => DOB0) = (0:0:0,0:0:0);
    (CLKB => DOB1) = (0:0:0,0:0:0);
    (CLKB => DOB2) = (0:0:0,0:0:0);
    (CLKB => DOB3) = (0:0:0,0:0:0);
    (CLKB => DOB4) = (0:0:0,0:0:0);
    (CLKB => DOB5) = (0:0:0,0:0:0);
    (CLKB => DOB6) = (0:0:0,0:0:0);
    $setuphold (posedge CLKA, DIA8, 0:0:0, 0:0:0,,,, CLKA_dly, DIA8_dly);
    $setuphold (posedge CLKA, DIA7, 0:0:0, 0:0:0,,,, CLKA_dly, DIA7_dly);
    $setuphold (posedge CLKA, DIA6, 0:0:0, 0:0:0,,,, CLKA_dly, DIA6_dly);
    $setuphold (posedge CLKA, DIA5, 0:0:0, 0:0:0,,,, CLKA_dly, DIA5_dly);
    $setuphold (posedge CLKA, DIA4, 0:0:0, 0:0:0,,,, CLKA_dly, DIA4_dly);
    $setuphold (posedge CLKA, DIA3, 0:0:0, 0:0:0,,,, CLKA_dly, DIA3_dly);
    $setuphold (posedge CLKA, DIA2, 0:0:0, 0:0:0,,,, CLKA_dly, DIA2_dly);
    $setuphold (posedge CLKA, DIA1, 0:0:0, 0:0:0,,,, CLKA_dly, DIA1_dly);
    $setuphold (posedge CLKA, DIA0, 0:0:0, 0:0:0,,,, CLKA_dly, DIA0_dly);
    $setuphold (posedge CLKA, ADA12, 0:0:0, 0:0:0,,,, CLKA_dly, ADA12_dly);
    $setuphold (posedge CLKA, ADA11, 0:0:0, 0:0:0,,,, CLKA_dly, ADA11_dly);
    $setuphold (posedge CLKA, ADA10, 0:0:0, 0:0:0,,,, CLKA_dly, ADA10_dly);
    $setuphold (posedge CLKA, ADA9, 0:0:0, 0:0:0,,,, CLKA_dly, ADA9_dly);
    $setuphold (posedge CLKA, ADA8, 0:0:0, 0:0:0,,,, CLKA_dly, ADA8_dly);
    $setuphold (posedge CLKA, ADA7, 0:0:0, 0:0:0,,,, CLKA_dly, ADA7_dly);
    $setuphold (posedge CLKA, ADA6, 0:0:0, 0:0:0,,,, CLKA_dly, ADA6_dly);
    $setuphold (posedge CLKA, ADA5, 0:0:0, 0:0:0,,,, CLKA_dly, ADA5_dly);
    $setuphold (posedge CLKA, ADA4, 0:0:0, 0:0:0,,,, CLKA_dly, ADA4_dly);
    $setuphold (posedge CLKA, CEA, 0:0:0, 0:0:0,,,, CLKA_dly, CEA_dly);
    $setuphold (posedge CLKB, ADB4, 0:0:0, 0:0:0,,,, CLKB_dly, ADB4_dly);
    $setuphold (posedge CLKB, ADB5, 0:0:0, 0:0:0,,,, CLKB_dly, ADB5_dly);
    $setuphold (posedge CLKB, ADB6, 0:0:0, 0:0:0,,,, CLKB_dly, ADB6_dly);
    $setuphold (posedge CLKB, ADB7, 0:0:0, 0:0:0,,,, CLKB_dly, ADB7_dly);
    $setuphold (posedge CLKB, ADB8, 0:0:0, 0:0:0,,,, CLKB_dly, ADB8_dly);
    $setuphold (posedge CLKB, ADB9, 0:0:0, 0:0:0,,,, CLKB_dly, ADB9_dly);
    $setuphold (posedge CLKB, ADB10, 0:0:0, 0:0:0,,,, CLKB_dly, ADB10_dly);
    $setuphold (posedge CLKB, ADB11, 0:0:0, 0:0:0,,,, CLKB_dly, ADB11_dly);
    $setuphold (posedge CLKB, ADB12, 0:0:0, 0:0:0,,,, CLKB_dly, ADB12_dly);
    $setuphold (posedge CLKA, DIB0, 0:0:0, 0:0:0,,,, CLKA_dly, DIB0_dly);
    $setuphold (posedge CLKA, DIB1, 0:0:0, 0:0:0,,,, CLKA_dly, DIB1_dly);
    $setuphold (posedge CLKA, DIB2, 0:0:0, 0:0:0,,,, CLKA_dly, DIB2_dly);
    $setuphold (posedge CLKA, DIB3, 0:0:0, 0:0:0,,,, CLKA_dly, DIB3_dly);
    $setuphold (posedge CLKA, DIB4, 0:0:0, 0:0:0,,,, CLKA_dly, DIB4_dly);
    $setuphold (posedge CLKA, DIB5, 0:0:0, 0:0:0,,,, CLKA_dly, DIB5_dly);
    $setuphold (posedge CLKA, DIB6, 0:0:0, 0:0:0,,,, CLKA_dly, DIB6_dly);
    $width (posedge CLKA, 0:0:0);
    $width (negedge CLKA, 0:0:0);
    $width (posedge CLKB, 0:0:0);
    $width (negedge CLKB, 0:0:0);
  endspecify

endmodule

module PDPW8KC0265 ( input CEW, CLKW, CSW0, CSW1, CSW2, CER, OCER, CLKR, CSR0, 
    CSR1, CSR2, RST, BE0, BE1, DI0, DI1, DI2, DI3, DI4, DI5, DI6, DI7, DI8, 
    DI9, DI10, DI11, DI12, DI13, DI14, DI15, DI16, DI17, ADW0, ADW1, ADW2, 
    ADW3, ADW4, ADW5, ADW6, ADW7, ADW8, ADR0, ADR1, ADR2, ADR3, ADR4, ADR5, 
    ADR6, ADR7, ADR8, ADR9, ADR10, ADR11, ADR12, output DO0, DO1, DO2, DO3, 
    DO4, DO5, DO6, DO7, DO8, DO9, DO10, DO11, DO12, DO13, DO14, DO15, DO16, 
    DO17 );

  PDPW8KC INST10( .DI0(DI0), .DI1(DI1), .DI2(DI2), .DI3(DI3), .DI4(DI4), 
    .DI5(DI5), .DI6(DI6), .DI7(DI7), .DI8(DI8), .DI9(DI9), .DI10(DI10), 
    .DI11(DI11), .DI12(DI12), .DI13(DI13), .DI14(DI14), .DI15(DI15), 
    .DI16(DI16), .DI17(DI17), .ADW0(ADW0), .ADW1(ADW1), .ADW2(ADW2), 
    .ADW3(ADW3), .ADW4(ADW4), .ADW5(ADW5), .ADW6(ADW6), .ADW7(ADW7), 
    .ADW8(ADW8), .BE0(BE0), .BE1(BE1), .CEW(CEW), .CLKW(CLKW), .CSW0(CSW0), 
    .CSW1(CSW1), .CSW2(CSW2), .ADR0(ADR0), .ADR1(ADR1), .ADR2(ADR2), 
    .ADR3(ADR3), .ADR4(ADR4), .ADR5(ADR5), .ADR6(ADR6), .ADR7(ADR7), 
    .ADR8(ADR8), .ADR9(ADR9), .ADR10(ADR10), .ADR11(ADR11), .ADR12(ADR12), 
    .CER(CER), .OCER(OCER), .CLKR(CLKR), .CSR0(CSR0), .CSR1(CSR1), .CSR2(CSR2), 
    .RST(RST), .DO0(DO0), .DO1(DO1), .DO2(DO2), .DO3(DO3), .DO4(DO4), 
    .DO5(DO5), .DO6(DO6), .DO7(DO7), .DO8(DO8), .DO9(DO9), .DO10(DO10), 
    .DO11(DO11), .DO12(DO12), .DO13(DO13), .DO14(DO14), .DO15(DO15), 
    .DO16(DO16), .DO17(DO17));
  defparam INST10.ASYNC_RESET_RELEASE = "SYNC";
  defparam INST10.CSDECODE_R = "0b000";
  defparam INST10.CSDECODE_W = "0b000";
  defparam INST10.DATA_WIDTH_R = 18;
  defparam INST10.DATA_WIDTH_W = 18;
  defparam INST10.GSR = "DISABLED";

    defparam INST10.INITVAL_00 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_01 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_02 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_03 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_04 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_05 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_06 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_07 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_08 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_09 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_0F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_10 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_11 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_12 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_13 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_14 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_15 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_16 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_17 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_18 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_19 = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1A = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1B = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1C = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1D = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1E = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";

    defparam INST10.INITVAL_1F = "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000";
  defparam INST10.INIT_DATA = "STATIC";
  defparam INST10.REGMODE = "NOREG";
  defparam INST10.RESETMODE = "SYNC";
endmodule
